1
00:00:00,000 --> 00:00:04,350
Bu zamana kadar gördüğünüz RNN mimarisinde girişlerin sayısı,

2
00:00:04,350 --> 00:00:08,070
Tx, çıkışların sayısına yani Ty'ye eşitti.

3
00:00:08,070 --> 00:00:10,235
Görülen o ki, başka uygulamalar için,

4
00:00:10,235 --> 00:00:13,350
Tx ve Ty her zaman aynı olmayabilir,

5
00:00:13,350 --> 00:00:14,430
ve bu videoda,

6
00:00:14,430 --> 00:00:18,540
daha geniş RNN mimarileri göreceksiniz.

7
00:00:18,540 --> 00:00:22,830
Bu sunumu, bu haftanın ilk videosundan hatırlıyor olabilirsiniz.

8
00:00:22,830 --> 00:00:29,505
Burada x girişi ve y çıkışı farklı tiplerde olabiliyordu.

9
00:00:29,505 --> 00:00:34,530
Ve her zaman Tx'in Ty ile eşit olması gerekmiyor.

10
00:00:34,530 --> 00:00:36,720
Özel olarak bu örnekte,

11
00:00:36,720 --> 00:00:40,490
Tx bir uzunluklu olabileceği gibi, boş da olabilir.

12
00:00:40,490 --> 00:00:44,160
Ve, film değerlendirme sınıflandırması gibi bir örnekte,

13
00:00:44,160 --> 00:00:47,565
y çıkışı sadece 1'den 5'e kadar bir tamsayı olabilirdi.

14
00:00:47,565 --> 00:00:49,995
Giriş bir dizi olmasına rağmen...

15
00:00:49,995 --> 00:00:52,040
Ve varlık ismi tanımlama (name entity recognition) için

16
00:00:52,040 --> 00:00:53,700
kullandığımız örnekte,

17
00:00:53,700 --> 00:00:57,675
giriş uzunluğu ve çıkış uzunluğu aynı olacak şekildedir.

18
00:00:57,675 --> 00:01:00,990
Giriş uzunluğu ve çıkış uzunluğunun farklı olduğu hallerde bazı problemler yaşanabilmektedir.

19
00:01:00,990 --> 00:01:04,650
Bunların hepsi bizim dizilerimiz ancak uzunlukları farklı durumda...

20
00:01:04,650 --> 00:01:08,700
Bu, Fransızca bir cümlenin

21
00:01:08,700 --> 00:01:14,153
İngilizce bir cümle ile iki farklı sayıda kelimeye sahip olup aynı şeyi anlatan bir makine çevirisi gibidir.

22
00:01:14,153 --> 00:01:16,290
Bu durumda yapabileceğimiz şey,

23
00:01:16,290 --> 00:01:20,835
temel RNN mimarisi ile tüm bu problemlere çözüm bulmaktır.

24
00:01:20,835 --> 00:01:25,560
Bu videodaki sunumda, Andrej Karpathy'nin

25
00:01:25,560 --> 00:01:30,709
Tekrarlı Sinir Ağlarının Anlamsız Etkenliği (The Unreasonable Effectiveness of Recurrent Neural Networks) başlıklı blog yazısından esinlenilmiştir.

26
00:01:30,709 --> 00:01:32,760
Bazı örnekler üzerinde konuyu inceleyelim.

27
00:01:32,760 --> 00:01:36,750
Bu zamana kadar gördüğünüz örnekte Tx, Ty'ye eşitti.

28
00:01:36,750 --> 00:01:40,610
Burada bir giriş dizisi x(1),

29
00:01:40,610 --> 00:01:43,365
x(2), .... , x(Tx) elemanlarına sahip olup,

30
00:01:43,365 --> 00:01:48,930
bir tekrarlayan sinir ağı (recurrent neural network) mevcuttur.

31
00:01:48,930 --> 00:01:55,344
Bu ağ şu şekilde çalışmaktadır: x(1) girişimiz ile birlikte y şapka (1),

32
00:01:55,344 --> 00:02:03,295
y şapka (2) ve bunun gibi y(Ty)'ye kadar devam.

33
00:02:03,295 --> 00:02:07,570
Bundan önceki diyagramlarda,

34
00:02:07,570 --> 00:02:11,045
nöronları göstermek için çemberler çiziyordum,

35
00:02:11,045 --> 00:02:15,010
ancak bu videonun büyük kısmında bu küçük çemberleri kullanacağım.

36
00:02:15,010 --> 00:02:17,428
Bu, gösterimi daha basit bir hale getirmektedir.

37
00:02:17,428 --> 00:02:23,875
Buna çoktan çoğa (many-to-many) mimarisi diyebilirsiniz.

38
00:02:23,875 --> 00:02:27,370
Çünkü giriş dizisinde bir çok giriş vardır,

39
00:02:27,370 --> 00:02:31,660
ve çıkış dizisinde bir çok çıkış bulunmaktadır.

40
00:02:31,660 --> 00:02:34,210
Şimdi, farklı bir örneği inceleyelim.

41
00:02:34,210 --> 00:02:38,680
Diyelim ki, bir duygu sınıflandırmasını adreslemek istiyorsunuz.

42
00:02:38,680 --> 00:02:42,370
Burada, x bir metin parçası olabilir.

43
00:02:42,370 --> 00:02:45,255
Bu, bir film değerlendirmesi olabilir ve diyebilir ki,

44
00:02:45,255 --> 00:02:46,977
"Bu filmde beğenilecek hiç bir şey yok."

45
00:02:46,977 --> 00:02:49,045
Bu durumda x, dizi haline gelecek,

46
00:02:49,045 --> 00:02:51,760
ve y, 1'den 5'e kadar bir sayı olacaktır.

47
00:02:51,760 --> 00:02:53,580
0 veya 1 de olabilir.

48
00:02:53,580 --> 00:02:55,830
Bu, pozitif bir değerlendirme veya negatif bir değerlendirmedir.

49
00:02:55,830 --> 00:02:58,720
Veya 1-5 arasında bir sayı da olabilir.

50
00:02:58,720 --> 00:03:00,213
Sizce bu film bir yıldız mı alır,

51
00:03:00,213 --> 00:03:02,810
iki yıldız mı, üç, dört veya beş yıldız mı alır?

52
00:03:02,810 --> 00:03:07,957
Yani bu durumda, sinir ağı mimarisini aşağıdaki şekilde basitleştirebiliriz.

53
00:03:07,957 --> 00:03:12,740
x(1) ve x(2)'yi giriş olarak alacağım.

54
00:03:12,740 --> 00:03:15,996
Bu sayede kelimeleri bir seferde girmiş olacağım.

55
00:03:15,996 --> 00:03:18,910
Böylece girilen metin şu olsaydı,

56
00:03:18,910 --> 00:03:21,036
"There is nothing to like in this movie."

57
00:03:21,036 --> 00:03:26,235
Bu şekilde giriş, "There is nothing to like in this movie." olacaktı.

58
00:03:26,235 --> 00:03:30,710
Ve her bir zaman biriminde bir çıkış kullanmak gerekiyor olması yerine,

59
00:03:30,710 --> 00:03:35,410
RNN'nin tüm cümleyi okumasını ve tüm cümleyi almış olduğundan çıkışı

60
00:03:35,410 --> 00:03:40,949
son zaman biriminde y olarak vermesini sağlayabiliriz.

61
00:03:40,949 --> 00:03:47,170
Böylece, bu sinir ağı, bir çoktan-bire (many to one) mimari olabilirdi.

62
00:03:47,170 --> 00:03:48,710
Çünkü çok girişli bir sistemde,

63
00:03:48,710 --> 00:03:53,375
bir çok kelime girişi olmasına rağmen, tek bir çıkış olmaktadır.

64
00:03:53,375 --> 00:03:56,260
Bütünlüğü sağlamak adına,

65
00:03:56,260 --> 00:04:01,675
birden-bire (one to one) mimari de mevcuttur.

66
00:04:01,675 --> 00:04:07,300
Bu durum için daha az ilgi çekici diyebiliriz.

67
00:04:07,300 --> 00:04:09,315
Standart sinir ağı ne kadar küçük olursa,

68
00:04:09,315 --> 00:04:12,330
bir kaç x girişi ile sadece bir kaç y çıkışı alabiliyoruz.

69
00:04:12,330 --> 00:04:14,980
Ve bu bahsettiğimiz sinir ağı tipleri,

70
00:04:14,980 --> 00:04:18,438
bu dizide ilk iki derste bahsedecek olduklarımızdır.

71
00:04:18,438 --> 00:04:20,950
Şimdi, çoktan bire'ye ek olarak,

72
00:04:20,950 --> 00:04:24,630
birden çoğa mimarisi de mevcuttur.

73
00:04:24,630 --> 00:04:33,615
Birden çoğa sinir ağı mimarisinin bir örneği, müzik oluşumudur.

74
00:04:33,615 --> 00:04:37,540
Ve gerçekte, bunu kendiniz

75
00:04:37,540 --> 00:04:41,765
bu ders için temel örnekte bulunlardan birisi gibi, bir sinir ağı,

76
00:04:41,765 --> 00:04:48,963
ve bu nota seti çıktıları ile bir müzik parçasına karşılık gelecek şekilde uygulamanız gerekecektir..

77
00:04:48,963 --> 00:04:51,685
Ve x girişi, sadece bir tamsayı olabilecektir.

78
00:04:51,685 --> 00:04:56,120
Bu, bize ne çeşit bir müzik istediğinizi veya istediğiniz müzik parçasının ilk notasının ne olacağını gösterecektir.

79
00:04:56,120 --> 00:04:58,225
ve bir giriş olsun istemiyorsanız,

80
00:04:58,225 --> 00:05:02,209
x boş bir giriş de olabilir, hepsi sıfır vektörlerden de oluşabilir.

81
00:05:02,209 --> 00:05:07,045
Bunun için, sinir ağı mimarisi, sizin x girişiniz olacaktır.

82
00:05:07,045 --> 00:05:10,210
Ve RNN çıkışınız olacaktır.

83
00:05:10,210 --> 00:05:13,075
İlk değer, ve sonra,

84
00:05:13,075 --> 00:05:17,348
daha fazla giriş ve çıkış olmayacaktır.

85
00:05:17,348 --> 00:05:20,950
İkinci değer ve çıkışa kadar devam.

86
00:05:20,950 --> 00:05:24,055
Üçüncü değer ve bu şekilde,

87
00:05:24,055 --> 00:05:29,845
müzik parçasının son notalarını oluşturana kadar gider.

88
00:05:29,845 --> 00:05:34,606
İsterseniz, bu girişi a(0) olarak da alabilirsiniz.

89
00:05:34,606 --> 00:05:38,200
Bir sonraki videoda göreceğiniz bir teknik konu da şudur:

90
00:05:38,200 --> 00:05:40,300
Gerçekten diziler oluştururken,

91
00:05:40,300 --> 00:05:45,490
genellikle bu ilk oluşan çıkışı alıp bir sonraki katmana giriş olarak kullanırsınız.

92
00:05:45,490 --> 00:05:50,371
Böylece, ağ mimarisi bu şekle dönüşür.

93
00:05:50,371 --> 00:05:52,690
Çoktan çoka ile ilgili çok konuştuk.

94
00:05:52,690 --> 00:05:55,965
Çoktan bire, birden çoğa ve birden bire için de aynı şekilde...

95
00:05:55,965 --> 00:05:59,215
Burada bahsedilmesi gereken ve ilginç olan

96
00:05:59,215 --> 00:06:03,475
bir çoktan çoğa örneği daha mevcuttur.

97
00:06:03,475 --> 00:06:07,240
O da, giriş ve çıkış uzunluklarının farklı olması durumudur.

98
00:06:07,240 --> 00:06:09,390
Çoktan çoğa örneğinde,

99
00:06:09,390 --> 00:06:14,545
biraz önce görmüştünüz, giriş uzunluğu ve çıkış uzunluğu tam olarak aynı olmak zorundaydı.

100
00:06:14,545 --> 00:06:17,903
Makine çevirisi gibi bir uygulama için,

101
00:06:17,903 --> 00:06:20,380
giriş cümlesindeki kelime sayısı,

102
00:06:20,380 --> 00:06:21,480
diyelim ki Fransızca bir cümle olsun,

103
00:06:21,480 --> 00:06:23,230
ve çıkış cümlesindeki kalime sayısı,

104
00:06:23,230 --> 00:06:26,065
diyelim ki tercüme İngilizce'ye yapılsın,

105
00:06:26,065 --> 00:06:28,462
bu cümleler farklı uzunluklarda olabilecektir.

106
00:06:28,462 --> 00:06:33,515
Bu durumda, bir sinir ağı oluşturabileceğiniz alternatif yeni bir ağ mimarisi vardır.

107
00:06:33,515 --> 00:06:36,930
İlk olarak cümleyi okursunuz.

108
00:06:36,930 --> 00:06:38,838
Yani ilk olarak girişi okursunuz,

109
00:06:38,838 --> 00:06:41,695
diyelim ki İngilizce'ye çevirmek istediğiniz Fransız cümleyi...

110
00:06:41,695 --> 00:06:44,065
Ve bunu yaptıktan sonra,

111
00:06:44,065 --> 00:06:49,295
çevirinin sinir ağı çıktısına sahip olursunuz.

112
00:06:49,295 --> 00:06:54,560
y'nin tüm (Ty) şapkalı halleri gibi...

113
00:06:54,560 --> 00:06:56,070
Ve bu şekilde, bu mimari ile birlikte,

114
00:06:56,070 --> 00:06:59,675
Tx ve Ty farklı uzunluklarda olabilir.

115
00:06:59,675 --> 00:07:02,740
Ve yine, a(0) üzerine çizebilirsiniz [duyulmaz].

116
00:07:02,740 --> 00:07:07,775
Ve böylece, bu kolineer ağ mimarisinin iki ayrı parçası bulunacaktır.

117
00:07:07,775 --> 00:07:10,910
Girişi kabul eden kodlayıcı mevcut olacaktır,

118
00:07:10,910 --> 00:07:13,040
giriş Fransızca bir cümle olsun diyelim,

119
00:07:13,040 --> 00:07:14,530
bir kod çözücü olacaktır,

120
00:07:14,530 --> 00:07:17,125
bu çözücü cümleyi okuyacak ve

121
00:07:17,125 --> 00:07:21,505
tercümeyi farklı bir ilde çıkış olarak verecektir.

122
00:07:21,505 --> 00:07:26,140
Bu, çoktan çoka mimari için bir örnektir.

123
00:07:26,140 --> 00:07:27,250
Böylece, bu haftanın sonunda,

124
00:07:27,250 --> 00:07:31,090
bu tip mimariler oluşturmak için

125
00:07:31,090 --> 00:07:35,629
gereken tüm bileşenleri öğrenmiş oluyorsunuz.

126
00:07:35,629 --> 00:07:37,540
Ve teknik olarak,

127
00:07:37,540 --> 00:07:41,420
sadece dördüncü hafta bahsedecek olduğumuz diğer bir mimari de mevcuttur.

128
00:07:41,420 --> 00:07:42,890
Bu da dikkat tabanlı (attention-based) mimaridir.

129
00:07:42,890 --> 00:07:50,173
Bu konu, bu zamana kadar yaptığımız çizimlerde tam olarak kapsanmamış olabilir.

130
00:07:50,173 --> 00:07:55,545
Son olarak geniş RNN mimari çeşitlerini özetlemek gerekirse,

131
00:07:55,545 --> 00:08:00,590
birden bire vardır. Birden bire olsa bile,

132
00:08:00,590 --> 00:08:02,010
ona bunu verebilirdik,

133
00:08:02,010 --> 00:08:04,380
bu, sadece standart bir sinir ağıdır.

134
00:08:04,380 --> 00:08:06,560
Aslında bunun için bir RNN'ye ihtiyacınız yoktur.

135
00:08:06,560 --> 00:08:10,312
Ancak birden çoğa mimari mevcuttur.

136
00:08:10,312 --> 00:08:15,550
Buna örnek olarak müzik oluşturma veya dizi oluşturmayı göstermiştik.

137
00:08:15,550 --> 00:08:17,975
Ve sonra, çoktan bire mimari vardır.

138
00:08:17,975 --> 00:08:20,240
Buna örnek, değerlendirmelerin sınıflandırmasıydı.

139
00:08:20,240 --> 00:08:24,860
Burada, tüm metni bir film değerlendirmesi ile okumak isteyebilirsiniz.

140
00:08:24,860 --> 00:08:28,940
Sonra, filmi beğenip beğenmediklerini buradan çıkartmaya çalışırsınız.

141
00:08:28,940 --> 00:08:32,945
Çoktan çoğa vardı, isim algılama ve buradaki örnekte

142
00:08:32,945 --> 00:08:37,862
Tx, Ty'ye eşitti.

143
00:08:37,862 --> 00:08:42,665
Son olarak, çoktan çoğa mimarinin bu diğer versiyonu bulunmaktadır.

144
00:08:42,665 --> 00:08:45,230
Bu versiyonda makine çevirisi tarzı uygulamalar mevcut olup,

145
00:08:45,230 --> 00:08:48,790
Tx ve Ty'nin birbirine aynı olmasına gerek kalmıyordu.

146
00:08:48,790 --> 00:08:51,620
Bu durumda şu anda siz artık yapı taşlarının çoğunu biliyor haldesiniz.

147
00:08:51,620 --> 00:08:54,595
Ve işin geneli, bu sinir ağlarından oluşmaktadır.

148
00:08:54,595 --> 00:08:58,295
Sadece dizi oluşturma için işin bazı incelikleri hariç...

149
00:08:58,295 --> 00:09:01,400
Bu konuyu bir sonraki videoda tartışacağız.

150
00:09:01,400 --> 00:09:06,200
Umuyorum ki bu videoda bir RNN'nin temel yapı taşlarını kullanarak

151
00:09:06,200 --> 00:09:11,070
bir araya getirebileceğiniz çok geniş yelpazede model bulunduğunu görmüşsünüzdür.

152
00:09:11,070 --> 00:09:15,260
Ancak daha önce belirtmiş olduğum gibi, dizi oluşturma için bazı incelikler mevcuttu.

153
00:09:15,260 --> 00:09:17,390
Bunları sizin kendiniz halletmeniz gerekiyordu.

154
00:09:17,390 --> 00:09:21,830
Bu haftanın ilk örneğindeki gibi bir dil modeli oluşturup sonrasında umuyorum ki

155
00:09:21,830 --> 00:09:25,935
bazı eğlenceli diziler veya bazı eğlenceli metin parçaları oluşturacaksınız.

156
00:09:25,935 --> 00:09:28,330
Bir sonraki videoda yapmak istediğim şey,

157
00:09:28,330 --> 00:09:31,840
dizi oluşturma işinin daha derinlerine girmektir.

158
00:09:31,840 --> 00:09:33,260
Detayları bir sonraki videoda göreceğiz.