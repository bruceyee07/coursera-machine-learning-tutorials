语言建模(language modeling)<br />是自然语言处理(natural language processing)中 最基础和最重要的任务之一 同时也是RNN非常擅长的领域 这一节你会学到如何用RNN构建一个语言模型 其内容将把我们带到本周有趣的编程作业 在作业中你将构建一个语言模型 使其生成莎士比亚风格或其他风格的文字 如何对数据进行运算 那么什么是语言模型？ 假设你正在构建一个语音识别系统 你听到了这个句子<br />The apple and pear salad was delicious 我刚刚说的是什么？ 我说的是 apple and pair salad<br />还是 apple and pear salad？ 你也许会认为第二个句子的可能性大得多 实际上，高质量语音识别系统能帮助你 即使在这两个句子听起来一模一样的时候 语音识别系统之所以能够挑选出第二个句子 正是因为它使用了语言模型(language model) 该模型给出这两个句子的概率 例如，一个语言模型可能会说 第一个句子的概率是3.2*10^(-13) 第二个句子的概率是5.7*10^(-10) 依照这两个概率，第二个句子的可能性要大得多 有10^3倍的差距 所以语音识别系统会选择第二个选项 所以语言模型的功能在于给定任意句子 它都会给出这个特定句子的概率 句子的概率的意思是，如果你随意拿起一份报纸 或打开一份电邮或打开一个网页 听到别人或朋友随意的话语 即在整个时空中你听到的下一句特定的话是 apple and pear salad 的概率 这是语音识别和 机器翻译的基础构成 因为机器翻译系统需要过滤出合适的翻译 所以语言模型的工作是，输入一个句子 写成 y(1) y(2)直到y(Ty) 语言模型将被作用于输出值y 使之表达成一个句子 而不是作用于输入值x 但是语言模型所做的就是估计 特定单词序列的概率 那么如何构建一个语言模型？ 用RNN构建一个语言模型 你首先需要一个由一个大文集(corpus)构成的训练集 可以是英语或任意你想构建语言模型的语言 文集(corpus)这个词是NLP的术语表示 大体量的或海量英语语句构成的英语文本(text)的集合 假设你的训练集中有这样一句话 Cats average 15 hours of sleep a day<br />（猫平均每天睡15个小时） 你要做的第一件事是将这个句子标记化(tokenize) 从而得到一个你在之前的视频中见过的单词表 然后将各个单词映射到一个 一位有效矢量(one hot vector) 将对应索引值的矢量元素值置一 另外要做的就是标记句子的结束 通常我们会加一个叫做EOS(End Of Sentence)的标记 它将帮助你定位句子的结束 在后面的课程中我们再讨论这个 但是如果你想让你的模型明确捕获每个句子的结尾 可以把EOS标记加在训练集中每个句子的后面 本周的练习我们不会用到EOS 但是某些应用场景中你可能会需要 后面的课程中我们会看到使用它的时候 这个例子中我们有y1 y2 y3 4 5 6 7 8 9 加上EOS标记一共9个输入 在标记化这一步骤中，你可以决定 是否计入句号标记 这个例子中，我们忽略标点 所以我将 day 当作一个标记(token) 并忽略句号，如果你想将句号或其他标点作为标记 你可以将句号加入你的单词表 现在另一个细节是，如果有些单词在你的训练集中 但不在单词表中，要怎么处理 如果你的单词表有10,000个单词 也许是最常用的10,000个英语单词。那么Mau这个词<br />Egyptian Mau是一个猫的品种 可能不在你的10,000个最常用的标记中 这种情况下你可以把Mau用一个全局唯一的标记代替 叫做UNK 表示未知单词 并对UNK的概率建模，而不是对某个特定未知词建模 完成标记化的步骤基本上就是 将输入句子映射成各个标记 或单词表中单词的集合 下面我们构建RNN来为这些不同序列的概率建模 下一页ppt将体现的一点是 最终你将输入<br />x(<t>)置为y(<t-1>) 那么我们来构建这个RNN模型 我将继续用这个句子作为样例 这是RNN架构 在时间0 你要计算输入x1的某个激活函数值 在时间0nbsp你要计算输入x1的某个激活函数值 x1将被置为全0即0矢量 前面的a0按照惯例，也置为全0矢量 a(1)用softmax预测 尝试得到第一个单词y的概率 即y(1) 这一步实际上就是用softmax尝试预测 单词表中每个单词的概率 第一个是a，这个词是Aaron的概率? 是cats的概率? 直到最后一个单词Zulu的概率 或者它是UNK的概率是多少？ 或者说这个句子第一个单词 的概率分布是怎样的？ 所以y^1输出到一个softmax，它给出 第一个单词的概率的预测，不论它最后是哪个单词 我们的例子中，这个单词是cats 所以如果单词表有10,000个单词<br />这将是一个10,000路softmax输出 或者10,002 我想UNK和EOS也算在内 作为额外两个标记 然后，RNN前向推进到下一步 运行某个激活函数，得到a<1>输入给下一步 在这一步，它试图算出第二个单词是什么 同时我们也给它第一个单词正确项 所以我们将告诉他，实际上 第一个单词其实是Cats也就是y1 告诉它cats，也就是为什么y1=x2 第二步的输出仍然由softmax预测出来 RNN要做的是预测某个单词的概率，无论这个单词是什么 它可以是a或者Aaron或Cats或Zulu或UNK或EOS 可以是任意之前在单词表中给出的单词 所以 在这种情况下所以 在这种情况下 我猜正确的答案是average，因为这句话的开头是cats average 然后继续RNN的下一步 现在要计算a3 但是要预测第三个单词即“15” 我们现在可以给它前面2个单词 我们告诉它前2个单词是cats average 那么下一个输入有x<3>=y<2><br />即单词average是输入 它要做的是要给出这个序列的下一个单词 换句话说要做的就是给定前面的单词
是cats average的条件下 字典中任意单词作为下一个单词的概率 是什么，对吗？ 这个例子中，正确答案是“15”，
然后继续下一个单词 直到最后，我猜是在第9步 你输入x(9)=y(8) 即单词day 则它得到a<9>，然后它要输出y^9 也就正好是EOS 在所有已知条件下，
即给出所有前面的单词 希望它会预测出这些单词
EOS还有句子标记 他们高概率的结果 所以，RNN的每一步
都会看之前的几组单词，例如 给出前3个单词，
第四个单词的分布概率是什么？ 即RNN学习从左至右每次预测一个单词 接下来，为了训练这个神经网络，
我们要定义一个代价函数 在任一给定时间t，如果真实值为yt 神经网络softmax预测值为y^t 它就是softmax的代价函数，
你应该已经熟悉这个函数了 整体损失就是所有时间步骤单个预测的 损失总和 如果你用上一个训练集训练RNN 你能做的是，给定任意初始单词集<br />如cats average 15 hours of 它能预测下一个单词的概率分布 给定一个新句子 y(1) y(2) y(3) 简单一些的话，只有这三个单词 你能给出整个句子的概率分布的方法是 第一个softmax告诉你y(1)的概率分布 这是第一个输出 第二个softmax告诉你
给定y(1)的条件下y(2)的概率分布 第三个softmax告诉你
给定y(1)y(2)的条件下y(3)的概率分布 然后将这三个概率相乘 你应该已经在之前的练习中
了解到更多细节了 通过这3个的乘积最终得到这 三个单词组成三个句子的概率 这是如何使用
RNN训练语言模型的基本结构 如果这些理论看上去有些抽象，
不必担心 你将会在编程练习中运用这些概念 下一节将会是语言模型运用中
最有趣的部分 即对模型进行单词序列的抽样<br />(sample sequences from the model) 我们就在下一个视频中看看它是怎么工作的吧
GTC字幕组翻译