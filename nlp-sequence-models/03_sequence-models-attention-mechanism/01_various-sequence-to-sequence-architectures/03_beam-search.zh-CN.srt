1
00:00:00,000 --> 00:00:04,110
在本次视频中，你将会学习集束搜索算法

2
00:00:04,110 --> 00:00:05,545
上个视频中

3
00:00:05,545 --> 00:00:09,655
你知道当输入一个法语句子给机器是如何翻译的

4
00:00:09,655 --> 00:00:12,735
你不想随机输出一个英文翻译

5
00:00:12,735 --> 00:00:16,365
你想要输出最佳且最贴合英语语言的翻译

6
00:00:16,365 --> 00:00:21,126
对于语音识别来说也是相同的，对于一段语音音频

7
00:00:21,126 --> 00:00:24,465
你不想给这个音频随机输出一些文字

8
00:00:24,465 --> 00:00:25,745
你想要最佳的输出结果

9
00:00:25,745 --> 00:00:28,315
或许说，输出最佳的对应文字

10
00:00:28,315 --> 00:00:30,623
波束搜索是最广泛使用的算法。

11
00:00:30,623 --> 00:00:33,810
在这个视频中，你将会学习如何使用集束搜索

12
00:00:33,810 --> 00:00:37,605
让我们先尝试在之前的法语例子上应用集束搜索

13
00:00:37,605 --> 00:00:39,495
"Jane, visite l'Afrique en Septembre".

14
00:00:39,495 --> 00:00:41,034
希望可以被翻译成，

15
00:00:41,034 --> 00:00:43,170
"简在9月访问非洲。”

16
00:00:43,170 --> 00:00:45,855
集束搜索第一件要做的事情就是尝试

17
00:00:45,855 --> 00:00:48,679
挑出对应的第一个英语词汇

18
00:00:48,679 --> 00:00:50,085
以供输出

19
00:00:50,085 --> 00:00:51,470
所以我在这里列出了,

20
00:00:51,470 --> 00:00:54,195
例如,1万个词汇。

21
00:00:54,195 --> 00:00:56,140
稍微将问题简化一下

22
00:00:56,140 --> 00:00:58,000
我会忽略大小写

23
00:00:58,000 --> 00:01:00,605
所以我只是将所有单词以小写形式列出

24
00:01:00,605 --> 00:01:02,870
在集束搜索的第一步,

25
00:01:02,870 --> 00:01:08,085
我用了这部分编码示为绿色、解码示为紫色的网络

26
00:01:08,085 --> 00:01:12,165
来计算第一个单词的概率

27
00:01:12,165 --> 00:01:14,745
即，给定法语单词x，对应英语单词为y的可能性。

28
00:01:14,745 --> 00:01:18,670
给定法语输入句x

29
00:01:18,670 --> 00:01:24,725
相对于贪心法搜索会
只找到一个最可能的单词然后继续下一个，

30
00:01:24,725 --> 00:01:28,590
集束搜索会考虑多个可能的选择。

31
00:01:28,590 --> 00:01:32,344
集束搜索有一个参数B，

32
00:01:32,344 --> 00:01:33,810
代表集束宽度，

33
00:01:33,810 --> 00:01:37,715
在这里我们把它设为3.

34
00:01:37,715 --> 00:01:40,330
表示集束搜索每次会不仅仅考虑1个，

35
00:01:40,330 --> 00:01:44,030
而是3个可能的选择

36
00:01:44,030 --> 00:01:46,950
举例来说，计算

37
00:01:46,950 --> 00:01:50,151
对应第一个单词的候选答案的不同概率时，

38
00:01:50,151 --> 00:01:52,815
算法觉得候选单词“in”,

39
00:01:52,815 --> 00:01:55,740
“Jane”和“September”是

40
00:01:55,740 --> 00:02:01,150
3个最可能的英语输出。

41
00:02:01,150 --> 00:02:03,905
集束搜索算法会将这3个候选答案都存在

42
00:02:03,905 --> 00:02:07,800
内存中以便都进行尝试。

43
00:02:07,800 --> 00:02:10,680
如果集束宽度B被设成其它值，

44
00:02:10,680 --> 00:02:12,640
比如10，

45
00:02:12,640 --> 00:02:15,760
那我们会保留不仅仅3个而是10个

46
00:02:15,760 --> 00:02:18,950
最可能的第一个法语单词备选答案。

47
00:02:18,950 --> 00:02:23,680
为了进行集束搜索的第一步，

48
00:02:23,680 --> 00:02:26,790
你需要做的是把这个法语句子输入到

49
00:02:26,790 --> 00:02:31,435
这个编码网络，以及解码网络的第一步骤

50
00:02:31,435 --> 00:02:35,915
这是在10,000个几率中softmax的输出

51
00:02:35,915 --> 00:02:39,165
然后将这10,000个可能的输出

52
00:02:39,165 --> 00:02:44,535
中的前3名存在内存中。

53
00:02:44,535 --> 00:02:47,195
让我们进入集束搜索的第二步。

54
00:02:47,195 --> 00:02:53,705
在挑选了in，jane和september作为三个最可能的第一个词的选择,

55
00:02:53,705 --> 00:02:55,100
集束搜索现在会做的是,

56
00:02:55,100 --> 00:02:59,330
这三种选择中的每一项都考虑第二个词应该是什么,

57
00:02:59,330 --> 00:03:03,065
所以在“in”之后可能是“a”，或者是“araon“

58
00:03:03,065 --> 00:03:05,340
我这里把词库里的词列举一下

59
00:03:05,340 --> 00:03:10,370
或者还可能是“September"

60
00:03:10,370 --> 00:03:13,595
或者"Visit"

61
00:03:13,595 --> 00:03:16,910
直到列表的最后一个词“Zulu"

62
00:03:16,910 --> 00:03:19,015
为了评估每个第二个候选词的概率

63
00:03:19,015 --> 00:03:23,150
算法会用这个神经网络，网络中绿色的是编码器

64
00:03:23,150 --> 00:03:28,785
而解码器要决定“in”之后的词是什么

65
00:03:28,785 --> 00:03:33,055
还记得解码器首先输出y^1

66
00:03:33,055 --> 00:03:39,177
我将把y-hat1的值设成“in“作为解码器的输出
并反馈到网络的下一部分

67
00:03:39,177 --> 00:03:43,570
因为“in”已经被选中了

68
00:03:43,570 --> 00:03:47,085
解码器需要在“in”被选中之后

69
00:03:47,085 --> 00:03:48,630
找出下一个词

70
00:03:48,630 --> 00:03:53,460
接着解码器输入下一个可能的词y^2

71
00:03:53,460 --> 00:03:58,065
这样在指定了y^1

72
00:03:58,065 --> 00:04:01,065
也就是网络的输入是“in”之后

73
00:04:01,065 --> 00:04:06,079
这部分的网络可以用来评估

74
00:04:06,079 --> 00:04:09,775
在法语单词第二个词给定的情况下

75
00:04:09,775 --> 00:04:12,400
给定的情况下

76
00:04:12,400 --> 00:04:16,200
第二个翻译单词是“in”的概率

77
00:04:16,200 --> 00:04:20,080
注意，我们关注的集束算法的第二步

78
00:04:20,080 --> 00:04:24,580
就是找到最佳的第一个词和第二个词的组合为最佳选择

79
00:04:24,580 --> 00:04:26,560
而不仅仅是每个词为

80
00:04:26,560 --> 00:04:28,710
最佳选择

81
00:04:28,710 --> 00:04:33,363
根据条件概率

82
00:04:33,363 --> 00:04:37,520
概率可以表示为第一个单词的概率

83
00:04:37,520 --> 00:04:45,553
乘第二个单词的概率

84
00:04:45,553 --> 00:04:48,250
概率可以从网络的这部分中得来

85
00:04:48,250 --> 00:04:55,200
对于选中的“in”，“Jane”和“September”,

86
00:04:55,200 --> 00:04:59,830
我们将它们各自的概率与第二个选中词的概率相乘

87
00:04:59,830 --> 00:05:05,140
就可以得到各自与第二个单词一起出现的概率

88
00:05:05,140 --> 00:05:08,095
现在我们知道了在知道第一个词是“in”的时候

89
00:05:08,095 --> 00:05:11,630
如何评估第二个词的概率

90
00:05:11,630 --> 00:05:14,510
对于“Jane”也是一样

91
00:05:14,510 --> 00:05:17,823
这个句子可能是“Jane a”, "Jane Araon",

92
00:05:17,823 --> 00:05:22,185
或者是“Jane is”

93
00:05:22,185 --> 00:05:26,935
“Jane visits”等等

94
00:05:26,935 --> 00:05:30,690
你可以将这部分网络的

95
00:05:30,690 --> 00:05:37,060
y^1，让我在这里也画一下，你会在这里画一些线

96
00:05:37,060 --> 00:05:39,590
设置成“Jane”

97
00:05:39,590 --> 00:05:46,675
当第一个词被设置为‘jane'

98
00:05:46,675 --> 00:05:51,095
这样解码器网络

99
00:05:51,095 --> 00:05:54,425
可以告诉你第二个单词的概率是什么。

100
00:05:54,425 --> 00:05:57,630
给定第一个词是 "jane"。

101
00:05:57,630 --> 00:06:05,595
然后和上面一样, 你可以乘以 P（Y1）以获得

102
00:06:05,595 --> 00:06:14,130
这10000种可作为第二个词选择的y1和y2概率

103
00:06:14,130 --> 00:06:16,980
然后对‘september'做同样的事情

104
00:06:16,980 --> 00:06:23,935
从 ‘a‘ 到‘zulu’使用这个网络片断。

105
00:06:23,935 --> 00:06:31,085
这也是为了看看如果第一个词是‘september’

106
00:06:31,085 --> 00:06:35,938
第二个单词最有可能的选择是什么。

107
00:06:35,938 --> 00:06:40,100
所以对于集束搜索的第二步, 因为我们

108
00:06:40,100 --> 00:06:44,450
继续使用集束宽度3而且因为有

109
00:06:44,450 --> 00:06:48,400
10000个词汇，你会考虑3乘以

110
00:06:48,400 --> 00:06:53,555
10000是30000种可能性，因为这里有10000

111
00:06:53,555 --> 00:06:55,820
这里有10000，这里有10000

112
00:06:55,820 --> 00:07:01,880
集束宽度乘以词汇里的词的数量，并且

113
00:07:01,880 --> 00:07:05,900
你评估这所有的30000种选择

114
00:07:05,900 --> 00:07:10,685
根据可能的前两个词然后挑出最可能的三种可能

115
00:07:10,685 --> 00:07:12,050
因此, 随着削减,

116
00:07:12,050 --> 00:07:15,309
这30000种可能性被降低为3种可能

117
00:07:15,309 --> 00:07:19,770
集束宽度再次四舍五入，那么我们说30000种选择,

118
00:07:19,770 --> 00:07:26,030
最可能的是‘in September‘和‘Jane is‘

119
00:07:26,030 --> 00:07:34,336
和·‘jane visit‘。
不好意思这里有点乱，但是这些是30000种选择里

120
00:07:34,336 --> 00:07:37,655
可能性最高的三种。然后集束搜索会记住这些

121
00:07:37,655 --> 00:07:43,965
然后继续下一步

122
00:07:43,965 --> 00:07:47,195
所以注意一件事, 如果集束搜索决定

123
00:07:47,195 --> 00:07:52,305
最可能的前两个词是‘ in September,‘

124
00:07:52,305 --> 00:07:55,470
或者‘Jane is‘，或者’jane visits‘

125
00:07:55,470 --> 00:07:59,745
那么这意味着现在它将会拒绝‘september'作为

126
00:07:59,745 --> 00:08:05,920
第一个英文翻译输出词的候选

127
00:08:05,920 --> 00:08:12,420
所以我们现在只有两种选择，但是我们仍然有集束宽度3

128
00:08:12,420 --> 00:08:19,660
来保证y1的三种配对可能

129
00:08:19,660 --> 00:08:23,540
在进行第三部集束搜索之前

130
00:08:23,540 --> 00:08:26,946
注意到,由于集束宽度等于三,

131
00:08:26,946 --> 00:08:31,710
每个步骤你实例化网络的三个副本

132
00:08:31,710 --> 00:08:38,160
来评估这些部分句子片段和输出

133
00:08:38,160 --> 00:08:42,060
由于集束宽度是3你有

134
00:08:42,060 --> 00:08:46,740
三个第一个词不同的网络的副本

135
00:08:46,740 --> 00:08:50,490
但是这三个副本可以被有效的用来

136
00:08:50,490 --> 00:08:56,110
评估第二个单词的所有30000种选择。

137
00:08:56,110 --> 00:09:02,620
不要实例化网络的30000个副本或网络的三个副本来

138
00:09:02,620 --> 00:09:09,521
非常迅速地评估这个softmax的为Y2的所有10000种可能。

139
00:09:09,521 --> 00:09:14,120
让我们快速地说明集束搜索的下一步。

140
00:09:14,120 --> 00:09:18,822
我们说过最有可能的前两个词是
‘in september‘和’jane is‘,

141
00:09:18,822 --> 00:09:21,180
和‘jane visits‘， 并且对于这每一对词

142
00:09:21,180 --> 00:09:23,850
我们应该以这种形式保存在计算机中：

143
00:09:23,850 --> 00:09:31,805
给定输入的法语句子x，y1和y2的概率

144
00:09:31,805 --> 00:09:33,120
与之前相似,

145
00:09:33,120 --> 00:09:35,735
我们现在想要考虑第三个词是什么。

146
00:09:35,735 --> 00:09:37,160
那么是‘in September a‘？

147
00:09:37,160 --> 00:09:38,860
‘In September Aaron?‘

148
00:09:38,860 --> 00:09:40,800
一直下去到

149
00:09:40,800 --> 00:09:45,920
‘September Zulu ‘来估量第3个词的可能的选择

150
00:09:45,920 --> 00:09:49,275
你使用这个网络碎片来确定

151
00:09:49,275 --> 00:09:53,253
第一个词是‘in‘第二个词是‘september’。

152
00:09:53,253 --> 00:09:56,280
这个网络碎片使你能估计

153
00:09:56,280 --> 00:09:59,940
给定输入的法语句子x，

154
00:09:59,940 --> 00:10:08,110
和前两个词是英文输出‘in september‘，第三个词的概率

155
00:10:08,110 --> 00:10:13,415
然后你对第二个片段做同样的事情。

156
00:10:13,415 --> 00:10:15,385
就像这样。

157
00:10:15,385 --> 00:10:17,930
对‘jane visit‘也是

158
00:10:17,930 --> 00:10:23,265
同样的，

159
00:10:23,265 --> 00:10:25,735
集束搜索将再次选择

160
00:10:25,735 --> 00:10:29,410
在9月的可能性最高的三种可能。

161
00:10:29,410 --> 00:10:38,284
‘jane‘是一个可能的结果,
或者‘jane'要访问是可能的，或者jane访问非洲

162
00:10:38,284 --> 00:10:42,820
对于前3个词是可能的，然后它继续

163
00:10:42,820 --> 00:10:44,680
开始集束搜索的第4步

164
00:10:44,680 --> 00:10:48,300
再加一个词然后继续

165
00:10:48,300 --> 00:10:50,920
这个过程的输出结果将会是

166
00:10:50,920 --> 00:10:54,570
每一次加一个词，集束搜索会决定每次加哪个词

167
00:10:54,570 --> 00:10:57,610
‘Jane visits Africa in September ‘被句尾符号终止

168
00:10:57,610 --> 00:11:02,275
是比较常见的。

169
00:11:02,275 --> 00:11:06,070
他们会发现这是一个可能的输出英语句子

170
00:11:06,070 --> 00:11:08,690
你将会在这周课后练习中独立进行集束搜索时

171
00:11:08,690 --> 00:11:15,420
看到更多的细节

172
00:11:15,420 --> 00:11:21,400
当三束被搜索时同时考虑三种可能性。

173
00:11:21,400 --> 00:11:24,535
请注意到如果集束宽度被设置为1,

174
00:11:24,535 --> 00:11:26,075
因为这里只有一个

175
00:11:26,075 --> 00:11:27,940
那么这基本上成为

176
00:11:27,940 --> 00:11:34,450
我们在上一个视频里讨论过的贪婪搜索算法, 但通过考虑

177
00:11:34,450 --> 00:11:38,140
多种可能性比如说3种10种或其他数字

178
00:11:38,140 --> 00:11:40,270
在同一时间，集束搜索通常会

179
00:11:40,270 --> 00:11:43,645
找到一个比贪婪搜索更好的输出语句

180
00:11:43,645 --> 00:11:47,470
你现在已经看到了集束搜索如何工作,但其实有

181
00:11:47,470 --> 00:11:49,607
来自于合作伙伴的一些额外的建议和技巧

182
00:11:49,607 --> 00:11:52,445
可以帮助你使集束搜索工作得更好。

183
00:11:52,445 --> 00:11:54,210
让我们在下一个视频来看看。