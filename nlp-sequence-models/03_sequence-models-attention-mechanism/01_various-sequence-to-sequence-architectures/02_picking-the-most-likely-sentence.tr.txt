"Sequence to Sequence" makine çeviri modeli ve bu kursun ilk haftasında... ...çalıştığınız dil modelleri arasında bazı benzerlikler vardır. Ama bazı önemli farklılıklarda var. Bunlara bir bakalım Makine çevirisini bir koşullu dil modeli inşa etme gibi düşünebilirsiniz. Şunu söylemeye çalışıyorum. Dil modellemesinde... ...bu bizim ilk hafta oluşturduğumuz ağ idi. Ve bu model bir cümlenin olabilirliğini tahmin etmenize imkan verir. Dil modelinin yaptığı budur. Ve siz bunu roman cümleleri oluşturmak için de kullanabilirsiniz, ve bazen burada x1 ve x2'yi yazarken, bu örnekte olduğu gibi, x2 y1'e veya y'ye eşit ve biri sadece geri bildirim olmalı. Ama x1, x2 ve diğerleri önemli değil. Yani bu slayt için şunu netleştirelim, Bunların üzerini çizeceğim. x1 tüm sıfırların vektörü olabilir, ve x2, x3 oluşturduğunuz bir önceki çıktılar. Bu dil modeliydi. Makine çevirisi modeli şöyle görünür, birkaç farklı renk kullanacağım, yeşil ve mor renklerle sırasıyla kodlanmış ve kodu çözülen ağları belirteceğim. Ve kodu çözülmüş ağın, yukarıdaki dil modeliyle... ...hemen hemen aynı olduğunu fark ediyorsunuz. Öyleyse makine çevirisi modeli nedir, dil modeline ile çok benzer, her zaman tüm sıfırların vektöründen başlaması yerine, girdi cümlesinin gösterimini anlatan... ...kodu çözülmüş bir ağa sahip olması dışında, girdi cümlesini alır ve tüm sıfırların temsili yerine... ...girdi cümlesinin temsili ile kodu çözülen ağa başlar. Bu yüzden buna bir koşullu dil modeli diyorum, ve herhangi bir cümlenin olasılığını modellemek yerine, bu artık girdi olarak verilen... ...Fransızca cümlelere bağlı olarak, İngilizce çeviri çıktısının olasılığını modellemedir. Yani başka bir deyişle, bir İngilizce çevirinin olasılığını tahmin etmeye çalışıyorsun. "Jane is visiting Africa in September" cümlesinin çeviri olma olasılığı gibi, ancak "Jane visite I'Afrique en septembre" gibi Fransızca cümle girdisine bağlı olarak. Yani, bu gerçekten Fransızca kelime girdisi koşullarına bağlı bir İngilizce cümlenin olasılığıdır, bu yüzden buna koşullu dil modeli denir. Şimdi bu modeli gerçekten Fransızca'dan İngilizce'ye... ...bir cümleyi çevirmek için uygulamak istiyorsanız, verilen bu girdi Fransızca cümleyle, model size ilgili İngilizce çevirilerin... olma olasılıkları arasındaki farları söyleyebilir. Yani, x Fransızca cümle, "Jane visite l'Afrique en septembre." Ve bu şimdi size, o Fransızca girdisinin... ...farklı İngilizce çevirilerinin olasılığını anlatıyor. Ve çıktıların rastgele örneklenmesini istemezsiniz. Kelimeleri şu dağılımla örneklerseniz, y'nin x verildiğinde P'si, belki bir kereliğine iyi bir çeviri elde edersiniz, "Jane is visiting Africa in September" Ama belki başka bir zaman farklı bir çeviri alırsınız, "Jane is going to be visiting Africa in September" ki bu da kulağa biraz garip geliyor ama çok kötü bir çeviri değil, sadece en iyisi değil. Ve bazen, sadece şans eseri, diğerlerini alırsınız: "In September, Jane will visit Africa" Ve belki, sadece şans eseri, Bazen gerçekten kötü bir çeviri örneği alırsınız: "Her African friend welcomed Jane in September" Yani, bu modeli makine çevirisi için kullanırken, bu dağılımdan rastgele bir örnekleme oluşturmaya çalışmıyorsunuz. Bunun yerine, istediğiniz şey, bu koşullu olasılığı en üst düzeye çıkaran İngilizce cümleyi, y'yi bulmak. Öyleyse bir makine çeviri sistemi geliştirirken, Yapmanız gereken şeylerden biri, bu terimi burada maksimuma çıkaran y'nin değerini gerçekten bulan bir algoritma elde etmektir. Bunu yapmak için en sık kullanılan algoritmaya "Beam Search" adı verilir, ve bunu bir sonraki video göreceksiniz. Ancak "Beam Search" algoritmasını açıklamadan önce, neden "Greedy Search" kullanmadığımızı merak ediyorsunuzdur. Peki "Greedy Search" nedir? "Greedy Search", koşullu dil modelinize göre... ...herhangi bir en muhtemel ilk kelimeyi seçerek ilk kelimeyi üretmemizi söyleyen, bilgisayar biliminde kullanılan algoritmadır Makine çeviri modelinizde ilk kelimeyi seçtikten sonra, en muhtemel görünen ikinci kelimeyi seçersiniz, sonra en muhtemel görünen üçüncü kelimeyi seçersiniz. Bu algoritmaya "Greedy Search" denir. Ve asıl istediğin tüm kelimelerin sırasını seçmektir, yTy'ye bağlı olarak y1, y2, bu bütünün birlikte olma olasılığını maksimuma çıkarır. Ve bu bizi en iyi ilk kelimeyi seçen, ardından en iyi birinci kelimeyi seçtikten sonra ikinci kelimeyi seçmeye çalışan, ve daha sonra en iyi üçüncü kelimeyi seçmeye çalışan "Greedy" yaklaşımından uzaklaştırıyor. bu yaklaşım gerçekten işe yaramıyor. Bunu göstermek için, aşağıdaki iki çeviriyi düşünelim. İlki daha iyi bir çeviri, Umarım, bizim makine çevirisi modelinde, ilk cümle için x verildiğinde y nin p değerinin daha yüksek olduğunu söyleyecektir. Bu sadece Fransızca girdinin daha iyi, daha özlü bir çevirisi. İkinci kötü bir çeviri değil, sadece daha ayrıntılı, daha fazla gereksiz kelime var. Fakat algoritma "Jane is" kelimelerini ilk iki kelime olarak alırsa, "going" daha yaygın bir kelime olduğu için, muhtemelen verilen Fransızca girdi ile "Jane is going" ifadesinin... "Jane is visiting" ifadesinden... ...verilen Fransızca cümle için daha fazla şansı olacaktır. Bu yüzden, eğer sadece ilk üç kelimenin olasılığını en üst seviyeye çıkartan ne olursa olsun, üçüncü kelimeyi seçerseniz, iki numaralı seçeneği seçmeniz yeterlidir. Ancak, bu model tarafından ve x verildiğinde y'nin p değeri için ölçülen daha az iyi bir cümle içerisinde, bu sonuçta daha az uygun bir cümle ile sonuçlanır. Bunun az elle tutulur bir argüman olabileceğini biliyorum. Ama, bu daha yaygın bir fenomenin bir örneğidir, Burada birlikte olasılığı en üst düzeye çıkaran son kelimeye kadar, y1, y2 kelimelerinin sırasını bulmak istiyorsanız, bir seferde sadece bir kelime seçmek her zaman uygun değildir. Ve elbette, İngilizce cümlede bulunan kelimelerin kombinasyonlarının toplam sayısı... ...üssel olarak daha büyüktür. Yani, bir sözlükte sadece 10.000 kelimeniz varsa ve... ...on kelime uzunluğuna kadar çeviriler düşünürseniz, 10.000 tane on adet olası on kelime uzunluğunda cümle vardır. Kelime haznesi, boyutu 10.000 olan sözlükten... ...kelimeler seçmek. Bu sadece muhtemel cümlelerin çok büyük bir alanıdır, ve hepsini derecelendirmek imkansızdır, bu yüzden yapılacak en bilinen şey onlardan yaklaşık bir aramayı kullanmaktır. Ve, yaklaşık bir arama algoritmasının yaptığı şey, deneyecek, her zaman başarılı olmayacak, ama bu koşullu olasılığı... en üst düzeye çıkaran cümleyi (y) seçecek. Ve bunu maksimize eden y'nin değerini bulma garantisi olmasa da, genellikle yeterince iyi bir iş çıkarır. Yani, özetlemek gerekirse, bu videoda, Makine çevirisinin koşullu dil modelleme problemi olarak nasıl ifade edilebileceğini gördünüz. Ancak, bu ve önceki dil modelleme problemleri arasındaki en büyük farklardan biri, rastgele bir cümle oluşturmak istemekten ziyade, en muhtemel İngilizce cümleyi, en muhtemel İngilizce tercümeyi... bulmayı deneyebilirsiniz. Ancak, belirli bir uzunluktaki bütün İngilizce cümlelerin seti, ayrıntılı bir şekilde numaralandırmak için çok büyük. Bu yüzden bir arama algoritmasına başvurmalıyız. Öyleyse hadi "Beam Search" algoritmasını öğreneceğiniz... ...bir sonraki videoya gidelim.