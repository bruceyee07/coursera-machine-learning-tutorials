Derin öğrenme algoritmalarını sıfırdan uygulamayı öğrendiniz çok ya da az Python ve NumPY kullanarak Ve ben bunu yapmış olmanıza sevindim çünkü ben derin öğrenme algoritmalarının gerçekte ne yaptığını anlamanızı istemiştim. Fakat daha karmaşık modeller uygulamadığınız sürece, evrişimli sinir ağları veya tekrarlayan sinir ağları gibi ya da gittikçe pratik olmayan çok büyük modelleri uygulamaya başladıkça, en azından çoğu insan için, her şeyi sıfırdan uygulamak pratik değildir. Neyse ki şimdi, Bu modelleri uygulayabilmeniz yardımcı olacak birçok iyi derin öğrenme çerçevesi var. Bir benzetme yaparsak, Umuyorum ki anlarsınız Matris çarpının nasıl yapıldığını ve uygulanabilmesi için nasıl kodlanacağını iki matrisin kendi kendine çarpılması için. Ama çok büyük uygulamalar oluştururken muhtemelen kendi matris çarpma fonksiyonunuzu uygulamak istemeyeceksiniz bunun yerine sizin için daha verimli bir şekilde yapabilecek bir sayısal lineer cebir kitaplığı çağırmak istersiniz. Ama bu iki matrisin nasıl çarpıldığını anlamanıza yardımcı oluyor. Bu yüzden, derin öğrenmenin artık daha pratik olduğu ve uygulamada daha verimli olacağınız noktaya olgunlaştığını düşünüyorum Bu sayede, derin öğrenme çerçevelerinden bazılarıyla daha verimli olursunuz. O zaman, çerçevelere bir bakalım. Bugün, birçok derin öğrenme çerçevesi mevcut ki onlar sinir ağlarının uygulanmasını kolaylaştırırlar ve işte önde gelenlerden bazıları Bu çerçevelerin her birinin özel bir kullanıcı ve geliştirici topluluğu vardır ve bu çerçevelerin bazı uygulamalar için güvenilir bir seçim olduğunu düşünüyorum. Birçok insan karşılaştırma makaleleri yazıyorlar bu derin öğrenme çerçeveleri ve ne kadar iyi değiştikleri hakkında. Bu çerçeveler genellikle gelişmekte olduğu ve aydan aya daha iyi hale geldiğinden dolayı Sizi bu konuda kendi kendinize internet de arama yapmanız için yalnız bırakacağım Eğer bu çerçevelerin bazıları artıları ve eksileri üzerine argümanları görmek istiyorsanız Ama bence bu çerçevelerin çoğu gelişiyor ve çok hızlı bir şekilde iyileşiyor. Bu çerçevelerden herhangi birini güçlü bir şekilde desteklemekten çok, sizinle çerçeveleri seçmek için kullanmanızı tavsiye ettiğim kriterleri paylaşmak istiyorum. İlk önemli kriter, programlama kolaylığıdır ve bu hem sinir ağlarının geliştirmek hem de üretim için kullanmanın yanı sıra üzerinde yineleme yapmak anlamına geliyor gerçek kullanım için, binlerce veya milyonlarca veya belki yüz milyonlarca kullanıcı tarafından ne yapmaya çalıştığına bağlı olarak. İkinci önemli kriter ise çalışma hızlarıdır özellikle büyük veri setleri üzerinde eğitimlerde, bazı çerçeveler çalışmanıza ve eğitim yapmanıza izin verecek diğer sinir ağlarından daha verimli olarak Ve bir sonraki, ki bundan insanlar sıklıkla bahsetmez fakat ben çerçevenin gerçekten açık olup olmadığının önemli olduğunu düşünüyorum. Ve bir çerçevenin gerçekten açık olması için, sadece açık kaynak olmak zorunda olmadığını aynı zamanda iyi yönetişime de ihtiyacı olduğunu düşünüyorum. Ne yazık ki, yazılım sektöründe bazı şirketlerin açık kaynak kodlu yazılım geçmişi var ancak yazılımı tek şirket kontrolünde sürdürdükleri. Ve sonra birkaç yıl boyunca, insanlar yazılımı kullanmaya başladığında bazı şirketlerin açık kaynak kodunu yavaş yavaş kapatmaya yönelim geçmişi vardır. ya da işlevselliği kendi özel bulut hizmetlerine taşıyor olabilmektedirler. Dikkat ettiğim şey ise çerçevenin, sadece tek bir şirketin kontrolü altında olmasından ziyade uzun bir süre açık kaynak olarak kalacağına ne kadar güvendiğimizdir. şirket herhangi bir sebepten dolayı çerçeveyi kapatmayı tercih edebilir her ne kadar yazılım şu anda açık kaynak altında yayınlanmış olsa bile Ama en azından kısa vadede dil tercihlerine bağlı olarak; Python veya Java veya C ++ ya da başka bir şey tercih ederseniz, ve üzerinde çalıştığınız uygulamaya bağlı olarak; bu bölme veya doğal dil işleme olabilir veya çevrimiçi reklam veya başka bir şey, Bu çerçevelerin çoğunun iyi bir seçim olabileceğini düşünüyorum. Dolayısıyla, programlama çerçevelerinde, sayısal bir lineer cebir kitaplığından daha yüksek bir soyutlama seviyesi sağlanarak, bu program çerçevelerinden herhangi biri, makine öğrenimi uygulamalarını geliştirirken sizi daha verimli hale getirebilir.