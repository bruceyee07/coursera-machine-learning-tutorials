你差不多已經學會如何從無到有 用 python 和 numpy 實作深度學習的演算法了 我很開心你能如此，因為我想讓你 了解這些深度學習演算法實際上在做什麼 但是，當你實作更複雜的模型會發現 像是卷積神經網路或遞歸神經網路 或者你開始做非常大的模型時，
這越來越不實際， 至少對於大多數的人，從無到有每件事都自己來，這不大實際。 好險，現在有 很多很好的深度學習的軟體框架，能幫你實作這些模型。 打個比方， 希望你知道如何做 矩陣相乘，而你應該能自己寫程式 來把兩個矩陣乘起來， 但是當你在建構很大的軟體時， 你大概不會想要刻一個你自己的矩陣相乘 相反的，你會想要呼叫 某個數值線性代數的函式庫，能更有效率幫你運算。 不過呢，這還是能讓你了解兩個矩陣相乘是怎麼運作的。 所以我想深度學習已經成熟到一個階段； 利用深度學習的框架做一些事情 會讓你更有效率、更實際。 因此，讓我們瞧瞧現今有哪些框架。 時至今日，已經有很多深度學習的框架 能讓你更方便地實作神經網路， 而這是一些主要的 這邊每個框架都有專門的使用者和開發社群 而且我覺得這裡每個框架 在某些應用領域都是不錯的選擇。 有很多人寫了文章 比較這些深度學習框架，和這些框架改變得多好 也因為這些框架通常不斷演化越來越好， 我就讓你自行上網搜尋一下 如果你想知道這些框架優缺點的論證。 不過我覺得這邊很多框架進化都很快，越來越好， 所以與其強力推薦任何某一個框架，我想分享一下 選擇框架時，我建議的一些準則。 一個重要的準則是程式好不好寫， 這同時意味著開發神經網路 逐步改善，以及佈署到產品上 給成千上萬甚至上億的人使用 端看於你想做什麼。 第二個重要的準則是執行速度 特別是訓練大量資料的時候 有些框架比其他框架在 訓練和執行你的神經網路上更有效率。 然後，有一個大家不太會講到的準則，但我覺得 很重要：這個框架是不是真正開放的。 當一個框架是真正開放的， 他不僅是要開源 (open source)，我覺得
這也需要好的管理。 不幸地在軟體業，有些公司有這樣的歷史： 雖然開源軟體，但是其維護控制在單一個公司下。 然後過些年 當大家開始使用這套軟體， 有些公司有前例，把開源的部份逐漸收掉， 或是把某些功能移到他們自營的雲端服務。 所以，我會稍微注意一件事 你多麼信任這個框架 會維持開源很久的時間，還是只被單一家公司所把持， 然後在未來，可能因為某個理由而收起來， 就算現在是以開源的方式發布。 不過呢，至少短期的話，考慮你偏好的程式語言 無論你喜歡 Python, Java, C++ 或是其他的， 還有和你要做的應用有關， 是電腦視覺、自然語言處理呢 或是網路廣告還是其他的 我想這邊的框架有一些都會是個好選擇。 所以說，用框架來寫程式，因為 他們提供更高層的抽象化，而不僅是一個線性代數函式庫， 這邊任一個程式框架能讓你 在開發機器學習的應用時更有效率