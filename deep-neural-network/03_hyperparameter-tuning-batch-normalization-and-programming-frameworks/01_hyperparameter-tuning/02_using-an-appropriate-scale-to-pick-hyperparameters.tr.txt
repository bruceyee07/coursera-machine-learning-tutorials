Son videoda, hiper parametrelerin aralığı boyunca rastgele örneklemenin nasıl daha etkin bir şekilde hiper parametreler uzayını araştırmaya izin verebileceğini gördünüz. Ancak, rastgele örneklemenin, geçerli değerler aralığı boyunca düzgün rastgele örnekleme anlamına gelmediği ortaya çıkıyor. Bunun yerine, hiper parametreleri araştırmak için uygun ölçeği seçmek önemlidir. Bu videoda, bunu nasıl yapacağınızı göstermek istiyorum. Belirli bir I katmanı için, gizli birimlerin sayısını,n[I], seçmeye çalıştığınızı varsayalım. Ve 50 ila 100 arasında bir yerin iyi bir aralık olduğunu düşündüğünüzü söyleyelim. Bu durumda, sayı doğrusunda 50 ila 100 arasına bakarsanız, belki bu sayı aralığında rastgele değer seçerek. Bu özel hiper parametreyi araştırmanın oldukça göze çarpan bir yolu var. Ya da eğer sinir ağınızdaki katman sayısına karar vermeye çalışıyorsanız, bunu L (büyük harf) olarak anacağız Belki de toplam katman sayısının 2 ila 4 arasında bir yerlerde olması gerektiğini düşünüyorsunuz. O zaman 2, 3 ve 4 boyunca düzgün olarak rastgele örnekleme yapmak mantıklı olabilir. Veya 2, 3 ve 4 değerlerini açık bir şekilde değerlendirdiğiniz bir ızgara aramayı kullanmak bile mantıklı olabilir. Yani bunlar örneklemeyi tasarladığınız aralıkta düzgün rastgele örnekleme için yapılacak mantıklı bir şey olabilir. Ancak bu tüm hiper parametreler için geçerli değildir. Bir diğer örneğe birlikte bakalım. Hiper parametre alfa, öğrenme oranı, için araştırma yapın Ve diyelim ki 0.0001'in en düşük alt değer olabileceğinden şüpheleniyorsunuz, ya da belki 1 kadar yüksek olabilir. Şimdi, 0.0001'den 1'e kadar sayı doğrusu çizerseniz, ve bu sayı doğrusunda düzgün olarak rastgele örnek değerler alırsanız Örneklediğiniz değerlerin yaklaşık% 90'ı 0,1 ile 1 arasında olacaktır. Yani, 0,1 ve 1 arasında araştırma yapmak için kaynaklarınızın % 90' ını kullanıyorsunuz, ve 0.0001 ile 0.1 arasında araştırma yapmak için kaynaklarınızın sadece% 10'unu kullanıyorsunuz. Yani bu doğru görünmüyor. Bunun yerine, logaritmik ölçekte hiper parametreler araştırmak daha mantıklı görünmektedir. Doğrusal bir ölçek kullanmak yerine, burada 0.0001, sonra 0.001, 0.01, 0.1 ve sonra 1 olacaktır. Ve bunun yerine, bu tür bir logaritmik ölçekte, rastgele bir şekilde, düzgün olarak örnek alın. Artık 0.0001 ile 0.001 arasında ve 0.001 ile 0.01 arasında...v.s. araştırma yapmaya ayrılmış daha fazla kaynağa sahipsiniz. Yani, Python'da, bunu gerçekleştirme yolunuz şöyledir, r = -4 * np.random.rand (). Ve sonra rastgele seçilen alfa değeri, alpha = 10 'un r'inci kuvveti. Bu ilk satırdan sonra r, -4 ile 0 arasında rastgele bir sayı olacaktır. Ve böylece alfa burada 10 üzeri -4 ve 10 üzeri 0 arasında olacaktır. Yani 10 üzeri -4 olan bu soldaki şey, bu 10 üzeri -4 Ve 1, 10 üzeri 0 olacaktır. Daha genel bir durumda, logaritmik ölçekte 10 üzeri a ile 10 üzeri b arasında örneklemeye çalışıyorsanız. Ve bu örnekte, bu 10 üzeri a’dır. 0.0001 değerinin 10 tabanında logaritmasını aldığınızda a' nın değerini -4 olarak hesaplayabilirsiniz. Ve sağdaki bu değer, 10 üzeri b’dir. 1’in 10 tabanında logaritmasını alarak b’ nin 0’a eşit olduğunu hesaplayabilirsiniz. Öyleyse yaptığınız şey, örnek r ,a ve b arasındaki düzgün rastgele örnektir. Bu durumda, r -4 ve 0 arasında olacaktır. Ve artık alfayı belirleyebilirsiniz, Rastgele örneklenmiş hiper parametre değerinizde,10 üzeri gibi,tamam? Yani özetlemek gerekirse, logaritmik ölçekte örneklemek için, düşük değeri al, a’ nın değerini bulmak için logaritmalarını al. Yüksek değeri al, b’yi bulmak için logaritmasını al. Yani şimdi, 10 üzeri a’ dan, 10 üzeri b'ye logaritmik ölçekte örneklemeye çalışıyorsunuz. Yani r’ yi düzgün olarak belirlersiniz, rastgele, a ve b arasında. Ve sonra hiper parametreyi 10 üzeri r olarak ayarlayın. Logaritmik ölçekte örnekleme yöntemini bu şekilde uygularsınız. Son olarak, bir başka ince durum, üssel olarak ağırlıklı ortalamaları hesaplamak için kullanılan hiper parametre beta örneklemesidir. Öyleyse, beta'nın 0,9 ila 0,999 arasında bir yerde olması gerektiğinden şüphelendiğinizi söyleyelim. Belki de bu, aramak istediğiniz değerlerin aralığıdır. Unutmayın ki, Üstel ağırlıklı ortalamalar hesaplanırken, 0,9 kullanılarak son 10 değer üzerinden ortalama alınır. 10 günlük sıcaklığın ortalamasını almak gibi, 0,999 kullanarak son 1.000 değer üzerinden ortalama almak gibi. Son slaytta gördüğümüze benzer şekilde, eğer 0.9 ve 0.999 arasında araştırma yapmak istiyorsanız, lineer ölçekte örnek almak mantıklı değil, değil mi? Düzgün ve rastgele, 0,9 ve 0,999 arasında olsun. Bu konuda düşünmenin en iyi yolu, 1 eksi beta için değer aralığını araştırmak istiyoruz ki bu da şimdi 0,1 ile 0,001 arasında olacaktır. Ve bu yüzden, beta arasındaki değerleri, 0.1'den belki de 0.1'e, 0.001'e kadar alarak örnekleyeceğiz. Yani, önceki slaytta belirlediğimiz yöntemi kullanarak, bu 10 üzeri -1, bu da 10 üzeri -3'tür. Bir önceki slayta dikkat edin, solda küçük ve sağda büyük değerimiz vardı, ama burada tersine döndük. Solda büyük değere ve sağda küçük değere sahibiz. Öyleyse, yaptığınız şey, r’yi -3 ile -1 arasında düzgün,rastgele örneklemektir. ve 1-beta = 10 üzeri r olarak belirlersiniz ve buradan beta=1- (10 üzeri r) olacaktır. Ve bu, uygun ölçekte seçilen hiper parametrenizin rastgele örneklenmiş değeri olur. Ve umarım bu mantıklıdır, bu şekilde 0.99-0.999 aralığında araştırma yaparken , 0.9-0.99 aralığında araştırma yapar gibi kaynak harcıyorsunuz. Yani, bunu neden yaptığımızı görmek için daha formal matematiksel gerekçelendirme çalışmak istiyorsanız,
doğru, neden lineer bir ölçekte örnekleme yapmak bu kadar kötü bir fikir? Beta, 1'e yakın olduğunda, aldığınız sonuçların duyarlılığını, beta'da çok küçük değişikliklerle bile olsa değiştirir. Yani eğer beta 0,9'dan 0,9005'e giderse, bu büyük bir sorun değil, sonuçlarınızda neredeyse hiç bir değişiklik olmaz. Ancak beta, 0,999'dan 0,9995'e giderse, bunun algoritmanızın tam olarak ne yaptığı üzerinde büyük bir etkisi olacaktır, değil mi? Her iki durumda da, kabaca ortalama 10 değerden fazladır. Ancak burada, son 1.000 örneğe göre üssel olarak ağırlıklı bir ortalamadan çıktı,şimdi, son 2000 örneğe göre. Ve elimizdeki 1/1-beta formülünden dolayı, beta 1'e yakın olduğunda, beta'daki küçük değişikliklere çok duyarlıdır. Yani bu tüm örnekleme süreci ne yaparsa, beta 1'e yakın olduğunda daha yoğun örneklemenize neden olur. Veya alternatif olarak, 1-beta 0'a yakın olduğunda. Böylece, olası sonuçların uzayını daha verimli bir şekilde araştırmak için örnekleri nasıl dağıttığınız konusunda daha verimli olabilirsiniz. Yani, bunun, hiper parametrelerin örnekleneceği doğru ölçeği seçmenize yardımcı olacağını umuyorum. Bazı hiper parametrelerin seçiminde doğru ölçeklendirme kararı vermezseniz, bunun için endişelenmeyin. Ölçek toplamının daha üstün olduğu düzgün ölçekte örneklemeniz durumunda, yine de iyi sonuçlar alabilirsiniz. Özellikle ince bir arama yapmak için kaba ölçek kullanırsanız, sonraki iterasyonlarda , örneklemek için en kullanışlı hiper parametre değer aralığına odaklanırsınız. Umarım bu, hiper parametre araştırmasında size yardımcı olur. Bir sonraki videoda, hiper parametre araştırma sürecinizi nasıl organize edeceğiniz konusunda bazı düşünceleri paylaşmak istiyorum. Umarım iş akışınızı biraz daha verimli hale getirir.