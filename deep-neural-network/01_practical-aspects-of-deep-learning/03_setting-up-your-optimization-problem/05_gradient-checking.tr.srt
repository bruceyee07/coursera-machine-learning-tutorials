1
00:00:00,400 --> 00:00:04,000
Eğim kontrolü (gradient checking), geri yayılımı
uygularken bana birçok kez

2
00:00:04,000 --> 00:00:08,500
zaman kazandırmış ve hataları
bulmamda yardımcı olmuş bir tekniktir.

3
00:00:08,500 --> 00:00:10,890
Şimdi bunu kendi uygulamanızda
hata ayıklamak (debug) veya

4
00:00:10,890 --> 00:00:14,885
uygulamanızın doğruluğunu teyit etmek
için nasıl kullanabileceğinizi görelim.

5
00:00:14,885 --> 00:00:20,975
Sinir ağınız; W1, b1'den Wl, bL'ye kadar
birtakım parametrelere sahip olacaktır.

6
00:00:20,975 --> 00:00:23,935
Eğim kontrolünü uygulamak için
yapmanız gereken ilk işlem

7
00:00:23,935 --> 00:00:28,835
tüm parametrelerin büyük bir
vektöre dönüştürülmesidir.

8
00:00:28,835 --> 00:00:34,860
Yani burada yapmanız gereken şey,
W matrisini bir vektöre dönüştürmektir.

9
00:00:34,860 --> 00:00:39,850
Tüm W'ları vektörlere dönüştürdükten sonra
hepsini birbirine bağlayarak

10
00:00:39,850 --> 00:00:45,170
büyük bir vektör elde etmiş olacaksınız.

11
00:00:45,170 --> 00:00:47,020
Bu büyük vektöre theta diyelim.

12
00:00:47,020 --> 00:00:52,720
Burada bedel fonksiyonu (cost function) J,
W ve B'nin fonksiyonu olmak yerine

13
00:00:52,720 --> 00:00:58,380
yalnızca theta'nın bir fonksiyonu olmaktadır.

14
00:00:58,380 --> 00:01:02,160
Ardından W ve B ile yaptığımız gibi

15
00:01:02,160 --> 00:01:07,740
dW[1], db[1] ve devamını da
theta ile aynı boyutlara sahip olan

16
00:01:07,740 --> 00:01:12,200
büyük bir vektöre (d theta) dönüştebilirsiniz.

17
00:01:12,200 --> 00:01:17,210
Daha önce yaptığımız gibi, dW[1]'i matrise
dönüştürdük. db[1] ise zaten bir vektördü.

18
00:01:17,210 --> 00:01:21,220
dW[L] yi,matris olan tüm 
dW'lere dönüştürdük.

19
00:01:21,220 --> 00:01:24,632
dW1'in W1 ile ve db1'in b1 ile aynı

20
00:01:24,632 --> 00:01:27,080
boyutlara sahip olduğunu unutmayın.

21
00:01:27,080 --> 00:01:31,252
Buradaki türevleri, daha önceden yaptığımız gibi
yeniden boyutlandırarak ve birbirine bağlayarak

22
00:01:31,252 --> 00:01:36,343
d theta vektörünü oluşturabilirsiniz.

23
00:01:36,343 --> 00:01:38,750
d theta vektörü, theta vektörü
ile aynı boyuta sahiptir.

24
00:01:38,750 --> 00:01:43,780
Burada asıl soru, d theta eğim (gradient) midir

25
00:01:43,780 --> 00:01:47,310
ya da bir diğer deyişle
bedel fonksiyonu J'nin eğimi midir?

26
00:01:47,310 --> 00:01:49,620
Şimdi eğim kontrolünü (gradient checking)
nasıl uygulayacağımızı görelim.

27
00:01:49,620 --> 00:01:52,740
Ayrıca gradient checking'in genelde
grad check olarak kısaltıldığını da belirtelim.

28
00:01:52,740 --> 00:01:57,690
Öncelikle J'nin, theta'nın
bir fonksiyonu

29
00:01:57,690 --> 00:01:58,277
olduğunu hatırlayalım.

30
00:01:58,277 --> 00:02:04,750
Yani J'yi theta 1, theta2, theta 3 ve devamının
bir fonksiyonu olarak gösterebiliriz.

31
00:02:06,880 --> 00:02:11,618
Burada theta'ların sayısı,
theta vektörünün boyutuna eşittir.

32
00:02:11,618 --> 00:02:18,519
Eğim kontrolünü uygulayabilmek için,
her i için yani her theta için

33
00:02:18,519 --> 00:02:23,008
d theta approx i'yi hesaplayacak

34
00:02:23,008 --> 00:02:26,416
bir döngü oluşturmamız gerekiyor.

35
00:02:26,416 --> 00:02:28,170
Burada iki yönlü bir fark alalım.

36
00:02:28,170 --> 00:02:30,100
J(theta)'yı alalım.

37
00:02:30,100 --> 00:02:34,440
Theta 1, theta 2 ve theta i'ye kadar.

38
00:02:34,440 --> 00:02:38,380
Burada yalnızca theta i'yi epsilon kadar arttırıp

39
00:02:38,380 --> 00:02:42,970
geri kalanları aynı tutmak için
theta i'ye epsilon ekleyeceğiz.

40
00:02:42,970 --> 00:02:46,164
Burada iki yönlü fark aldığımız için

41
00:02:46,164 --> 00:02:51,226
aynı işlemi -epsilon ekleyerek
diğer taraf için de yapacağız.

42
00:02:51,226 --> 00:02:54,520
Geriye kalan elemanları ise
olduğu gibi bırakacağız.

43
00:02:54,520 --> 00:02:59,690
Ve bu ifadeyi 2 theta'ya böleceğiz.

44
00:02:59,690 --> 00:03:04,772
Bir önceki videoda da gördüğümüz üzere

45
00:03:04,772 --> 00:03:10,270
bu ifade, yaklaşık olarak d theta i'ye eşittir.

46
00:03:10,270 --> 00:03:15,609
Burada d theta i,
—eğer d theta i, bedel fonksiyonu J'nin türevi ise—

47
00:03:15,609 --> 00:03:21,320
J'nin theta i'ye göre kısmi türevidir.

48
00:03:21,320 --> 00:03:25,130
Burada yapmanız gereken, her i değeri
için bu ifadeyi hesaplamaktır.

49
00:03:25,130 --> 00:03:28,360
Ve hesaplama sonucunda
elinizde 2 tane vektör olacak.

50
00:03:28,360 --> 00:03:31,793
Burada d theta approx, d theta ile
aynı boyuta sahip olacaktır.

51
00:03:31,793 --> 00:03:35,860
Aynı şekilde bu iki vektör de

52
00:03:35,860 --> 00:03:39,373
theta ile aynı boyuta sahip olacaktır.

53
00:03:39,373 --> 00:03:43,183
Burada yapmanız gereken, bu iki vektörün
birbirlerine yaklaşık olarak

54
00:03:43,183 --> 00:03:44,130
eşit olup olmadığını kontrol etmektir.

55
00:03:44,130 --> 00:03:47,310
Peki, iki vektörün birbirine gerçekten

56
00:03:47,310 --> 00:03:50,910
yakın olup olmadığını nasıl kontrol edebiliriz?

57
00:03:50,910 --> 00:03:52,593
Ben tam olarak şu adımları izliyorum.

58
00:03:52,593 --> 00:03:57,297
Öncelikle iki vektör arasındaki Öklid uzaklığını hesaplarım.

59
00:03:57,297 --> 00:04:02,100
d theta approx eksi d theta,
yani bu ifadenin L2 büyüklüğü (L2 norm)

60
00:04:02,100 --> 00:04:03,851
Burada bu ifadenin karesinin
alınmadığına dikkat edin.

61
00:04:03,851 --> 00:04:06,788
Burada tüm elemanların
farklarının karelerini toplayıp

62
00:04:06,788 --> 00:04:09,857
karekökünü alırız ve
Öklid uzaklığını elde ederiz.

63
00:04:09,857 --> 00:04:15,512
Ardından bu ifadeyi vektör uzaklıkları
ile normalize etmek için

64
00:04:15,512 --> 00:04:19,150
d theta approx artı d theta ile böleriz.

65
00:04:19,150 --> 00:04:22,620
Yalnızca bu vektörlerin
Öklid uzaklıklarını kullanırız.

66
00:04:22,620 --> 00:04:28,044
Burada payda, vektörlerin çok küçük veya
büyük olması durumunda

67
00:04:28,044 --> 00:04:32,860
bu ifadeyi bir orana dönüştürmektedir.

68
00:04:32,860 --> 00:04:35,202
Bunu çalışmalarımda uygularken

69
00:04:35,202 --> 00:04:39,898
epsilon'u 10 üzeri -7, yani 1e-7 olarak seçerim.

70
00:04:39,898 --> 00:04:44,644
Eğer bu formül, bu epsilon değerini kullanırken

71
00:04:44,644 --> 00:04:49,460
10 üzeri -7 veya daha küçük bir değeri
sonuç olarak veriyorsa, bu gayet güzel.

72
00:04:49,460 --> 00:04:53,302
Bu, yaptığımız türev yaklaşımının
doğru olduğunu gösterir.

73
00:04:53,302 --> 00:04:55,330
Bu yalnızca küçük bir değer.

74
00:04:55,330 --> 00:05:00,790
Eğer sonuç 10 üzeri -5 civarlarındaysa
sonucu dikkatlice incelerdim.

75
00:05:00,790 --> 00:05:02,148
Belki de doğru olan budur.

76
00:05:02,148 --> 00:05:05,239
Ancak bu vektörün elemanlarını
tekrardan kontrol eder ve

77
00:05:05,239 --> 00:05:07,862
hiçbir elemanın çok büyük
olmadığından emin olurdum.

78
00:05:07,862 --> 00:05:10,649
Eğer elemanlardan bazıları çok büyük ise

79
00:05:10,649 --> 00:05:12,860
muhtemelen bir yerde hata vardır.

80
00:05:12,860 --> 00:05:17,719
Eğer bu sonuç 10 üzeri -3 civarlarındaysa

81
00:05:17,719 --> 00:05:21,728
çok daha dikkatli inceleyerek
hatayı bulmaya çalışırdım.

82
00:05:21,728 --> 00:05:25,083
Genelde sonuç olarak 10 üzeri -3'ten
küçük bir değer elde etmelisiniz.

83
00:05:25,083 --> 00:05:29,690
Eğer sonuç 10 üzeri -3'ten büyükse,
bu durumda daha büyük bir sıkıntı vardır.

84
00:05:29,690 --> 00:05:32,970
Gerçekten bir yerde hata
yaptığımdan emin olurdum.

85
00:05:32,970 --> 00:05:37,204
Bu durumda theta'nın her
elemanını tek tek inceleyerek

86
00:05:37,204 --> 00:05:41,799
d theta approx i ile d theta i'nin farklı olmasına

87
00:05:41,799 --> 00:05:45,960
sebep olan bir i değerinin olup
olmadığını incelerdim.

88
00:05:45,960 --> 00:05:47,867
Ardından bu değeri, türev hesaplamaları
sırasında herhangi bir

89
00:05:47,867 --> 00:05:51,040
hata yapıp yapmadığımdan emin
olmak için kullanırdım.

90
00:05:51,040 --> 00:05:54,970
Ayıklama sürecinden sonra bu değer
oldukça küçük bir değer haline gelir

91
00:05:54,970 --> 00:05:59,820
ve bu da, doğru bir uygulama
yaptığımız işaret eder.

92
00:05:59,820 --> 00:06:01,320
Bir sinir ağını uygularken

93
00:06:01,320 --> 00:06:04,840
genelde öncelikle ileri yayılım ve
geri yayılımı uygularım.

94
00:06:04,840 --> 00:06:08,612
Ardından eğim kontrolü yapıp çıkan
çıkan sonucun büyük olduğunu fark ederim.

95
00:06:08,612 --> 00:06:12,460
Buradan da bir yerlerde hata olduğundan
şüphelenir ve hatayı bulmaya çalışırım.

96
00:06:12,460 --> 00:06:16,310
Eğer hataları ayıkladıktan sonra eğim
kontrolü sonucu küçük bir değer elde ettiysem

97
00:06:16,310 --> 00:06:20,110
uygulamamın doğru olduğuna emin olabilirim.

98
00:06:20,110 --> 00:06:22,310
Artık eğim kontrolünün nasıl
işlediğini biliyorsunuz

99
00:06:22,310 --> 00:06:24,850
Sinir ağlarını uygularken birçok kez
hataları bulmamda yardımcı olmuştu.

100
00:06:24,850 --> 00:06:27,330
Umuyorum ki size de yardımcı olacaktır.

101
00:06:27,330 --> 00:06:29,970
Gelecek videoda, eğim kontrolünü
gerçekten nasıl uygulayabileceğiniz

102
00:06:29,970 --> 00:06:33,490
hakkında ekstra birkaç
tavsiye ve not paylaşacağım.

103
00:06:33,490 --> 00:06:34,640
Haydi bir sonraki videoya geçelim.