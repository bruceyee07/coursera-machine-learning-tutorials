후 방향전파을 도입하는 경우
gradient checking이라는 테스트를 찾으실텐데요, 
후 방향전파의 도입이 올바르도록 도와줄 것입니다. 가끔은 공식들을 다 적어놓고 100퍼센트 
맞는지 확실하지 않는 경우가 있는데요, 상세한 부분까지 후 방향전파에서 맞는지 말이죠. gradient checking까지 이야기하기 위해서 일단 먼저 숫자적으로 기울기의 산출값을
구하는 방법을 배우겠습니다. 다음 비디오에서는 gradient checking을 도입하는 방법과 backdrop의 도입이 맞도록 
하는 방법에 대해 배우겠습니다. 자 그럼 f 함수를 갖고
여기 다시 나타내보겠습니다. 기억하십시요, 이것은 f 쎄타 는 쎄타 세제곱이라는 공식입니다. 쎄타의 일정한 값으로 시작해보겠습니다. 쎄타가 1이라고 해봅시다. 쎄타를 단순이 약간 우측으로 이동시키는 대신에, 쎄타 더하기 앱실론 만큼 말이죠, 오른쪽으로 약간 이동시키고 또 왼쪽으로 쎄타 빼기 앱실론만큼 또 이동 시키겠습니다. 그럼 이것은 1이고, 이것은 1.01입니다.
이것은 그럼 0.99인데요, 앱실론은 이전과 동일합니다. 그 값은 0.01입니다. 여기 조금한 삼각형을 갖고, 높이와 너비로 계산하는 것보다 더 나은
기울기의 추정치를 구할 수 있는데요, 여기 지점 f의 쎄타 빼기 앱실론과 여기 지점인데요 그렇게 해서 높이 나누기 너비를
이렇게 더 큰 삼각형에서 구합니다. 기술적인 이유에서, 상세히 이야기하진 않겠지만,
높이 나누기 너비를 여기 이 큰 삼각형에서 하면 훨씬 더 정확한 쎄타 derivative의 
근사치가 나옵니다. 위의 삼각형만 갖는 대신에 마치 2개의 삼각형을 갖는 것과 같습니다. 맞죠? 여기 위의 삼각형과 
여기 밑의 삼각형 이렇게 말이죠. 그렇게 해서 2개를 모두 반영시키는 것입니다. 이 큰 삼각형을 사용함으로써 말이죠, 그렇기 때문에 한쪽의 차이를 갖추는 것이 아니라
양쪽의 차이를 갖추는 것입니다. 이제 산수를 해볼까요? 여기는 f의 쎄타 더학 앱실론입니다. 여기는 f의 쎄타 빼기 앱실론입니다. 그러므로 여기 큰 삼각형의 높이는 f의 
쎄타 더하기 앱실론 빼기 f의 쎄타 빼기 앱실론입니다. 그리고 너비는, 이것은 1앱실론이고, 이것은 2앱실론입니다. 그러므로 이 삼각형의 너비는 2앱실론 입니다. 그러므로 높이 나누기 너비는 너비는 f의 쎄타 더하기 앱실론 빼기 f의
쎄타 빼기 앱실론 나누기 너비입니다. 그 값은 2앱실론이고 여기 적겠습니다. 그럼 이것은 g의 쎄타와 근접하겠죠. 값을 대입하면, 
기억하시겠지만, f의 쎄타는 쎄타 세제곱입니다. 그러면 이석은 쎄타 더하기 앱실론이고 값이 1.01입니다. 이것의 세제곱을하고 빼기 0.99 쎄타 세제곱에
나누기 2 곱하기 0.01입니다. 언제든지 비디오 재생을 멈춰서
계산을 하셔도 됩니다. 이것이 3.0001이라는 것을 알 수 있는데요. 반면에 이전 슬라이드에서는 
g의 쎄타가 쎄타가 1이였을때, 이것이 3쎄타 세제곱 그러므로 여기 2개의 값이 
매우 근접한 값입니다. 근사치 오류는 이제 0.0001입니다. 이전 슬라이드에서는 반면에
one sided difference을 가졌는데요 쎄타 더하기 쎄타 더하기 앱실론으로
3.0301입니다. 그러므로 근사치 오류는 
0.0001대신에 0.03 입니다. 이러한 two sided difference는 derivative를 추정하는데 이 값이
3과 매우 유사하다는 것을 알 수 있습니다. 이것은 더 큰 confidence로 g의 쎄타가 F의 derivative의 올바른 도입이라고
할 수 있습니다. 이 방법을 gradient checking과 후 방향전파 에 쓰는 경우, one-sided difference를 쓰는 것보다
2배는 더 느리게 작동합니다. 실제로는 이 다른 방법을 쓰는 것이 값어치가 있다고 봅니다. 훨씬 더 정확도가 높기 때문이죠. 선택적인 이론 내용인데요, 미적분 학에 조금 익숙하신 분들을 위한 내용입니다. 지금 제가 이야기하려는 내용이
잘 이해가 안 가셔도 괜찮습니다. 공식적인 derivative의 정의는 아주 작은 값의 앱실론의 경우, f의 쎄타
더하기 앱실론 빼기 f의 쎄타 빼기 앱실론 나누기 2앱실론입니다. 그리고 derivative의 공식적인 정의는 우측의 공식의 limit입니다.
앱실론이 0으로 가는 경우입니다. limit의 정의는 미적분학 수업을 통해 배우게 되는 내용인데요,
여기서는 다루지 않겠습니다. 0이 아닌 앱실론 값의 경우, 여기 approximation의 오류는 
앱실론 제곱의 오더입니다. 그리고 앱실론은 굉장히 작은 숫자입니다. 만약 앱실론이 0.01인 경우, 여기서와 같이 말이죠, 그럼 앱실론 제곱은 0.0001입니다. 여기 큰 O표기는 오류가 어떤 상수값 곱하기 
이것이라는 건데요. 이것은 사실 정확히 approximation 오류입니다. 그럼 큰 O 상수는 1이되겠죠. 우리가 반면에 만약 이 공식을 쓰면, 오류는 앱실론의 오더입니다. 그리고 앱실론이 1보다 작은 경우, 앱실론은 앱실론 제곱보다 훨씬 더 큽니다
그렇기 때문에 여기 이 공식이 여기 이 왼쪽 공식보다 훨씬 더 덜 wjd확한 approximation입니다. 그렇기 때문에 저희는 gradient checking 을 할때, 
two sided difference 를 선호합니다. f의 쎄타 더하기 앱실론 빼기 f의 쎄타 빼기 앱실론 나누기 2앱실론을 계산할 때 말이죠. 
one-sided difference는 덜 정확합니다. 마지막 2개의 코멘트가 이해 가지 않았다면, 
관련 내용이 다 여기에 있습니다.걱정하지 마십시요. Don't worry about it. 저것은 미적분학에 익숙한 분들을 위한 주 내용입니다. numerical approximations과 관련된 내용이죠. 여러분이 기억하셔 야할 부분은
two-sided difference 공식이 더 정확하다는 점입니다. 그러므로 다음 비디오에서 gradient checking을 할때는 
그 방법을 이용할 것입니다. 이제 여러분은 two-sided difference을 통해, 숫자적으로 다른 사람이 주는 g함수가, g의 쎄타가 f함수 derivative의 올바른 도입인지 입증할 수 있습니다. 이제 여러분이 도입한 b 후 방향전파가 올바른지 와 버그들은 찾아내는 거를 입증해보겠습니다.