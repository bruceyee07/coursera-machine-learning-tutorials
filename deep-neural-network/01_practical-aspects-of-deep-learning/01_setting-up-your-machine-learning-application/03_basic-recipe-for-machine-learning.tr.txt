Bir önceki videoda algoritmanın bir bias veya varyans problemi mi veya her ikisi de mi olduğunu teşhis ederek eğitim hatası ve derinlik hatasına bakarak nasıl yardımcı olabileceğini gördünüz. Bu bilgi makineleri öğrenmek için basit bir tarif olarak adlandırılan şeyi daha sistematik kullanmana izin vermesinin yanı sıra aynı zamanda algoritmanın performansını daha sistematik geliştirmene yardımcı oluyor. Şimdi bir bakalım Bir sinir ağını eğitirken işte kullanacağım temel bir tarif. Bir başlangıç modelin eğitimini aldıktan sonra, ilk önce soracağım şey algoritma aşırı bias içeriyor mu? ve aşırı bias varsa denemek ve değerlendirmek için eğitim seti veya eğitim verisinin performansına gerçekten bakmalısın. Doğru. Ve böylece aşırı bias varsa, eğitim setine bile uymuyorsa deneyebileceğiniz bazı şeyler ağ seçmeyi denemek olurdu. Daha fazla gizli katman veya daha fazla gizli öğe gibi, ya da daha uzun süre eğitebilirsin. Belki eğitimler uzun sürer veya daha gelişmiş optimizasyon algoritmaları dener, Bundan daha sonra bahsedeceğiz. Ya da deneyebilirsiniz, bu belki işe yarayabilir de yaramayabilir de. Fakat daha sonra farklı ağ mimarileri olduğunu göreceğiz ve belki de bu sorun için daha uygun yeni bir ağ mimarisi bulabilirsiniz. Bunu parantez içinde yazıyorum çünkü bilmen gereken bir şey var ki denemelisin. Belki çalıştırabilirsin, belki çalıştıramazsın. Daha büyük bir iletişim ağı almak neredeyse her zaman yardımcı olur. Bazen ise daha fazla çalışman bir işe yaramayabilir ama kesinlikle zararı dokunmaz. Yani bir derin öğrenme algoritmasını uygularken ben en azından bias probleminden kurtulana kadar bunları denerdim. Denedikten sonra geri gider ve uyana kadar aynısını yapmaya devam ederdim en azından çalışma seti iyice uyana kadar. Ve genellikle yeterince büyük bir iletişim ağınız varsa, training datasını sanki birinin yapabileceği bir problemmiş gibi uyumlu bir hale getirebilir olmalısınız. Tamam mı? Görüntü çok bulanık ise, uygun olması imkansız olabilir. Ama en azından bir insan bu sorunda başarı sağlayabiliyorsa ve eğer base hatasının çok yüksek olmadığını düşünüyorsan o zaman yeterince büyük bir ağı çalıştırarak en azından training setinde iyi bir sonu alabiliyor olmalısın. En azından training sete uymalı ya da fazla gelmeli. Bias miktarını kabul edilebilir oranlara indirdiğin zaman kendine sor, varyans prolemin var mı? Ve varsa eğer ben ölçmek için dev set performansa bakardım. İyi çalışan bir training setten iyi çalışan bir bir dev set performansı çıkarabiliyor musun? Ve yüksek varyansın varsa eğer bunu çözmenin en iyi yolu daha fazla data toplamaktır. Bunu yapabilirsen data sana yardımcı olabilir. Ama bazen daha fazla data toplayamazsın ya da regüle etmeyi deneyebilirsin ki bunun hakkında bir sonraki videoda konuşacağız. Fazla gelmeyi azaltmaktan bahsederken ve aynı zamanda yine bazen denemeniz gerekir. Ama eğer daha uygun bir sinirsel ağ mimarisi bulabilirseniz bu bias probleminizi azaltmanın yanı sıra varyans problemini de azaltabilir. Ama bunu nasıl yapacaksınız? Nasıl yapacağınız konusunda tamamen sistematik olmak daha zordur. Ama ben bunları deniyorum ve sürekli geri dönüyorum taa ki hem biası hem de varyansı düşük bir şey bulana kadar, ki zaten o zaman bitirmiş oluyorsunuz. Bir kaç noktaya dikkat çekmekte fayda var. Öncelikle yüksek bias mı yoksa yüksek varyans mı olduğuna bağlı olarak, denemeniz gereken setler çok farklı olabilir. Bu yüzden ben genellikle training dev set kullanırım ve sonrasında onun sonucunu denenecek şeylerin alt kümesini bulmak için kullanırım. Yani örneğin eğer gerçekten yüksek bias problemim varsa daha fazla bilgi toplamak hiç bir işime yaramayacak. Ya da en azından yapılacak en etkili şey o değil. Yani ne kadar bias ya da varyans ya da her ikisinden problemim olduğu konusunda net olmam bana en faydalı olacak yöntemleri seçmem konusunda faydalı olabilir. İkinci olarak makine eğitiminin ilk zamanlarında neyin bias, varyans, tradeoff olarak adlandırıldığı konusunda bir çok tartışma olmuştur. Ve bunun sebebi, deneyebileceğiniz bir çok şey için, bias ı artırabilir, varyansı azaltabilirsiniz, veya bias ı azaltabilir, varyansı artırabilirsinz. Fakat ilk derin öğrenme çağında, çok fazla aracımız yoktu, azaltan bir çok araç yoktu diğerini etkilemeden, bias ya da sadece varyans azaltılamazdı. Fakat modern derin öğrenmede(big data çağında) daha büyük bir iletişim ağını eğitebildiğin sürece ve daha fazla veriyi tuttuğun sürece, bu her iki durum için de geçerli değildir ama bu durumda, hemen hemen her zaman daha büyük bir iletişim ağı almak, uygun bir şekilde düzenlediğiniz sürece varyansı etkilemeden bias ı azaltır. Ve her zaman daha fazla veri almak varyansı azaltır ve bias ı çok fazla etkilemez. Yani gerçekte olan şey şu, bu iki adımla, eğitim yapabilme,bir iletişim ağı seçebilme veya daha fazla veri seçebilme, şimdi diğer şeyleri daha fazla etkilemeden bias ı azaltmak ve bunu sürdürmek için araçlarımız var veya varyansı azaltmak ve bunu sürdürmek için. Ve bence bu derin öğrenmenin gözetim altında öğrenmekte bu kadar iyi olmasındaki en büyük etkenlerden birisi bias ve varyansı dikkatlice dengelemen gereken tradeoff dan daha az var ama bazen biası azaltmak için daha fazla seçeneklerin olabilir ya da diğerini gereksiz yere artırmadan ya da diğerini gereksiz yere artırmadan varyansı azaltmak için. Ve gerçekte iyi düzenlenmiş bir iletişim ağınız var. Regülarizasyon hakkında konuşmaya bir sonraki video ile başlayacağız. Daha büyük bir ağın eğitimi neredeyse hiç bir zaman etkilemez. Ve düzenlediğin sürece çok büyük bir sinir ağını eğitmenin başlıca masrafı sadece bilişimsel zamandır. Umarım bu makine öğrenme probleminizi organize etmenin, bias ve varyansı teşhis etmenin temel yapısı hakkında size bir fikir verir. Ve sonrasında probleminizde ilerleme kaydetmeniz için doğru yöntemi seçmede size yardımcı olur. Bu videoda bir kaç defa bahsettiğim şeylerden biri de regülarizasyon idi. Bu varyansı azaltmak için çok kullanışlı bir tekniktir. Regülarizasyonu kullandığınızda biraz bias, varyans, tradeoff var. Bu biası biraz artırabilir. Yeterince büyük bir iletişim ağınız varsa gerçi bu pek olmaz. Ama detaylara bir sonraki videoda girelim ki regülarizasyonu sinirsel ağınıza uygulamayı daha iyi anlayabilin.