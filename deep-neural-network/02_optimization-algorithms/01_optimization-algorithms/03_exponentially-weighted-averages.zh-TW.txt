我想要給你看一些最佳化的演算法 他們比梯度下降法還要快。 而為了能夠理解那些演算法， 你必須能利用一個叫「指數加權平均」
(exponentially weighted averages) 在統計領域也叫「指數移動平均」
(exponentially weighted moving averages) 我們先談談這個， 然後再藉此建構出更精密的最佳化演算法。 那麼，雖然我現在住在美國 我是在倫敦出生的 所以這個例子，我是拿去年倫敦每天的溫度 那麼一月一號 氣溫是華氏40度 我知道大部份地方都用攝氏 不過我住在美國，用的是華氏 總之這是攝氏4度。 然後一月二號 是攝氏9度，等等等 然後一年過了一半 一年有365天，所以會是 第180天，我想大約是五月底 氣溫是華氏60度，也就是攝氏15度 所以天氣開始變暖，逐漸要到夏天，而一月的時候比較冷。 所以你把這些資料畫出來會長這樣 第一天是一月；這一個點你知道 是夏天剛開始 而這點是一年的最後 也就是十二月底。 所以這是一月一號 這是年中近夏 而這是年底的資料。 所以這個資料看起來有些噪音，
如果你想計算其趨勢 某種局部平均 (local average) 或移動平均 (moving average) 你可以這樣做 讓我們初始化 V_0 為 0 然後呢，在每一天 我們這樣做平均：對前一次的值乘以 0.9 作為加權 再加上 0.1 乘以當天的氣溫 所以這邊的 theta 1 是第一天的氣溫 然後在第二天，我們同樣算加權平均： 0.9 乘以上一個值，加上 0.1 乘以今天的氣溫，... ... V_2 + 0.1 乘 theta_3，等等。 一般性的公式是，某一天的 V 會是 0.9 乘前一天的 V 再加上 0.1 乘當天的氣溫。 那麼，如果你這樣計算，用紅色畫線 會得到這個 你會得到一個「移動平均」(moving average)，或者所謂 每日氣溫的「指數加權平均」
(exponentially weighted average) 那麼讓我們看看前一張投影片的方程式 這是 V_t 等於 剛剛我們用 0.9 我們現在用一個參數 beta， beta 乘以 V_t-1 加上 — 剛剛用 0.1，我在這邊換成 1-beta — 然後乘以 theta_t 所以剛剛我們用 beta = 0.9 實際上因為某些原因，我們等等會解釋， 這樣的計算，你可以把 V_t 看成近似去平均 「(1-beta) 分之一」天的氣溫 所以例如 beta 為 0.9 的時候，你可以把 這公式看成把過去10天的氣溫作平均 這個就是這條紅線。 現在我們試試不同的 假設 beta 很靠近 1， 假設是 0.98 那麼，你看 1 / (1-0.98)， 這個會等於 50 所以你可以把這想成大約是 最近50天氣溫的平均， 畫出來會是這條綠色的線。 注意幾件事情，當 beta 很大時 畫出來的線會變比較平滑，因為 你對更多天的氣溫去做平均 所以你知道這曲線 波動較小、比較平滑， 但另一方面，這曲線會更 往右偏移，因為你對比較大範圍 (window) 的氣溫去平均 而拿比較大的範圍取平均 這個公式，這個指數加權平均的公式 他反映會比較慢 當氣溫改變的時候 所以會有比較多的延遲 這是因為當 beta 等於 0.98 的時候 前一次的值拿了很高的權重，而只有很小的權重 0.02 會給現在看到的值， 所以當氣溫改變 當氣溫變高或變低 這一個指數加權平均 在 beta 很大時反應會很慢。 那現在我們試試另一個值 如果你把 beta 設成另個極端 假設是 0.5 根據右邊的公式，這個 會類似只對兩天的氣溫平均， 如果畫出來，會是這黃線。 如果只對兩天的氣溫平均 就如同你對很小的範圍 (window) 去平均 所以噪音更大 易被異常值影響 但是這個能更快反映出氣溫的變化。 所以要實作指數加權平均就是用這個公式 再次說明，在統計的文獻中 這被稱作指數加權「移動」平均 我們就簡稱指數加權平均。 藉由調整這個參數 — 其實之後會看到 這其實是你的學習演算法的一個超參數 — 你會得到 稍微不同的效果，而通常會有 某個比較中庸的值效果最好。 例如紅色這條線，這看起來可能 比起綠線或黃線還是個更好的氣溫平均。 你明白了指數加權平均計算的基本功 在下部影片，讓我們去更體會這在做啥