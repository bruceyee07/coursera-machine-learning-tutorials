1
00:00:00,000 --> 00:00:03,900
이전 비디오에서는 지수 가중 평균에 대하여 이야기했었는데요,

2
00:00:03,900 --> 00:00:06,345
여러분이 신경망을 트레이닝하는데 사용한 여러 최적화 알고리즘의

3
00:00:06,345 --> 00:00:09,910
주요 요소가 될 것입니다.

4
00:00:09,910 --> 00:00:12,330
그러므로 이번 비디오에서는, 이런 알고리즘이 하는 내용에 대한

5
00:00:12,330 --> 00:00:15,930
직관적인 부분에 대해서 조금 자세히 살펴보도록 하겠습니다.

6
00:00:15,930 --> 00:00:21,305
기억하시겠지만 이것이 지수 가중 평균의 중요 공식입니다.

7
00:00:21,305 --> 00:00:24,755
여기서 베타의 값이 0.9인 경우 빨간색 선이 나오는데요,

8
00:00:24,755 --> 00:00:26,390
만약에 그 값이 1에서 가까울 경우,

9
00:00:26,390 --> 00:00:29,700
만약 0.98이면, 초록색의 선이 나옵니다.

10
00:00:29,700 --> 00:00:31,200
만약 그 값이 더 작을 경우,

11
00:00:31,200 --> 00:00:34,470
0.5같은 경우엔, 여기와 같은 노란색 선이 됩니다.

12
00:00:34,470 --> 00:00:37,110
조금 더 수학적인 부분을 자세히 보겠습니다.

13
00:00:37,110 --> 00:00:40,220
일별 평균 기온을 어떻게 산출하는지 한번 이해해보도록 하겠습니다.

14
00:00:40,220 --> 00:00:41,935
여기는 아까봤던 그 공식인데요,

15
00:00:41,935 --> 00:00:48,330
베타의 값을 0.9로 설정하고, 이 값에 상응하는 몇개의 식을 더 적어보겠습니다.

16
00:00:48,330 --> 00:00:50,970
만약에 T의 값이 0에서 1로

17
00:00:50,970 --> 00:00:54,105
그리고 2에서 3으로

18
00:00:54,105 --> 00:00:56,760
T가 늘어날때 의 값을 분석하는 반면에

19
00:00:56,760 --> 00:01:00,740
여기서는 T의 값이 감소할때 의 경우를 적었습니다.

20
00:01:00,740 --> 00:01:03,055
여기 첫번째 식을 보겠습니다.

21
00:01:03,055 --> 00:01:06,750
V100이 실제로는 어떤 의미인지 보겠습니다.

22
00:01:06,750 --> 00:01:09,795
V100은 어떻게 되냐면,

23
00:01:09,795 --> 00:01:11,850
여기 2개의 항을 서로 맞바꿔 볼텐데요,

24
00:01:11,850 --> 00:01:15,195
여기는 0.1 곱하기 쎄타 100에

25
00:01:15,195 --> 00:01:19,620
더하기 0.9 곱하기 전날의 기온을 해줍니다.

26
00:01:19,620 --> 00:01:21,055
그러면 V99는 또 어떻게 되죠?

27
00:01:21,055 --> 00:01:25,075
여기 식에 이 식을 대입해보겠습니다.

28
00:01:25,075 --> 00:01:30,390
이 값은 그냥 0.1 곱하기 쎄타 99,

29
00:01:30,390 --> 00:01:33,215
그리고 다시 2개의 항을 서로 맞바꿨습니다.

30
00:01:33,215 --> 00:01:38,030
더하기 0.9 곱하기 V98입니다.

31
00:01:38,030 --> 00:01:39,485
그러면 또 V98은 또 어떻게 되죠?

32
00:01:39,485 --> 00:01:41,765
자, 여기서 구할 수 있는데요,

33
00:01:41,765 --> 00:01:44,220
이곳에다가 대입시키면 됩니다.

34
00:01:44,220 --> 00:01:47,875
0.1 곱하기 쎄타 98

35
00:01:47,875 --> 00:01:52,560
더하기 0.9 곱하기 V97 등등 말이죠.

36
00:01:52,560 --> 00:01:54,405
그리고 여기 항들을 모두 곱해버리면

37
00:01:54,405 --> 00:02:00,060
V100 은 0.1 곱하기 쎄타 100 더하기

38
00:02:00,060 --> 00:02:02,552
자, 이제 쎄타99의 계수를 한번 보겠습니다.

39
00:02:02,552 --> 00:02:09,030
그 값은 0.1 곱하기 0.9 곱하기 쎄타99

40
00:02:09,030 --> 00:02:12,160
그리고 이제 쎄타 98의 계수를 보겠습니다.

41
00:02:12,160 --> 00:02:16,880
0.1 한번 곱하고 0.9 곱하기 0.9

42
00:02:16,880 --> 00:02:18,565
식들을 전개를 하면,

43
00:02:18,565 --> 00:02:26,295
이 값은 0.1 곱하기 0.9 의 제곱 곱하기 쎄타 98

44
00:02:26,295 --> 00:02:28,260
이것을 계속 전개해서 괄호를 풀면

45
00:02:28,260 --> 00:02:32,315
이 값은 0.1 곱하기 0.9의 3승

46
00:02:32,315 --> 00:02:34,920
쎄타 97 더하기

47
00:02:34,920 --> 00:02:37,440
0.1 곱하기 0.9의 4승

48
00:02:37,440 --> 00:02:41,800
곱하기 쎄타 96 더하기...

49
00:02:41,800 --> 00:02:47,010
이런 방법으로 합을 구하면 되고, 쎄타100에 대한 가중평균치 인데요,

50
00:02:47,010 --> 00:02:49,680
그 해의 100일간의 온도를 계산한 V100 까지 반영하여

51
00:02:49,680 --> 00:02:53,730
현재 시점의 기온을 뜻합니다.

52
00:02:53,730 --> 00:02:56,870
이것은 쎄타 100과 쎄타 99

53
00:02:56,870 --> 00:02:58,865
쎄타 98, 쎄타 97,

54
00:02:58,865 --> 00:03:02,175
쎄타 96 등등의 합을 나타내는 값입니다.

55
00:03:02,175 --> 00:03:05,250
이것을 그림으로 그리는 방법 중 한가지는,

56
00:03:05,250 --> 00:03:08,880
몇일간의 기온이 있다고 가정해보겠습니다.

57
00:03:08,880 --> 00:03:14,610
이것은 쎄타이고, 이것은 T이고요, 그러면 쎄타100은 어떤 값을 띌 것이고,

58
00:03:14,610 --> 00:03:17,095
쎄타99도 어떤 값이 있을 것이고,

59
00:03:17,095 --> 00:03:19,360
쎄타 98도 그럴 것입니다.

60
00:03:19,360 --> 00:03:21,255
그러면 T는 100, 99,

61
00:03:21,255 --> 00:03:23,070
98, 등등 이렇게 값을 가질 것이고,

62
00:03:23,070 --> 00:03:26,360
그렇죠, 이렇게 몇일의 기온이 있을 것입니다.

63
00:03:26,360 --> 00:03:31,015
그러면 이제 기하급수로 감소하는 함수 하나를 그려볼텐데요.

64
00:03:31,015 --> 00:03:37,140
0.1에서 시작해서 0.9까지

65
00:03:37,140 --> 00:03:41,630
곱하기 0.1 에서 0.9제곱

66
00:03:41,630 --> 00:03:44,555
곱하기 0.1 에서 등등 이렇게 말이죠.

67
00:03:44,555 --> 00:03:47,150
그렇게해서 이렇게 기하급수적으로 감소하는 함수를 되었죠.

68
00:03:47,150 --> 00:03:50,600
여러분이 V100을 계산하는 방법은,

69
00:03:50,600 --> 00:03:55,760
여기 이 두 함수 간에 각 항 별로 곱하고나서 합하면 됩니다.

70
00:03:55,760 --> 00:03:56,985
그러면 여기 이 값에다

71
00:03:56,985 --> 00:03:59,165
쎄타 100 곱하기 0.1 을 하고,

72
00:03:59,165 --> 00:04:05,770
여기 이 값에는 쎄타 99 곱하기 0.1 곱하기 0.9,

73
00:04:05,770 --> 00:04:07,995
이게 2번째 항이고, 계속 이렇게 합니다.

74
00:04:07,995 --> 00:04:10,170
즉, 여기에서처럼, 일별 기온을 갖고

75
00:04:10,170 --> 00:04:14,610
기하급수적으로 감소하는 함수에 곱한다음, 값을 더하는 것입니다.

76
00:04:14,610 --> 00:04:17,390
그러면 그것이 V100이 됩니다.

77
00:04:17,390 --> 00:04:19,165
알고보면,

78
00:04:19,165 --> 00:04:21,090
나중에 제가 설명을 드리겠지만,

79
00:04:21,090 --> 00:04:22,655
여기에 있는 모든 계수들을

80
00:04:22,655 --> 00:04:27,335
더하면 1이 되거나 1과 매우 근접한 값을 갖게됩니다.

81
00:04:27,335 --> 00:04:31,670
편이보정(bias correction)이라는 값과 이것에 대한 내용은 다음 비디오에서 다루겠지만,

82
00:04:31,670 --> 00:04:35,225
이런 점 때문에 지수 가중 평균이라고 합니다.

83
00:04:35,225 --> 00:04:37,595
마지막으로, 여러분은 궁금해할 수 있는데요,

84
00:04:37,595 --> 00:04:41,210
몇일간의 기록으로 기온이 평균값을 갖는지 말이죠.

85
00:04:41,210 --> 00:04:46,400
0.9의 10승을 해 보면,

86
00:04:46,400 --> 00:04:52,085
그 값이 0.35정도 되는데요, 이 값은 대략 1 나누기 e로,

87
00:04:52,085 --> 00:04:54,410
자연로그의 밑(base), e 분의 1이 됩니다.

88
00:04:54,410 --> 00:04:59,030
조금 더 일반적으로,1-앱실론으로 써 보면,

89
00:04:59,030 --> 00:05:00,200
이번 예제에서는

90
00:05:00,200 --> 00:05:01,880
앱실론은 0.1일 것입니다.

91
00:05:01,880 --> 00:05:07,250
그러므로 이 값이 0.9이면, (1-앱실론)의 (1/앱실론) 승이면

92
00:05:07,250 --> 00:05:08,720
이 값은 1/e 정도 됩니다.

93
00:05:08,720 --> 00:05:12,065
그 값은 0.34 에서 0.35 정도 되구요.

94
00:05:12,065 --> 00:05:14,735
다시 말해서,

95
00:05:14,735 --> 00:05:19,610
여기 이 높이가 3분의 1정도로 감소하는데

96
00:05:19,610 --> 00:05:24,680
약 10일 정도가 소요됩니다. 대략 피크의 1/e 이죠.

97
00:05:24,680 --> 00:05:25,915
이렇기 때문에,

98
00:05:25,915 --> 00:05:31,325
베타가 0.9인 경우,

99
00:05:31,325 --> 00:05:35,090
이것은 마치 여러분이

100
00:05:35,090 --> 00:05:40,355
직전 10일 간의 기온만 집중하여 지수 가중 평균을 구하는 것과 같은데요,

101
00:05:40,355 --> 00:05:43,940
약 10일 정도 이후 가중치가 현재 날짜 가중치 3분의 1보다

102
00:05:43,940 --> 00:05:48,380
약간 더 감소하기 때문에 그렇습니다.

103
00:05:48,380 --> 00:05:53,300
반면에 베타의 값이 0.98이였다고 하면,

104
00:05:53,300 --> 00:05:59,320
그러면, 0.98의 몇승을 해야 이 값이 매우 작은 값이 될까요?

105
00:05:59,320 --> 00:06:04,310
알고보니 0.98의 50승이면

106
00:06:04,310 --> 00:06:06,710
대략 1/e와 비슷한 값이 됩니다. 그렇기 때문에

107
00:06:06,710 --> 00:06:09,380
가중치는 첫 50일에는 1/e 보다 큰 값이 되었다가,

108
00:06:09,380 --> 00:06:11,840
그 후엔, 꽤 빠른 속도로 감소할 것입니다.

109
00:06:11,840 --> 00:06:14,780
그래서 직관적으로, 이것은 고정불변의 법칙 같이 봐도 되는데,

110
00:06:14,780 --> 00:06:18,860
이 값이 50일간의 대략적인 평균치라고 보면 됩니다.

111
00:06:18,860 --> 00:06:20,335
그 이유는, 이 예제에서

112
00:06:20,335 --> 00:06:22,290
여기 왼쪽의 표기법을 쓰자면,

113
00:06:22,290 --> 00:06:25,530
마치 앱실론의 값이 0.02인 것과 같습니다.

114
00:06:25,530 --> 00:06:27,750
즉, 앱실론 분의 1이 50인 것이죠.

115
00:06:27,750 --> 00:06:30,080
이렇게해서 이 공식이 나오는 것입니다.

116
00:06:30,080 --> 00:06:35,150
1 빼기 베타 분의 1로 평균을 구하는 것이 되죠.

117
00:06:35,150 --> 00:06:39,915
여기서 앱실론은 1-베타를 대체합니다.

118
00:06:39,915 --> 00:06:42,350
이것이 말해주는 것인 어떠한 상수까지,

119
00:06:42,350 --> 00:06:45,148
대략적으로 이것이 평균이 되어야하는 평균기온 일 수를 나타냅니다.

120
00:06:45,148 --> 00:06:48,175
하지만 이것은 그냥 대충 들여다 본 것이고,

121
00:06:48,175 --> 00:06:51,290
정식 수학적 표현은 아닙니다.

122
00:06:51,290 --> 00:06:54,290
자 그럼 마지막으로 이것을 어떻게 구현하는지 알아보겠습니다.

123
00:06:54,290 --> 00:06:57,760
기억하시겠지만, V0은 0으로 초기화하고 시작하는데요,

124
00:06:57,760 --> 00:06:59,570
그 다음에 첫째날의 V1을 계산합니다.

125
00:06:59,570 --> 00:07:01,605
그 다음에 V2 등등 말이죠.

126
00:07:01,605 --> 00:07:02,630
자 이제 알고리즘을 설명드리자면,

127
00:07:02,630 --> 00:07:05,990
여기 V0, V1, V2 등을

128
00:07:05,990 --> 00:07:09,480
각각의 변수로 적은게 유용했죠.

129
00:07:09,480 --> 00:07:11,835
실제로 이것을 구현하는 경우엔,

130
00:07:11,835 --> 00:07:15,774
이렇게 합니다.
V를 초기화한 값을 0이라 하고,

131
00:07:15,774 --> 00:07:17,555
첫번째 날은,

132
00:07:17,555 --> 00:07:21,105
V의 값을 베타 곱하기 V

133
00:07:21,105 --> 00:07:25,405
더하기 1 빼기 베타 곱하기 쎄타 1로 설정할 것입니다.

134
00:07:25,405 --> 00:07:27,780
그 다음날에는, V를 업데이트하여

135
00:07:27,780 --> 00:07:31,805
베타 곱하기 V

136
00:07:31,805 --> 00:07:33,820
더하기 1빼기 베타,

137
00:07:33,820 --> 00:07:35,985
곱하기 쎄타2를 할 것입니다. 이렇게 계속 이어지겠죠.

138
00:07:35,985 --> 00:07:41,282
어떤 것은 이런 V 아래첨자 쎄타로 표기할텐데요,

139
00:07:41,282 --> 00:07:47,115
쎄타인 파라미터에 대해 지수 가중 평균을 구하고 있다는 의미를 나타냅니다.

140
00:07:47,115 --> 00:07:49,690
이것을 다시 for loop 형식으로 말씀드리자면,

141
00:07:49,690 --> 00:07:52,095
V 쎄타를 0으로 설정하고,

142
00:07:52,095 --> 00:07:55,715
그 다음에, 반복적으로, 매일,

143
00:07:55,715 --> 00:08:02,314
다음 쎄타 T를 가지고,
그 다음 V 쎄타는

144
00:08:02,314 --> 00:08:05,140
베타 곱하기

145
00:08:05,140 --> 00:08:07,210
이전 V 쎄타 더하기

146
00:08:07,210 --> 00:08:08,750
1 빼기 베타

147
00:08:08,750 --> 00:08:12,045
곱하기 현재 값의 V 쎄타 값으로 갱신 합니다.

148
00:08:12,045 --> 00:08:15,440
그래서 지수 가중 평균을 구하는 것의 장점 중 하나는,

149
00:08:15,440 --> 00:08:17,140
아주 적은 양의 메모리가 이용된다는 것입니다.

150
00:08:17,140 --> 00:08:21,175
단 하나의 값만 메모리에 보관하면 됩니다.

151
00:08:21,175 --> 00:08:26,965
그리고, 가장 마지막 구한 값에 이 공식을 써서
계속 덮어 쓰면 됩니다.

152
00:08:26,965 --> 00:08:29,590
이런 장점, 효율성인데,

153
00:08:29,590 --> 00:08:33,340
기본적으로 한줄 코드면 되고,

154
00:08:33,340 --> 00:08:34,690
지수 가중 평균을 계산해서

155
00:08:34,690 --> 00:08:38,320
값 하나만 메모리에 저장하면 됩니다.

156
00:08:38,320 --> 00:08:40,195
물론 가장 좋은 방법은 아닙니다.

157
00:08:40,195 --> 00:08:42,805
가장 정확한 평균 계산 방식은 아닌데요,

158
00:08:42,805 --> 00:08:44,920
구간(윈도우)을 이동하여 계산하려면,

159
00:08:44,920 --> 00:08:47,770
명백하게 합을 구해야 하는데,
최근 10일간의 값이나

160
00:08:47,770 --> 00:08:51,550
지난 50일 간의 기온을 더하고
10이나 50으로 나누면

161
00:08:51,550 --> 00:08:53,320
대개 더 좋은 추정치를 얻게 됩니다.

162
00:08:53,320 --> 00:08:55,265
하지만 이것의 단점은

163
00:08:55,265 --> 00:08:57,550
이렇게 명백히 그 동안의 기온들을 보관하고

164
00:08:57,550 --> 00:09:00,190
지난 10일간의 수치를 더하려면 더 많은 메모리가 필요하고,

165
00:09:00,190 --> 00:09:03,990
구현도 더 복잡하고, 연산 부담도 커 집니다.

166
00:09:03,990 --> 00:09:07,885
예제들을 다음 몇개의 비디오에서 보겠습니다만,

167
00:09:07,885 --> 00:09:12,130
많은 양의 변수들의 평균값 계산이 필요합니다.

168
00:09:12,130 --> 00:09:15,625
이 지수 가중 평균은 매우 효율적인데,
연산과

169
00:09:15,625 --> 00:09:19,840
메모리 효율면에서 좋고,
머신러닝에서 많이 쓰는 이유입니다.

170
00:09:19,840 --> 00:09:24,280
단지 한줄 코드면 된다는 점 역시,
또 하나의 장점이라고 말할 필요도 없죠.

171
00:09:24,280 --> 00:09:28,570
자 이제 여러분은 지수 가중 평균을 어떻게 구현하는지 배웠습니다.

172
00:09:28,570 --> 00:09:30,160
이제 한가지 여러분이 아시면 좋을만한 것이 있는데요.

173
00:09:30,160 --> 00:09:32,965
바로 bias correction입니다.

174
00:09:32,965 --> 00:09:35,365
이것은 다음 비디오를 통해서 볼텐데요, 그 다음에는

175
00:09:35,365 --> 00:09:37,420
이것들을 사용해서

176
00:09:37,420 --> 00:09:41,450
간단한 기울기 강하 방법보다 더 나은 최적화 알고리즘을 만들 수 있을 것입니다.