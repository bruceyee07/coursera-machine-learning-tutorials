1
00:00:00,000 --> 00:00:03,900
Son videoda, üssel ağırlıklı ortalamalar hakkında konuştuk.

2
00:00:03,900 --> 00:00:06,345
Bu, anahtar bir bileşen olarak ortaya çıkacak.

3
00:00:06,345 --> 00:00:09,910
sinir ağlarınızı eğitmek için kullandığınız birkaç optimizasyon algoritması.

4
00:00:09,910 --> 00:00:12,330
Yani, bu videoda, biraz daha derine inmek istiyorum

5
00:00:12,330 --> 00:00:15,930
Bu algoritmanın gerçekten ne yaptığına dair sezgiler.

6
00:00:15,930 --> 00:00:21,305
Bu, katlanarak ağırlıklı ortalamaları uygulamak için temel bir denklem olduğunu hatırlayın.

7
00:00:21,305 --> 00:00:24,755
Ve, eğer beta 0,9'a eşitse, kırmızı çizgiye sahipsin.

8
00:00:24,755 --> 00:00:26,390
Bire daha yakın olsaydı,

9
00:00:26,390 --> 00:00:29,700
Eğer 0.98 olsaydı, yeşil çizgiyi alırdın.

10
00:00:29,700 --> 00:00:31,200
Ve daha küçük olursa,

11
00:00:31,200 --> 00:00:34,470
ve bunu sarı olarak çizgeye çizince

12
00:00:34,470 --> 00:00:37,110
Şimdi anlamak için biraz daha fazla bakalım

13
00:00:37,110 --> 00:00:40,220
Bu, günlük sıcaklığın ortalamalarını hesaplamaktır.

14
00:00:40,220 --> 00:00:41,935
İşte bu denklem tekrar,

15
00:00:41,935 --> 00:00:48,330
ve beta'yı 0,9 olarak ayarlayalım ve bunun denk olduğu birkaç denklem yazalım.

16
00:00:48,330 --> 00:00:50,970
Yani, uygularken, sizde T var

17
00:00:50,970 --> 00:00:54,105
sıfırdan bire, ikiye üçe,

18
00:00:54,105 --> 00:00:56,760
T. değerlerini arttırmak

19
00:00:56,760 --> 00:01:00,740
Bunu T değerini azaltarak yazdım. Ve bu devam ediyor.

20
00:01:00,740 --> 00:01:03,055
O zaman buradaki ilk denklemi alalım.

21
00:01:03,055 --> 00:01:06,750
ve V100'ün gerçekte ne olduğunu anlayın.

22
00:01:06,750 --> 00:01:09,795
Yani V100 olacak,

23
00:01:09,795 --> 00:01:11,850
Bu iki terimi tersine çevireyim

24
00:01:11,850 --> 00:01:15,195
o 0.1 kat theta 100 olacak,

25
00:01:15,195 --> 00:01:19,620
Bir önceki günde değeri ne olursa olsun 0,9 kat.

26
00:01:19,620 --> 00:01:21,055
Şimdi, ama V99 nedir?

27
00:01:21,055 --> 00:01:25,075
Eh, biz sadece bu denklemden bağlayacağız.

28
00:01:25,075 --> 00:01:30,390
Yani bu sadece 0.1 kat 99 te olacak.

29
00:01:30,390 --> 00:01:33,215
ve yine bu iki terimi tersine çevirdim

30
00:01:33,215 --> 00:01:38,030
artı 0,9 kat V98.

31
00:01:38,030 --> 00:01:39,485
Ama sonra V98 nedir?

32
00:01:39,485 --> 00:01:41,765
Eh, sen sadece buradan al.

33
00:01:41,765 --> 00:01:44,220
Yani buraya sadece takılabilirsin.

34
00:01:44,220 --> 00:01:47,875
0,1 kat 98.

35
00:01:47,875 --> 00:01:52,560
artı 0.9 kat V97 vb.

36
00:01:52,560 --> 00:01:54,405
Ve eğer tüm bu terimleri çoğaltırsanız,

37
00:01:54,405 --> 00:02:00,060
V100'ün 0.1 kat theta 100 artı olduğunu gösterebilirsiniz.

38
00:02:00,060 --> 00:02:02,552
Şimdi, 99'un katsayısına bakalım.

39
00:02:02,552 --> 00:02:09,030
99'UN 0,1 KATI, 99 KATI OLACAK.

40
00:02:09,030 --> 00:02:12,160
Şimdi, 98 te katsayıya bakalım.

41
00:02:12,160 --> 00:02:16,880
0,1, 0,9, 0,9.

42
00:02:16,880 --> 00:02:18,565
Yani Cebir'i genişletirsek,

43
00:02:18,565 --> 00:02:26,295
Bu 0,1 kez 0,1 kare olur, 98 kez.

44
00:02:26,295 --> 00:02:28,260
Ve eğer bunu genişletmeye devam ederseniz,

45
00:02:28,260 --> 00:02:32,315
Bunun 0,1 kat 0,9 küp olduğunu fark ettiniz.

46
00:02:32,315 --> 00:02:34,920
theta 97 artı 0.1,

47
00:02:34,920 --> 00:02:37,440
0,9'dan dördüncüye,

48
00:02:37,440 --> 00:02:41,800
theta 96, artı nokta nokta nokta.

49
00:02:41,800 --> 00:02:47,010
Yani bu gerçekten özetlemenin bir yoludur ve bu 100 theta'nın ağırlıklı ortalamasıdır.

50
00:02:47,010 --> 00:02:49,680
şu anki günlerin sıcaklığı ve aradığımız şey

51
00:02:49,680 --> 00:02:53,730
Yılın 100. gününde hesapladığınız bir V100 perspektifi.

52
00:02:53,730 --> 00:02:56,870
Ama bunlar theta 100'ün toplamı.

53
00:02:56,870 --> 00:02:58,865
Theta 99, Theta 98,

54
00:02:58,865 --> 00:03:02,175
theta 97, theta 96, vb.

55
00:03:02,175 --> 00:03:05,250
Yani resimlerde çizmenin bir yolu, eğer

56
00:03:05,250 --> 00:03:08,880
Diyelim ki, birkaç gün sıcaklığa sahibiz.

57
00:03:08,880 --> 00:03:14,610
Yani bu theta ve bu da T.. Yani 100 te toplam değer olacak.

58
00:03:14,610 --> 00:03:17,095
o zaman theta 99, toplam değer olacaktır.

59
00:03:17,095 --> 00:03:19,360
Theta 98, yani bunlar

60
00:03:19,360 --> 00:03:21,255
yani bu 100'e eşittir,

61
00:03:21,255 --> 00:03:23,070
99, 98 vb.

62
00:03:23,070 --> 00:03:26,360
Sıcaklık günlerinin toplam sayısının oranı.

63
00:03:26,360 --> 00:03:31,015
Ve sahip olduğumuz şey, üstel olarak çürüyen bir işlevdir.

64
00:03:31,015 --> 00:03:37,140
Yani 0,1'den 0,9'a kadar

65
00:03:37,140 --> 00:03:41,630
0,1 ila 0,9 kare çarpı

66
00:03:41,630 --> 00:03:44,555
0,1, vb.

67
00:03:44,555 --> 00:03:47,150
Yani bu üssel olarak çürüyen işlevi var.

68
00:03:47,150 --> 00:03:50,600
Ve V100'ü hesapladığınız yol,

69
00:03:50,600 --> 00:03:55,760
Bu iki fonksiyon arasında elementi ele geçirip özetliyor musunuz?

70
00:03:55,760 --> 00:03:56,985
Yani bu değeri alırsınız,

71
00:03:56,985 --> 00:03:59,165
theta 100 kere 0.1,

72
00:03:59,165 --> 00:04:05,770
theta bu değerin 99 katı 0,1 kat, 0,9 kat,

73
00:04:05,770 --> 00:04:07,995
Bu ikinci dönem ve böyle devam ediyor.

74
00:04:07,995 --> 00:04:10,170
Yani gerçekten günlük sıcaklığı alıyor,

75
00:04:10,170 --> 00:04:14,610
Bu üssel olarak çürüyen işlevle çarpın ve sonra toplayın.

76
00:04:14,610 --> 00:04:17,390
Ve bu senin V100'ün olur.

77
00:04:17,390 --> 00:04:19,165
Şekline dönüştü,

78
00:04:19,165 --> 00:04:21,090
daha sonra detaylara kadar.

79
00:04:21,090 --> 00:04:22,655
Ama bütün bu katsayılar,

80
00:04:22,655 --> 00:04:27,335
birine ekleyin veya birine çok yakın ekleyin,

81
00:04:27,335 --> 00:04:31,670
Bir sonraki videoda konuşacağımız ön yargı düzeltme adı verilen bir detay kadar.

82
00:04:31,670 --> 00:04:35,225
Ama bunun nedeni, bu gerçekten katlanarak ağırlıklı bir ortalama.

83
00:04:35,225 --> 00:04:37,595
Sonunda merak edebilirsin,

84
00:04:37,595 --> 00:04:41,210
Bu, ortalama kaç gündür.

85
00:04:41,210 --> 00:04:46,400
Şey, o 0,9'un gücü 10'a çıkıyor.

86
00:04:46,400 --> 00:04:52,085
yaklaşık 0.35 ve bu E üzerinde bir tane olduğu ortaya çıkıyor,

87
00:04:52,085 --> 00:04:54,410
doğal algoritmaların temellerinden biri.

88
00:04:54,410 --> 00:04:59,030
Ve daha genel olarak, bir eksi epsilon varsa,

89
00:04:59,030 --> 00:05:00,200
bu örnekte,

90
00:05:00,200 --> 00:05:01,880
epsilon 0.1 olurdu,

91
00:05:01,880 --> 00:05:07,250
Bu 0,9 ise, epsilon üzerinde bir eksi epsilon.

92
00:05:07,250 --> 00:05:08,720
Bu E üzerinde bir tane,

93
00:05:08,720 --> 00:05:12,065
Bu yaklaşık 0,34, 0,35.

94
00:05:12,065 --> 00:05:14,735
Ve başka bir deyişle,

95
00:05:14,735 --> 00:05:19,610
Bunun yüksekliği için yaklaşık 10 gün sürer

96
00:05:19,610 --> 00:05:24,680
zirveden E'nin 1 / 3'üne kadar çürüyor.

97
00:05:24,680 --> 00:05:25,915
Yani bunun sebebi

98
00:05:25,915 --> 00:05:31,325
beta 0,9'a eşit olduğu zaman,

99
00:05:31,325 --> 00:05:35,090
bu bilgisayar gibi çalışıyorsun

100
00:05:35,090 --> 00:05:40,355
Son 10 gün sıcaklığına odaklanan katlanarak ağırlıklı bir ortalama.

101
00:05:40,355 --> 00:05:43,940
Çünkü 10 gün sonra kilo azalır

102
00:05:43,940 --> 00:05:48,380
Mevcut günün ağırlığının üçte birinden azına.

103
00:05:48,380 --> 00:05:53,300
Oysa, aksine, beta 0.98'e eşitse,

104
00:05:53,300 --> 00:05:59,320
Öyleyse, peki, bunun gerçekten küçük olması için 0.98'in gücüne ne ihtiyacın var?

105
00:05:59,320 --> 00:06:04,310
Bunun 0.98'inin gücünün yaklaşık 50 olacağı ortaya çıkıyor.

106
00:06:04,310 --> 00:06:06,710
E üzerinde bir eşittir. Yani güzel olmanın yolu

107
00:06:06,710 --> 00:06:09,380
İlk 50 gün boyunca büyük bir E'den büyük olacak,

108
00:06:09,380 --> 00:06:11,840
ve sonra bunun üzerinde oldukça hızlı bir şekilde çürümeye gidecekler.

109
00:06:11,840 --> 00:06:14,780
Sezgisel olarak, bu zor ve hızlı şey,

110
00:06:14,780 --> 00:06:18,860
Bunu yaklaşık 50 gün boyunca ortalama olarak düşünebilirsiniz.

111
00:06:18,860 --> 00:06:20,335
Çünkü, bu örnekte,

112
00:06:20,335 --> 00:06:22,290
gösterimi solda kullanmak için

113
00:06:22,290 --> 00:06:25,530
epsilon 0,02'ye eşitse,

114
00:06:25,530 --> 00:06:27,750
epsilon üzerinde bir kişi 50'dir.

115
00:06:27,750 --> 00:06:30,080
Ve bu, bu arada, formülü nasıl aldık?

116
00:06:30,080 --> 00:06:35,150
bir eksi beta veya daha fazla gün boyunca bir ortalamanın üzerinde olduğunu tahmin ediyoruz.

117
00:06:35,150 --> 00:06:39,915
Tam burada, epsilon 1 eksi beta dizisinin yerini alacak.

118
00:06:39,915 --> 00:06:42,350
Bu size, neredeyse sabit bir şekilde nasıl olduğunu söyler.

119
00:06:42,350 --> 00:06:45,148
Birçok gün sıcaklık, bunu ortalama olarak düşünmelisiniz.

120
00:06:45,148 --> 00:06:48,175
Ama bu, bunun hakkında düşünmek için sadece bir kuraldır.

121
00:06:48,175 --> 00:06:51,290
ve resmi bir matematiksel ifade değildir.

122
00:06:51,290 --> 00:06:54,290
Son olarak, bunu nasıl uyguladığınız hakkında konuşalım.

123
00:06:54,290 --> 00:06:57,760
Sıfır olarak başlatılan V0 üzerinden başlayacağımızı hatırlayın,

124
00:06:57,760 --> 00:06:59,570
daha sonra ilk günü V'yi hesaplayın,

125
00:06:59,570 --> 00:07:01,605
V2, vb.

126
00:07:01,605 --> 00:07:02,630
Şimdi, algoritmayı açıklamak,

127
00:07:02,630 --> 00:07:05,990
V0’ı yazmak faydalı oldu

128
00:07:05,990 --> 00:07:09,480
V1, V2, vb. Değişken değişkenler.

129
00:07:09,480 --> 00:07:11,835
Ama bunu pratikte uyguluyorsanız,

130
00:07:11,835 --> 00:07:15,774
Yaptığınız şey bu: V'yi sıfırlamak için V'yi başlatırsanız,

131
00:07:15,774 --> 00:07:17,555
ve sonra birincisinde,

132
00:07:17,555 --> 00:07:21,105
V eşittir beta'yı ayarlarsınız

133
00:07:21,105 --> 00:07:25,405
V, artı bir eksi beta, teta biri.

134
00:07:25,405 --> 00:07:27,780
Ve sonra ertesi gün, güncelleme V eklediniz

135
00:07:27,780 --> 00:07:31,805
beta V çağrılacak

136
00:07:31,805 --> 00:07:33,820
artı 1 eksi beta,

137
00:07:33,820 --> 00:07:35,985
theta 2, vb.

138
00:07:35,985 --> 00:07:41,282
Ve bazılarını göstermek için not etme V subscript theta kullanır

139
00:07:41,282 --> 00:07:47,115
V, bu katsayıya ait theta parametresinin üssel olarak ağırlıklı ortalamasını hesaplamaktadır.

140
00:07:47,115 --> 00:07:49,690
Yani bunu tekrar söylemek ama yeni bir format için

141
00:07:49,690 --> 00:07:52,095
V theta'yı sıfır olarak ayarladığınızda

142
00:07:52,095 --> 00:07:55,715
ve sonra, tekrar tekrar, her gün bir tane var,

143
00:07:55,715 --> 00:08:02,314
Sonraki T a, sonra da V’e

144
00:08:02,314 --> 00:08:05,140
theta beta olarak güncellendi

145
00:08:05,140 --> 00:08:07,210
V theta'nın eski değerini

146
00:08:07,210 --> 00:08:08,750
artı bir eksi beta,

147
00:08:08,750 --> 00:08:12,045
V theta'nın geçerli değeri.

148
00:08:12,045 --> 00:08:15,440
Bu üssel olarak ağırlıklı ortalama formülün avantajlarından biri,

149
00:08:15,440 --> 00:08:17,140
bu çok az hafıza gerektiriyor mu.

150
00:08:17,140 --> 00:08:21,175
Bilgisayar hafızasında sadece bir satır numarası tutmanız yeterli.

151
00:08:21,175 --> 00:08:26,965
ve sahip olduğunuz en son değerlere dayanarak bu formülün üzerine yazmaya devam edersiniz.

152
00:08:26,965 --> 00:08:29,590
Ve gerçekten bu sebep, verimlilik,

153
00:08:29,590 --> 00:08:33,340
sadece bir satır kod temel alır ve sadece

154
00:08:33,340 --> 00:08:34,690
depolama ve bellek

155
00:08:34,690 --> 00:08:38,320
Bu üssel ağırlıklı ortalama hesaplamak için tek bir satır numarası.

156
00:08:38,320 --> 00:08:40,195
Bu gerçekten en iyi yol değil,

157
00:08:40,195 --> 00:08:42,805
Bir ortalama hesaplamak için en doğru yol değil.

158
00:08:42,805 --> 00:08:44,920
Hareket eden bir pencereyi hesaplayacak olsaydınız,

159
00:08:44,920 --> 00:08:47,770
Son 10 gün içinde açıkça topladığınız yer,

160
00:08:47,770 --> 00:08:51,550
son 50 gün sıcaklık ve sadece 10 ile bölmek veya 50 ile bölmek,

161
00:08:51,550 --> 00:08:53,320
Bu genellikle size daha iyi bir tahmin verir.

162
00:08:53,320 --> 00:08:55,265
Ama bunun dezavantajı,

163
00:08:55,265 --> 00:08:57,550
tüm sıcaklıkları açık bir şekilde tutmak ve

164
00:08:57,550 --> 00:09:00,190
Son 10 günün toplamı daha fazla hafıza gerektiriyor.

165
00:09:00,190 --> 00:09:03,990
ve uygulamak için sadece daha karmaşık ve hesaplama daha pahalı.

166
00:09:03,990 --> 00:09:07,885
Bu yüzden, birkaç video için birkaç örnek göreceğiz.

167
00:09:07,885 --> 00:09:12,130
Çok sayıda değişkenin ortalamalarını hesaplamanız gereken yer.

168
00:09:12,130 --> 00:09:15,625
Bu, hem hesaplamadan hem de bunu yapmak için çok verimli bir yoldur

169
00:09:15,625 --> 00:09:19,840
ve hafıza verimliliği açısından çok fazla makine öğreniminde kullanılmasının nedeni budur.

170
00:09:19,840 --> 00:09:24,280
Sadece bir satır kodun söz konusu olduğu söylenemez, belki başka bir avantajdır.

171
00:09:24,280 --> 00:09:28,570
Yani, şimdi, katlanarak ağırlıklı ortalamaları nasıl uygulayacağınızı biliyorsunuz.

172
00:09:28,570 --> 00:09:30,160
Bilmen için bir daha teknik detay var.

173
00:09:30,160 --> 00:09:32,965
denilen bias(unıt ek girdi) düzeltme hakkında.

174
00:09:32,965 --> 00:09:35,365
Bir sonraki videoda görelim, ondan sonra

175
00:09:35,365 --> 00:09:37,420
Bunu yapmak için kullanacaksın

176
00:09:37,420 --> 00:09:41,450
düz ileriye doğru daha iyi bir optimizasyon algoritması oluşturmak