你设置训练集开发集的方法 或开发集和测试集, 将会对你或者你的团队在
构建机器学习应用的进展 中产生巨大的影响。 同样的团队,甚至是大公司的团队, 设置数据的方式确实会减缓 而不是加快团队的进展 让我们来看看该如何去处理 这些数据从而最大化你的团队的效率 在本视频中,我想重点介绍
如何设置您的开发集和测试集。 dev set 也被称为development set 或者有些时候被称为交叉验证集 而且,机器学习的工作流程是
你尝试了很多想法, 在训练集上训练不同的模型, 然后使用开发集来
评估不同的想法,并选择一个。 并且，保持创新，
提高模型在开发集上的表现性能 直到最后你有一个很高兴的结果
然后你在测试集上评估它们 现在,让我们举例说明, 你正在建立一个猫的分类器 然后你在这些区域运行它们：美国 英国，其他欧洲货架，南美，印度 中国，其他亚洲国家以及澳大利亚 那么,如何设置您的开发集和测试集？ 你可以做的一个方法是，挑选四个这些地区 我要使用这四个国家,它可能是随机选择的地区。 我们让这四个地区的数据作为开发集 另外四个地区的数据， 也可能是随机选择的 作为测试集 事实证明,这是一个非常糟糕的想法
因为在这个例子中 你的开发集和测试集来自不同的分布。 相反,我推荐你找到一种方法,使你的开发和 测试集来自相同的分布。这里我的意思是 记住一个重要的地方 设定开发集时和 你的评估方法 就像放置一个目标然后 告诉你的团队你们的目标是什么 因为你一旦确定了开发集和评估方法 团队就可以很快尝试各种不同的方法 并进行实验 很快利用开发集 和评估方法来评估选择器并选取最好的一个 所以机器学习团队通常很擅长多线执行 通过各种尝试越来越接近目标 在这种评估方法和开发集上做得更好 我们在设置左侧的开发集和测试集 要注意的问题是 你的团队可能用了数个月靠拢开发集 当你最后在测试集测试时 这四个下面的国家或地区的数据 可能和你开发集中的数据很不同 所以你可能很惊讶的发现 你们辛辛苦苦在开发集上做的努力 在测试集上表现的并不好 所以让测试集和开发集来自不同的分布 就像让你的团队用数个月的时间瞄准 但是数个月后 你说 等等我要测试一下 我要换个目标 团队可能会说 为什么你让我们盯着这个目标 现在你却要打别的地方 为了避免这个 我推荐你们 把所有数据随机打乱然后分为开发和测试集 这样开发和测试集都拥有了八个地区的数据 这样开发和测试集就来自相同的分布了 分布在你拥有的所有数据中 这是另一个例子 改编自真实的故事 我知道一个机器学习团队 花费了几个月优化一个开发集 数据包括中产地区贷款审批信息 所以这个机器学习的任务是 对某一贷款申请的输入X 你能否预测他能否拿到贷款 以及为什么 这可以帮你决定是否要同意贷款 开发集来自 中产地区的贷款申请 Zip码是美国的邮政编码 做了几个月的努力后 团队突然决定 在低收入地区测试这个模型 当然 这组数据的分布 中产地区和低收入地区就很不一样了 这个他们花费了很大力气的分类器 在低收入地区的表现就很差 而且这个团队浪费了大约三个月的时间 他们不得不返回去把很多工作重新来一遍 为什么会这样呢 这个团队为了一个目标忙碌了三个月 三个月过去后 团队的老大问 另一个目标大家完成的怎么样了 完全是另一个不同的目标 对于团队来说这是很让人恼火的 所以，我推荐的设置
开发集和测试集的方法是 选择的开发集和测试集能够反映出 将来预计得到的数据，和你认为重要的数据 特别地 这里的开发和测试集 应该来自相同的分布 所以无论未来你需要预测什么样的数据 一旦你 试着获取这样的数据 无论这个数据是什么 把它同时放进你的开发和测试集中 因为这样你就瞄准了 实际上你想要瞄准的目标 团队也可以有效的开发 可以在同一目标上表现良好 我们还未讨论如何设置训练集 下一讲我们就讨论 这集我们学到的重点是 设置开发集 和检验方法 直接决定了你的目标 将开发和测试集取在同一分布上 你才真正瞄准了你和你团队的目标 你选择训练集的方法 会影响你击中目标的精度 但是我们可以后面再讨论 一些机器学习团队贯彻落实本视频的内容 可以节省数个月的工作 我希望这些指导意见也可以帮到你 后面我们发现开发和测试集的大小 如何选择他们的大小 也会影响学习效果 我们将在下一个视频中讨论这一点