1
00:00:00,000 --> 00:00:02,910
将所有你关心的方方面面组合成用一个用行索引

2
00:00:02,910 --> 00:00:06,265
就能判别的单一指标并不总是一件容易的事

3
00:00:06,265 --> 00:00:09,150
因此 在某些情况下 建立满足指标(satisficing matrics)和优化指标(optimizing matrics)

4
00:00:09,150 --> 00:00:12,390
是很有用的

5
00:00:12,390 --> 00:00:13,950
我来解释一下

6
00:00:13,950 --> 00:00:16,410
比如 你决定关注

7
00:00:16,410 --> 00:00:20,694
猫分类器的分类准确率(accuracy)

8
00:00:20,694 --> 00:00:25,470
它可以是F1分数(F1 score)或者别的什么精确度度量

9
00:00:25,470 --> 00:00:29,610
但是假设 除了准确率之外你还关心运行时间

10
00:00:29,610 --> 00:00:35,050
也就是对一个图像分类需要多少时间<br />这个表中分类器A需要80毫秒(millisecond)

11
00:00:35,050 --> 00:00:36,690
B需要95毫秒

12
00:00:36,690 --> 00:00:39,325
C需要1,500毫秒

13
00:00:39,325 --> 00:00:42,150
也就是1.5秒才能甄别一个图像

14
00:00:42,150 --> 00:00:45,000
你当然可以将准确率和运行时间组合成一个

15
00:00:45,000 --> 00:00:48,075
整体评价指标(overall evaluation metric)

16
00:00:48,075 --> 00:00:57,898
比如说整体代价是 准确率-0.5*运行时间

17
00:00:57,898 --> 00:01:01,460
但是将准确率和运行时间用这样的公式整合

18
00:01:01,460 --> 00:01:05,265
看起来有些刻意

19
00:01:05,265 --> 00:01:08,805
这就像二者的线性加权和(linear weighted sum)

20
00:01:08,805 --> 00:01:11,090
所以你还可以这样做:

21
00:01:11,090 --> 00:01:13,841
你可能想要选择一个分类器

22
00:01:13,841 --> 00:01:26,470
它在确保运行时间的前提下提供最大准确率

23
00:01:26,470 --> 00:01:28,584
比如说它甄别图像所花费的时间

24
00:01:28,584 --> 00:01:36,325
必须<=100毫秒

25
00:01:36,325 --> 00:01:40,170
在这个例子中我们说准确率是优化指标

26
00:01:40,170 --> 00:01:44,460
因为你想要最大化准确率

27
00:01:44,460 --> 00:01:48,195
你希望准确率尽可能的高

28
00:01:48,195 --> 00:01:53,845
但是运行时间是我们我们所说的满足指标

29
00:01:53,845 --> 00:01:55,580
意味着它必须足够好

30
00:01:55,580 --> 00:02:00,285
必须<100毫秒 一旦超出即不予考虑

31
00:02:00,285 --> 00:02:04,280
至少不大考虑

32
00:02:04,280 --> 00:02:07,340
所以用这种方式对准确率和运行时间<br />进行权衡或者说通盘考虑

33
00:02:07,340 --> 00:02:11,705
相当合理

34
00:02:11,705 --> 00:02:16,015
有可能的情况是 只要运行时间<100毫秒

35
00:02:16,015 --> 00:02:18,465
你的用户并不在意

36
00:02:18,465 --> 00:02:21,855
它是100毫秒还是50毫秒或更快

37
00:02:21,855 --> 00:02:26,380
通过定义优化指标和满足指标

38
00:02:26,380 --> 00:02:30,475
你就有了挑选"最优"分类器的明确方向

39
00:02:30,475 --> 00:02:34,450
这个例子中中标的是B<br />因为在所有运行时间

40
00:02:34,450 --> 00:02:39,865
优于100毫秒的分类器中它的准确率最高

41
00:02:39,865 --> 00:02:45,220
更一般的说 如果你有N个关心的指标

42
00:02:45,220 --> 00:02:50,830
有时候选择其中的一个加以优化是个合理的策略

43
00:02:50,830 --> 00:02:54,005
你想要它的表现尽可能的好

44
00:02:54,005 --> 00:02:57,515
那么剩下的N-1就是满足指标

45
00:02:57,515 --> 00:02:59,380
意味着他们只要达到某种阈值(threshold)就可以了

46
00:02:59,380 --> 00:03:02,730
比如说运行时间比100毫秒快之类的

47
00:03:02,730 --> 00:03:04,405
一旦他们达到了阈值

48
00:03:04,405 --> 00:03:06,520
你就不再费心优化他们了

49
00:03:06,520 --> 00:03:09,455
但是必须保证他们达到了阈值

50
00:03:09,455 --> 00:03:11,350
来看另一个例子下面再举另一个例子

51
00:03:11,350 --> 00:03:15,280
假设你在建一个检测唤醒词(wake words)的系统

52
00:03:15,280 --> 00:03:19,030
也叫做触发词(trigger words)

53
00:03:19,030 --> 00:03:22,900
它指的是一些声控设备

54
00:03:22,900 --> 00:03:25,780
如Amazon Echo 你向它说Alexa来唤醒它

55
00:03:25,780 --> 00:03:29,020
或者你用OK Google唤醒Google设备

56
00:03:29,020 --> 00:03:35,095
或者用Hey Siri唤醒Apple设备

57
00:03:35,095 --> 00:03:42,300
或者 ”你好百度“ 用于百度设备

58
00:03:42,300 --> 00:03:46,390
或者 你想阅览中文，比如“你好百度”

59
00:03:46,390 --> 00:03:51,560
那么这就是你用于告诉某个声控设备

60
00:03:51,560 --> 00:03:54,350
你想要表达的意思

61
00:03:54,350 --> 00:03:56,990
叫它开工听你讲话时所用的词句

62
00:03:56,990 --> 00:04:02,090
以及其它关于“你好百度”的中文表达方式

63
00:04:02,090 --> 00:04:07,935
所以你可能会关心这些触发词监测系统的准确度

64
00:04:07,935 --> 00:04:10,325
也就是当有人说了某个触发词

65
00:04:10,325 --> 00:04:13,525
实际上会唤醒你的设备的可能性有多大

66
00:04:13,525 --> 00:04:16,970
你有可能也关心假阳性(false positive)的次数

67
00:04:16,970 --> 00:04:19,891
也就是没人说这个触发词

68
00:04:19,891 --> 00:04:23,294
设备却被随机唤醒的几率是多大

69
00:04:23,294 --> 00:04:27,770
这种情况下 组合这两个评估指标的

70
00:04:27,770 --> 00:04:33,275
一个合理的做法可能是最大化准确度

71
00:04:33,275 --> 00:04:35,165
也就是当有人说了这些触发词的时候

72
00:04:35,165 --> 00:04:37,565
最大化设备会被唤醒的几率

73
00:04:37,565 --> 00:04:39,215
并在此前提下

74
00:04:39,215 --> 00:04:48,815
确保24小时内只有一次不是被触发词唤醒

75
00:04:48,815 --> 00:04:51,070
对吧

76
00:04:51,070 --> 00:04:53,760
即平均来说 你的设备在一天内只有一次

77
00:04:53,760 --> 00:04:57,270
在没有人和它说话的时候被随机唤醒

78
00:04:57,270 --> 00:05:00,900
这个例子中准确率是优化指标

79
00:05:00,900 --> 00:05:05,505
24小时因为其他原因被随机唤醒的次数

80
00:05:05,505 --> 00:05:09,870
是满足指标

81
00:05:09,870 --> 00:05:14,490
你必须确保24小时内只有最多一次被随机唤醒

82
00:05:14,490 --> 00:05:17,100
总而言之 如果你同时关心多项指标

83
00:05:17,100 --> 00:05:19,920
你可以将其中的一样设为优化指标

84
00:05:19,920 --> 00:05:22,530
使其表现尽可能的好

85
00:05:22,530 --> 00:05:25,475
将另外的一项或多项设为满足指标<br />确保其表现满足要求

86
00:05:25,475 --> 00:05:29,430
大多数情况下他们都会优于最低标准

87
00:05:29,430 --> 00:05:32,310
这样一来你就有了一个几乎自动的

88
00:05:32,310 --> 00:05:35,864
快速评价模型和选择"最佳"模型的方法

89
00:05:35,864 --> 00:05:39,000
现在这些评价指标必须在训练集/开发集/测试集上评估计算

90
00:05:39,000 --> 00:05:44,095
现在这些评价指标必须在训练集/开发集/测试集上评估计算

91
00:05:44,095 --> 00:05:46,935
那么另一件你需要做的事情就是建立训练集/开发集/测试集

92
00:05:46,935 --> 00:05:50,100
那么另一件你需要做的事情就是建立训练集/开发集/测试集

93
00:05:50,100 --> 00:05:52,800
下一节我将与你分享一些如何建立

94
00:05:52,800 --> 00:05:55,800
训练集/开发集/测试集的指导原则

95
00:05:55,800 --> 00:05:57,470
下一节再见