1
00:00:00,000 --> 00:00:01,370
在上一部影片

2
00:00:01,370 --> 00:00:05,445
你看到了開發集和測試集必須來自相同的分布

3
00:00:05,445 --> 00:00:07,370
但，該取多少資料呢？

4
00:00:07,370 --> 00:00:08,780
關於開發/測試集

5
00:00:08,780 --> 00:00:11,955
設置的準則在深度學習的年代已有所變

6
00:00:11,955 --> 00:00:14,645
讓我們看看實務上最好的作法

7
00:00:14,645 --> 00:00:17,870
你可能聽過機器學習的某個法則：

8
00:00:17,870 --> 00:00:20,489
把你所有的資料

9
00:00:20,489 --> 00:00:26,495
分成 70%, 30% 變成訓練和測試集

10
00:00:26,495 --> 00:00:30,800
或者把訓練/開發/測試集設成

11
00:00:30,800 --> 00:00:42,705
你可能會用 60% 做訓練、20% 開發、20% 測試

12
00:00:42,705 --> 00:00:47,200
在機器學習的早期

13
00:00:47,200 --> 00:00:50,155
這是相當合理的

14
00:00:50,155 --> 00:00:54,550
特別是當時資料數量還很少

15
00:00:54,550 --> 00:00:57,085
如果你總共有一百筆資料

16
00:00:57,085 --> 00:01:03,555
這種 70/30 或 60/20/20 準則很合理

17
00:01:03,555 --> 00:01:05,485
如果你有一千筆

18
00:01:05,485 --> 00:01:09,070
或者有一萬筆資料

19
00:01:09,070 --> 00:01:13,070
這種慣例也不會太奇怪

20
00:01:13,070 --> 00:01:16,255
但在現今的年代

21
00:01:16,255 --> 00:01:20,310
我們已經習慣用更多的資料

22
00:01:20,310 --> 00:01:26,430
假設你有一百萬筆的資料

23
00:01:26,430 --> 00:01:29,490
這樣分資料會更合理：

24
00:01:29,490 --> 00:01:33,810
你把 98% 當成訓練集

25
00:01:33,810 --> 00:01:40,437
1% 來開發，1% 來測試

26
00:01:40,437 --> 00:01:44,590
我用 D 和 T 代表開發集 (dev) 和測試集 (test)

27
00:01:44,590 --> 00:01:46,710
因為如果有一百萬筆資料

28
00:01:46,710 --> 00:01:48,285
那百分之一

29
00:01:48,285 --> 00:01:54,800
就是一萬筆資料，這用來開發/測試已經足夠了

30
00:01:54,800 --> 00:02:00,255
因此，在現今深度學習的年代，資料時常超大

31
00:02:00,255 --> 00:02:04,020
用其中遠小於 20 或 30% 的資料

32
00:02:04,020 --> 00:02:07,785
來當作開發或測試，這也很合理

33
00:02:07,785 --> 00:02:12,690
因為深度學習演算法需要很大量的資料，我發現

34
00:02:12,690 --> 00:02:16,020
那些需要大量資料的問題

35
00:02:16,020 --> 00:02:20,430
其資料有很大一部份都用在訓練上。

36
00:02:20,430 --> 00:02:24,447
那麼，測試集呢？

37
00:02:24,447 --> 00:02:28,930
還記得測試集的目的在於

38
00:02:28,930 --> 00:02:30,865
當你的系統開發完畢

39
00:02:30,865 --> 00:02:34,360
測試集可以評量最終的系統有多好

40
00:02:34,360 --> 00:02:37,690
所以準則是，讓你的測試集夠大到足以

41
00:02:37,690 --> 00:02:41,150
評估出讓人信服的成效

42
00:02:41,150 --> 00:02:43,690
因此，除非你必須知道

43
00:02:43,690 --> 00:02:48,090
非常準確的系統成效

44
00:02:48,090 --> 00:02:54,059
否則你大概不需要百萬等級的測試集

45
00:02:54,059 --> 00:02:57,640
或許對於你的應用程式，一萬筆資料

46
00:02:57,640 --> 00:03:00,545
就能讓你有信心知道成效

47
00:03:00,545 --> 00:03:03,725
抑或是十萬筆之類的，只要夠用就好

48
00:03:03,725 --> 00:03:05,260
這可能會比

49
00:03:05,260 --> 00:03:07,340
你整個資料的 30% 還少

50
00:03:07,340 --> 00:03:08,440
看你有多少資料。

51
00:03:08,440 --> 00:03:13,250
在某些應用

52
00:03:13,250 --> 00:03:18,320
你可能不需要對最終系統的成效有很高的信心

53
00:03:18,320 --> 00:03:23,055
也許你只需要訓練和開發集

54
00:03:23,055 --> 00:03:29,230
我覺得沒有測試集應該也ok

55
00:03:29,230 --> 00:03:31,685
實際上，有時碰到的情況是

56
00:03:31,685 --> 00:03:33,965
當有人在講

57
00:03:33,965 --> 00:03:40,580
"train-test splits" (分成訓練/測試)，可是他們真正在做的
是對測試集反覆測試

58
00:03:40,580 --> 00:03:42,250
這樣並不叫測試集

59
00:03:42,250 --> 00:03:46,415
其實這樣是 "train-dev split" (分成訓練/開發)，沒有測試集

60
00:03:46,415 --> 00:03:48,604
如果你拿這個來調整系統

61
00:03:48,604 --> 00:03:50,390
開發集也好、測試集也好

62
00:03:50,390 --> 00:03:53,205
— 其實最好稱之為「開發集」。

63
00:03:53,205 --> 00:03:56,335
雖然我想，以前做機器學習的人

64
00:03:56,335 --> 00:03:59,875
不是所有人對名稱都很講究

65
00:03:59,875 --> 00:04:03,895
會把這樣的情況稱之為開發集。

66
00:04:03,895 --> 00:04:07,485
不過如果你只想要訓練些資料

67
00:04:07,485 --> 00:04:09,150
拿些資料來調整系統

68
00:04:09,150 --> 00:04:11,682
然後就想要推出你的產品

69
00:04:11,682 --> 00:04:15,710
而並不在乎最終效果如何

70
00:04:15,710 --> 00:04:17,940
那麼，這樣我覺得稱之「訓練/開發」

71
00:04:17,940 --> 00:04:20,700
並提醒說沒有「測試」資料，這樣比較恰當。

72
00:04:20,700 --> 00:04:22,720
這會很奇怪嗎？

73
00:04:22,720 --> 00:04:26,970
我絕對不是建議不要用測試集。當我在做系統，

74
00:04:26,970 --> 00:04:30,225
有單獨的測試集我會比較安心

75
00:04:30,225 --> 00:04:33,900
在推出產品前，可以拿它得到比較公正的估計

76
00:04:33,900 --> 00:04:37,770
不過，如果你的開發集很大

77
00:04:37,770 --> 00:04:41,650
你覺得你不會太 overfit (過適) 你的開發集

78
00:04:41,650 --> 00:04:45,200
或許只有訓練/開發集也不會不合理

79
00:04:45,200 --> 00:04:48,800
雖然我通常不會建議這樣。

80
00:04:48,800 --> 00:04:51,600
總結一下，在大數據的時代

81
00:04:51,600 --> 00:04:54,500
我認為 70/30 這種舊的經驗

82
00:04:54,500 --> 00:04:56,275
已經不適用了

83
00:04:56,275 --> 00:05:01,035
趨勢是使用更多的資料來訓練；較少的資料當開發/測試

84
00:05:01,035 --> 00:05:03,220
特別是你的資料集非常大的時候

85
00:05:03,220 --> 00:05:06,960
準則現在是，讓開發資料多到足以達成目的即可：

86
00:05:06,960 --> 00:05:11,110
能幫助你評估各種想法，挑選最好的。

87
00:05:11,110 --> 00:05:15,450
而測試資料的目的是：對最終產出的分類器做評量

88
00:05:15,450 --> 00:05:18,590
測試集的大小只要能達到這目的即可

89
00:05:18,590 --> 00:05:21,710
而這可能會比 30% 還要來的少。

90
00:05:21,710 --> 00:05:24,810
那麼，我希望這能給你一些指引、建議

91
00:05:24,810 --> 00:05:28,710
在深度學習的年代來準備你的開發和測試集。

92
00:05:28,710 --> 00:05:30,595
接下來：其實有時候

93
00:05:30,595 --> 00:05:32,640
在解機器學習的過程中

94
00:05:32,640 --> 00:05:34,800
你可能會想要改變你的衡量指標

95
00:05:34,800 --> 00:05:36,615
或是更改開發和測試集

96
00:05:36,615 --> 00:05:38,250
且讓我們談談什麼時候會想這樣做