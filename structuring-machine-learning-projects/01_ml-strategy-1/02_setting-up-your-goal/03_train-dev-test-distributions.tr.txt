Eğitim dev ya da bir başka deyişle geliştirme kümelerinizi ve test kümelerinizi nasıl kurduğunuz, sizin ya da ekibinizin makine öğrenme uygulaması inşa ederken ne kadar seri bir şekilde ilerleme kaydedilebileceği üzerinde büyük etkisi olabilir. Aynı takımlar, hatta çok büyük şirketlerdeki takımlar bile bu veri kümelerini, ekibin ilerleyişini hızlandırmak yerine gerçekten yavaşlatacak şekilde kurarlar. Haydi bu veri kümelerini takımınızın verimini maksimuma çıkaracak şekilde nasıl kurabilirsiniz bakalım. Bu videoda, geliştirme ve eğitim kümelerinizi nasıl kuracağınıza odaklanmak istiyorum. "Dev kümesi", geliştirme kümesi ya da bazen çapraz doğrulama kümesi olarak da adlandırılır. Makine öğrenmede iş akışı pek çok fikri denemek, eğitim setinde farklı modeller eğitmek ve sonrasında farklı fikirleri değerlendirmek için geliştirme setini kullanıp birini seçmektir. Sonunda sizi memnun eden bir durum elde edinceye kadar geliştirme kümesinin performansını iyileştirmek için yeniliklere devam edin ve sonra bu durumu test kümenizde değerlendirin. Şimdi, örnek olarak diyelim ki bir kedi sınıflandırıcı kuruyorsunuz ve siz aşağıdaki bölgelerde çalışıyorsunuz; Amerika, Birleşik Krallık, diğer Avrupa ülkeleri, Güney Amerika, Hindistan, Çin, diğer Asya ülkeleri ve Avustralya. Peki, siz geliştirme ve test kümelerinizi nasıl kurarsınız? Bunu yapmanın bir yolu, bu bölgelerden dördünü seçmek. Bu dördünü kullanacağım ama dört rastgele seçilmiş bölge olabilir. Ve diyelim ki, bu dört bölgeden gelen veriler geliştirme kümesine gidecek. Ve diğer dört bölge, bu dörtü kullanacağım, dört tane rastgele de seçilebilir, bunlar test kümesine gidiyor. Bunun kötü bir fikir olduğu ortaya çıkıyor çünkü bu örnekte geliştirme ve test kümeleriniz farklı dağılımlardan geliyor. Ben bunun yerine, geliştirme ve test kümelerinizin aynı dağılımdan gelmesini sağlamanın bir yolunu bulmayı öneririm. Yani şunu demek istiyorum. Akılda tutulması gereken bir resim, bence, geliştirme kümenizi artı tek rol numarası değerlendirme metriğinizi, bir hedef koyar ve ekibinize hedeflemek istediğiniz boğanın gözünün nerede olduğunu anlatır gibi kurmaktır. Çünkü, bir kez bu geliştirme setini ve metriği kurduktan sonra olacak olan ekibinizin hızlıca yenilemeye gitmesi, farkli fikirler denemesi, deneyler yapması ve çok hızlı bir şekilde geliştirme kümesini ve bu metriği sınıflandırıcıları değerlendirmek için kullanıp en iyisini seçmesidir. Bu nedenle, makine öğrenimi ekipleri, farklı okları hedeflere fırlatmak ve boğanın gözünü vurana kadar adım adım yenilenmede çok iyidirler. Bu yüzden metrikleriniz ve geliştirme kümelerinizde iyi işler çıkarın. Ve soldaki örnekte geliştirme ve test kümelerini nasıl kurduğumuzla ilgili sorun şu ki, ekibiniz geliştirme kümesinde yenilikler yapmak için aylar harcayabilir ama sonunda onları deneme kümesinde test ettiğiniz zaman farkına varacakları tek şey bu dört ülkeden ya da alttaki bu dört bölgeden gelen verinin gelişim kümesindeki veriden çok farklı olabileceğidir. Öyleyse, kötü bir sürpriziniz olabilir ve geliştirme kümesinde iyileştirme yaparak harcadığınız tüm iş aylarının test kümesinde size iyi bir performans vermediğini fark edebilirsiniz. Dolayısıyla, farklı dağıtımlardan gelen geliştirme ve test kümeleri, bir hedef belirleyip ekibinizin boğanın gözüne daha da yaklaşmayı hedefleyerek aylar harcamasından sonra farkına varıp, "Oo, bekleyin, bunu denemek için, hedefi buraya taşıyacağım." demek gibidir. Ekibiniz de muhtemelen: "Peki, birdenbire boğanın gözünü başka bir yerdeki farklı bir bölgeye taşıyabileceksen neden bize farklı bir boğa gözü için aylarımızı harcattın?" Bundan kaçınmak için, benim önerim bunun yerine tüm bu rastgele karıştırılmış verileri geliştirme ve test kümesine almanızdır. Böylece, geliştirme ve test kümelerinin her sekiz bölgeden veriye sahip olması ve geliştirme ve test kümelerinin gerçekten aynı dağılımdan gelmesi, yani tüm verilerinizin birbirine karıştırılmasıdır. İşte başka bir örnek, bu aslında gerçek bir hikaye ama bazı detaylar değişti. Orta gelirli zip kodları için kredi onaylarından oluşan bir geliştirme setinde iyileme yapmak için aylarını harcayan bir makine öğrenme ekibi biliyorum. Özgül makine öğrenme problemleri şuydu; "Bir kredi başvurusu hakkında verilen bir X girdisiyle krediyi neden geri ödeyip ödemeyeceklerini tahmin edebilir misin?" Yani, bu bir krediyi onaylayıp onaylamamaya karar vermenize yardımcı olur. Ve böylece, geliştirme kümesi kredi başvurularından geldi. Orta seviyeli gelir zip kodlarından geldi. Zip kodları bizim Amerika'da posta kodu dediğimiz kodlardır. Bunun üzerinde birkaç ay çalıştıktan sonra ekip birdenbire bunu düşük seviyeli gelir zip kodları ya da düşük gelir seviyeli posta kodları üzerinde denemeye karar verdi. Ve tabi ki, orta seviyeli gelir ve düşük seviyeli gelir zip kodlarının dağılım verisi çok farklıydı. Ve ilk durumda iyileştirme için çok fazla zaman harcadıkları sınıflandırıcı ikinci durumda iyi çalışmadı. Ve böylece, bu belirli ekip aslında üç ayını boşa harcadı, geri dönmek ve gerçekten çok fazla iş yapmak zorunda kaldı. Ve burada olan şey, ekip bir hedefe yönelik üç ay harcadı, üç aydan sonra, yönetici sordu: " Oo, diğer hedefi vurma konusunda neler yapıyorsunuz?" Bu tamamen farklı bir yer. Ve bu takım için çok sinir bozucu bir deneyim oldu. Yani, bir geliştirme kümesi ve test kümesi kurmak için önerdiğim şey, ileride almayı beklediğiniz verileri yansıtacak şekilde bir gelişim ve test kümesi seçin, iyi yapılmasının önemli olduğunu göz önünde bulundurun. ve,özellikle, geliştirme ve test seti aynı dağılımdan gelmelidir Dolayısıyla, ileride iyi performans vermesini istediğiniz ne tarz bir veri belkiyor olursanız olun, buna benzeyen şekilde veri elde etmeye çalışın, ve, bu veri her ne ise, bunu hem geliştirme hem de test setinize koyun, çünkü bu şekilde,hedefi vurmak istediğiniz yere yerleştirmiş oluyorsunuz ve takımın aynı hedefi burmaya çalışırken verimli bir şekilde çalışmasını sağlamış oluyorsunuz. Eğitim setini nasıl kurduğumuzla alakalı olarak henüz konuşmadığımız farketmişssinizdir, eğitim seti ile ilgili olarak sonraki bir videoda konuşacağız. Bu videodan alacağımız önemli mesaj ise, geliştirm setini nasıl kurduğunuz ve aynı zamanda değerlendirme ölçeğini nasıl kurduğunuz hangi hedefe yöneleceğinizi belirleyen asıl şeylerdir. Ve geliştirme setini ve test setinin aynı dağılımdan gelmesini sağlayarak, makine öğrenimi takımınızın yöneleceği hedefin umduğunuz hedef olmasını sağlıyorsunuz. Eğitim setini nasıl seçtiğiniz hedefinizi ne kadar iyi vurduğunuzu etkileyecektir fakat bununla ilgili olarak başka bir videoda konuşacağız. Bu videodaki kılavuzları takip ederek kendilerini aylar sürecek olan işlerden kurtaran birçok makine öğrenimi takımı biliyorum. Umarım bu kılavuzlar size de yardımcı olur. Görünen o ki geliştirme ve test setlerinizin boyutları ve bu boyutları nasıl belirlediğiniz derin öğrenme çağında değişen şeylerden bir diğeridir. Sonraki videomuzda bunun hakkında biraz konuşalım.