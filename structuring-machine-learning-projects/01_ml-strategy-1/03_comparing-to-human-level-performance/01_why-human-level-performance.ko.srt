1
00:00:01,430 --> 00:00:05,280
지난 몇 년간, 더 많은 머신러닝팀들이

2
00:00:05,280 --> 00:00:09,480
머신러닝 시스템과 인간레벨 시스템을 비교하는 내용에 대해 이야기 해왔습니다.

3
00:00:09,480 --> 00:00:10,260
 왜 그럴까요?

4
00:00:10,260 --> 00:00:12,110
가장 두드러지는 이유는 2가지가 있다고 생각합니다.

5
00:00:12,110 --> 00:00:15,130
첫 번째로는, 딥러닝의 발전으로 인해,

6
00:00:15,130 --> 00:00:18,170
머신러닝 알고리즘이 갑자기 더 잘 구동되는 현상이 벌어졌기 때문입니다.

7
00:00:18,170 --> 00:00:22,170
그러므로 인간레벨 성능과 비교하였을 때, 이와 견줄만할 정도로 많은 어플에서 머신러닝 알고리즘의

8
00:00:22,170 --> 00:00:26,560
실효성이 입증됐다고 생각됩니다.

9
00:00:26,560 --> 00:00:29,760
둘째로는, 머신러닝 시스템을 디자인하고 수행절차를 설립하는 과정이

10
00:00:29,760 --> 00:00:33,500
이전과 비교하여 많이 효율적으로 발전했습니다.

11
00:00:33,500 --> 00:00:36,550
인간이 할 수 있는 업무 영역에서는 말이죠.

12
00:00:36,550 --> 00:00:40,450
그러므로 이러한 환경에서는 두 가지를 비교하는 것이 정상적이라고 할 수 있죠,

13
00:00:40,450 --> 00:00:43,200
또는 인간레벨 성능을 머신러닝이 떠라 하고 있다고도 볼 수 있죠.

14
00:00:43,200 --> 00:00:45,110
몇 개의 예시를 통해 구체적으로 살펴보도록 하겠습니다.

15
00:00:46,250 --> 00:00:50,090
시간이 흐르면서 진행되는 머신러닝의 수행업무들을

16
00:00:50,090 --> 00:00:56,060
많이 봐왔는데요, 이 경우, x축이 시간이고, 값은 수개월 또는 수년이 될 수 있습니다.

17
00:00:56,060 --> 00:00:59,965
팀 프로젝트의 기간이나 또는 리서치 커뮤니티의 기간이라고도 볼 수 있죠.

18
00:00:59,965 --> 00:01:07,540
프로젝트의 진전은 인간레벨 성능으로 갈수록 빠른 속도로 일어나는 경향이 있는데요,

19
00:01:07,540 --> 00:01:12,115
조금 지나면, 알고리즘이 인간레벨 성능을 뛰어넘으면서

20
00:01:12,115 --> 00:01:14,998
진행속도나 정확도가 정체되기 시작합니다.

21
00:01:14,998 --> 00:01:17,140
그러면서 능숙도가 증가할 수도 있지만,

22
00:01:17,140 --> 00:01:21,560
인간레벨성능을 능가하면서 지속적으로 더 좋아질 수는 있지만

23
00:01:21,560 --> 00:01:26,420
성능, 즉 정확도가 얼마나 빨리 올라가는지의 여부는 보통 더뎌지게 됩니다.

24
00:01:26,420 --> 00:01:31,450
이러면서 바라는 바는, 이론적으로 최적화된 성능레벨에 도달하는 것인데요.

25
00:01:32,730 --> 00:01:37,704
시간이 지나면서 알고리즘을 계속 트레이닝 시키면서,

26
00:01:37,704 --> 00:01:42,792
더 큰 확장된 모델을 사용하거나, 더 많은 데이터 수집을 통해

27
00:01:42,792 --> 00:01:49,915
성능은 이론적인 한계에 다가가지만 절대로 도달하지는 못합니다.

28
00:01:49,915 --> 00:01:53,900
이것을 Bayes optimal error라고 합니다.

29
00:01:53,900 --> 00:01:57,048
그러므로 Bayes optimal error를 가장 최상의 오류라고 생각하시면 쉽습니다.

30
00:01:59,946 --> 00:02:02,247
이것이 바로

31
00:02:02,247 --> 00:02:08,258
어떤 x, y함수가 특정 정확도 값을 넘는 방식입니다.

32
00:02:08,258 --> 00:02:14,678
음성인식기기를 예로 들자면, x가 오디오 영상이라고 하면, 어떤 오디오는

33
00:02:14,678 --> 00:02:20,022
너무 시끄러워서 어떤 내용이 들어있는지 판단이 불가한 내용도 있습니다.

34
00:02:20,022 --> 00:02:23,790
이런 경우, perfect error는 100%가 아닐 수 있습니다.

35
00:02:23,790 --> 00:02:25,150
고양이 인식 프로그램에서,

36
00:02:25,150 --> 00:02:29,945
이미지가 너무 흐릿하여

37
00:02:29,945 --> 00:02:34,705
이미지가 고양이 사진인지 여부 자체를 전혀 인식할 수 없을 수도 있습니다.

38
00:02:34,705 --> 00:02:39,195
이 경우에도 마찬가지고, pefect accuracy level이 100%가 아닐 수 있습니다.

39
00:02:39,195 --> 00:02:44,655
그럼 Bayes optimal error 또는 Bayesian optimal error, 줄여서 Bayes error라고도 하는데요,

40
00:02:44,655 --> 00:02:51,065
이 함수가 가장 이론적으로 정확히 x와 y를 나타내는 함수입니다.

41
00:02:52,330 --> 00:02:53,770
절대로 이 값을 능가할 수는 없습니다.

42
00:02:56,180 --> 00:03:00,290
그렇기 때문에 놀랍지 않게도, 이 보라색 선을, 얼마나 긴 시간이 지나도

43
00:03:00,290 --> 00:03:05,330
Bayes error또는 Bayes optimal error를 도달할 수 없다는 것입니다.

44
00:03:05,330 --> 00:03:08,670
그리고 진행속도는 보통 꽤 빠릅니다.

45
00:03:08,670 --> 00:03:10,910
인간레벨 성능을 능가하기 전까지는 말이죠.

46
00:03:12,010 --> 00:03:16,180
간혹 인간레벨성능을 능가한 이후로, 느려지기도 하죠.

47
00:03:16,180 --> 00:03:18,150
제 생각에는 이러한 이유가 2가지 있다고 생각합니다.

48
00:03:18,150 --> 00:03:22,490
왜 인간레벨성능을 지나면 진행속도가 더뎌지는지 말이죠.

49
00:03:22,490 --> 00:03:25,740
첫 번째 이유로는 많은 수행업무에 있어서 인간레벨성능이

50
00:03:25,740 --> 00:03:28,640
Bayes optimal error 지점과 이게 떨어져 있지 않기 때문이죠.

51
00:03:28,640 --> 00:03:32,040
인간은 보통 이미지를 구분하고 고양이인지 여부를 확인하는데 굉장히 능숙하고,

52
00:03:32,040 --> 00:03:34,810
오디오를 들어서 표기화하는데 굉장히 뛰어납니다.

53
00:03:34,810 --> 00:03:38,920
그렇기 때문에, 인간레벨성능을 이미 능가한 시점에서는

54
00:03:38,920 --> 00:03:41,030
더 발전할 수 있는 부분이 제한적일 수 있는 것이죠.

55
00:03:42,390 --> 00:03:46,677
두 번째 이유로는, 인간레벨성능에 미치지 못하는 이상,

56
00:03:46,677 --> 00:03:50,776
여러 가지 툴을 이용하여 성능을 발달시킬 수 있는 부분이 있습니다.

57
00:03:50,776 --> 00:03:55,340
이런 툴은 인간레벨성능을 초과하는 시점에서는 사용하기 어렵습니다.

58
00:03:55,340 --> 00:03:57,541
그래서 이것이 뜻하는 것은 다음과 같습니다.

59
00:03:59,980 --> 00:04:02,407
인간이 능숙히 수행하는 업무들은,

60
00:04:02,407 --> 00:04:07,066
사진을 보는 것과, 특정 사물을 판단하는 것, 오디오를 듣고 구분하는 것,

61
00:04:07,066 --> 00:04:11,480
언어를 읽는 것 등과 같이 자연적인 데이터 업무를 잘 수행합니다.

62
00:04:11,480 --> 00:04:16,344
머신러닝 알고리즘이 인간성능에 못 미치는 경우에는, 인간이 잘 수행하는 업무이면

63
00:04:16,344 --> 00:04:20,426
인간으로부터 labeled data를 습득할 수 있습니다.

64
00:04:20,426 --> 00:04:25,055
즉, 인간에게 물어보고, 예시들을 레이블화하여,

65
00:04:25,055 --> 00:04:29,560
학습 알고리즘에 데이터로 반영시킬 수 있습니다.

66
00:04:29,560 --> 00:04:33,010
다음주에는 manual error 분석에 대해 다루어보도록 하겠습니다.

67
00:04:33,010 --> 00:04:37,290
하지만 인간이 다른 알고리즘보다 더 능숙한 성능을 보유하고 있는 이상,

68
00:04:37,290 --> 00:04:41,010
알고리즘이 틀린 부분을 사람들에게 관련 예시로 물어봐서

69
00:04:41,010 --> 00:04:44,270
인간은 어떻게 맞추고 알고리즘은 왜 틀렸는지에 대한 통찰력을 기를 수 있습니다.

70
00:04:44,270 --> 00:04:47,130
또, 다음주에는 이러한 방법이 알고리즘 성능향상에 기여한다는 점도 배워보도록 하겠습니다.

71
00:04:48,230 --> 00:04:51,220
편향과 편차에 대한 분석도 해볼 텐데요

72
00:04:51,220 --> 00:04:53,240
조금 후에도 간략히 다루어보도록 하겠습니다.

73
00:04:53,240 --> 00:04:56,810
알고리즘이 인간레벨에 못 미치는 이상

74
00:04:56,810 --> 00:05:00,290
이런 중요한 전술을 통해 알고리즘을 향상시킬 수 있습니다.

75
00:05:00,290 --> 00:05:03,540
반면에 알고리즘이 이미 인간레벨성능을 뛰어 넘었을 경우엔,

76
00:05:03,540 --> 00:05:06,140
세 가지의 전술은 적용하기 매우 까다롭습니다.

77
00:05:07,250 --> 00:05:11,931
이런 이유 때문에 인간레벨성능과 머신러닝을 비교하는 것 자체가

78
00:05:11,931 --> 00:05:15,360
특히 인간이 잘 수행하는 업무 같은 경우에는 도움이 된다고 볼 수 있습니다.

79
00:05:17,665 --> 00:05:21,860
그리고 왜 머신러닝이 어떤 업무를

80
00:05:21,860 --> 00:05:25,590
능숙히 복제하고 따라 하는 과정에서

81
00:05:25,590 --> 00:05:29,690
인간레벨성능마저 따라잡을 수 있는지도 잘 보여주고 있습니다.

82
00:05:29,690 --> 00:05:34,129
특히, 편향과 편차가 이미 무슨 뜻인지 알고 있으시지만

83
00:05:34,129 --> 00:05:38,373
인간이 얼마나 특정 수행업무를 잘하는지 아는 것에 따라

84
00:05:38,373 --> 00:05:43,430
편향과 편차를 얼마나 줄이는지 더 쉽게 이해할 수 있습니다.

85
00:05:43,430 --> 00:05:45,810
이런 예시들을 다음 비디오를 통해 보여드리도록 하겠습니다.