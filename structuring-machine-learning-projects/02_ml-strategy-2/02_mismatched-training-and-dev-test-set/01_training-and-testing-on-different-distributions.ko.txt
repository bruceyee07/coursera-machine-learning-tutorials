딥 러닝 알고리즘은 훈련 자료를 수집하고자하는 엄청난 갈망이 있습니다. 그것들은 당신이 충분한 훈련 자료 레이블을 훈련 세트에 넣었을 때에 가장 잘 작동합니다. 이것은 많은 팀들이 종종 찾을 수 있는 모든 데이터를 수집하고 그것을 훈련 세트에 밀어 넣기만 하면 더 많은 훈련 자료를 얻게되는 결과를 초래하게 되었습니다. 이 데이터 중 일부 혹은 어쩌면 많은 데이터가 같은 분포에서 나오지 않을 수도 있습니다. 개발이나 테스트 데이터로 사용할 수 있습니다. 그러므로 데이터 러닝 시대에서는, 더 많은 팀들이 다른 분포에서 오는 개발 및 테스트 세트보다 큰 성능을 제공합니다. 몇가지 세부사항이 있고 당신이 훈련받을 때에 대처하기 위한 몇가지 모범 사례와 시험분포는 서로 다릅니다. 그럼 한번 살펴봅시다. 한번 자세히 살펴볼까요. 자, 그럼 당신이 사용자가 그들의 핸드폰으로 찍은 사진을 업로드 시키는 앱을 만든다고 가정해봅시다. 그리고, 당신은 그들이 앱을 통해 업로드한 사진들이 고양이인지 아닌지 인식하고 싶다고 해봅시다. 자, 이제 당신은 두가지 데이터 자원을 얻게 됩니다. 한개는 당신이 정말 관심을 갖는 분포 데이터 입니다. 오른쪽과 같은 핸드폰 앱의 데이터는 좀 덜 전문적이고, 덜 프레임되고, 어쩌면 더 희미하게 보일 수도 있습니다. 그 사진은 아마추어 사용자들이 찍은 것이기 떄문이죠. 그리고 나머지 데이터 자원은 이 사례를 예로 들면 당신은 웹을 기어디나고 그저 다운 받을 수 있습니다. 당시이 매우 전문적으로 프레임된, 고해상도의 전문적으로 찍힌 고양이 사진은 다운 받을 수 있다고 가정합시다. 그리고 당신의 앱 사용자가 아직 그리 많지 않다고 가정합시다. 당신은 어쩌면 10,000개의 사진들을 핸드폰 앱에 업로드했을지도 모릅니다. 그러나 웹을 기어다님으로 당신은 대량의 고양이 사진을 다울 받을 수 있고, 어쩌면 당신은 인터넷에서 200,000 사진들을 다운 받을 수 있습니다. 그러니까 당신이 진짜 걱정하는 부분은 최종 시스템이 모바일 앱 이미지의 분포에서 잘 작동하는거 맞죠? 결국 당신은 사용자들은 오른쪽과 같이 사진들을 업로드하고 당신은 그것을 위해 당신의 분류자들이 잘 작동하길 원하기 떄문이죠. 하지만 당신은 지금 약간의 딜레마에 빠졌어요. 당신의 데이터 세트는 비교적 작기 때문이죠. 그 분포에서 나온 10,000개의 예 정도죠. 그리고 다른 분포에서 그려진 훨씬 더 큰 데이터 세트가 있죠. 당신이 원하는 이미지와는 다른 외형이 있습니다. 그러니 당신은 단지 10,000개의 이미지만 사용하고 싶지는 않을거에요. 왜냐하면 그것은 당신에게 비교적 작은 훈련 세트를 줄 것이기 때문입니다. 그리고, 200,000개의 이미지는 도움이 될 것처럼 보이지만, 딜레마는 이 200,000개의 이미지는 당신이 원하는 분포와는 다릅니다. 그럼 당신은 무엇을 할 수 있을까요? 여러분은 뭘 할 수 있을까요? 자, 여기 하나의 옵션이 있습니다. 당신이 할 수 있는 하나의 방법은 두개의 데이터 세트를 함께 연결하여 210,000 이미지를 갖게되는거죠. 그리고 당신은 210,000 이지미를 찍고 임의적으로 섞어 연습하고, 발전 시키고, 테스트 합니다. 논쟁을 위해 당신의 개발과 테스트 세트가 각각 2,500개의 예를 갖고 있다고 가정합시다. 당신의 트레이닝 세트는 205,000개입니다. 이제 이런 방식으로 당신의 데이터를 설치하는 것은 몇몇의 장점이 있지만, 단점도 있습니다. 장점은 이제 당신은 훈련하고, 개발하고 테스트하여 모든 것이 같은 분포도로 오고 관리하기 쉽다는 것이다. 그러나 단점은, 매우 큰 단점은, 당신의 이 2,500개의 개발 세트를 보면 이 많은 것들은 당신이 진정 관심 있는 앱의 이미지 보다 웹페이지의 분포에서 올 것이다. 그리하여 당신의 총 데이터는 200,000개이고, 나는 그것을 간략하게 줄여 210,000개 중 200K라고 하겠습니다. 우리는 그것을 210K라고 쓰겠습니다. 그것은 웹페이지에서 쓰인 것이져. 그리하여 이 모든 2,500개의 예들을 예상한 것들입니다. 제 생각에 2,381개는 웹 페이지에서 올 것이고, 이것들은 예상한 것들입니다. 정확한 숫자는 임의로 섞는 방식에 따라 달라질 것 입니다 그러나, 평균적으로 오로지 119개만 모바일 앱 업로드에 이용될 것입니다. 그러니 개발 시스템이 당신의 팀이 어디에 목표를 두는지 기억하십시오. 그리고 당신이 목표를 정하는 방식, 그리고 당신은 웹페이지 이미지 분포에 최적화 된 시간을 사용하는 것이란 말이죠. 그것은 당신이 진짜 원하는 것이 아니에요. 그래서 저는 옵션 1을 추천하지는 않습니다. 개발 세트에 당신의 팀이 다른 분포의 데이터에 최적화 되게 하고 그렇게 하는 대신에, 저는 당신이 다음과 같은 다른 옵션을 취하기를 추천합니다. 훈련 세트가 여전히 205,000 이미지라고 합시다. 저는 트레이닝 세트가 웹에서 온 200,000개의 이미지로 하겠습니다. 그 후에 당신이 원한다면 5,000개의 이미지를 모바일 앱에서 추가할 수 있습니다. 그 후에 당신의 개발과 테스트 세트를 위해, 제 생각에 저의 데이터 크기는 규모에 맞게 그려지지 않습니다. 당신의 개발과 테스트 세트는 모두 모바일 앱 이미지일 것 입니다. 그래서 훈련 세트는 웹에서의 200,000개의 이미지를 포함시킬 것입니다. 그리고 5,000개의 모바일 앱에서 포함시킬 것 입니다. 개발 세트는 모바일 앱에서 2,500개, 테스트 세트는 모바일 앱에서 2,500개일 것입니다. 당신의 데이터를 이처럼 훈련, 개발, 테스트 방식으로 나누는 것의 장점은 이제 당신은 어디에 목표을 두는지에 있습니다. 당신은 당신의 팀에 저의 개발 세트가 모바일 앱에 업로드될 데이터가 있다고 합니다. 그리고 그것은 당신이 정말 관심있어하는 분포의 이미지입니다. 그럼 이제 모바일 앱 이미지 분포에서 잘 작동하는 머신 러닝 시스템을 만들어 봅시다. 당연히 단점은 당신의 훈련 분포가 당신의 개발과 테스트 세트 분포와 다르다는 것 입니다. 그러나 이 데이터가 훈련 개발, 테스트로 나누어게 된 결과는 장기적으로 당신에게 훨씬 더 좋은 성과를 가져다 줄 것입니다. 그리고 우리는 나중에 개발과 테스트 세트와 다른 분포에서 온 훈련 세트를 다루는 상세한 테크닉에 대해 토론해보겠습니다. 또 다른 예 하나를 살펴보겠습니다. 다른 예제를 보시죠. 당신이 자동차의 음성 작동 백미러 최신형 상품을 만든다고 가정해봅시다. 이것은 중국에서 진짜 시행되는 제품입니다. 다른 나라에 진충해서 백미러를 만들어서 이 작은 것을 대체하면 백미러와 이야기할 수 있게 됩니다. 기본적으로 백미러라고 하는데, 백 미러야, 가장 가까운 주유소로 가는 방향을 알려줘 라고 하면 그것은 도움을 주고 해결해 줄 것입니다. 그래서 이것은 진짜 제품입니다. 이제, 이것을 당신의 나라를 위해 만든다고 합시다. 그럼 당신은 어떻게 데이터를 갖고와서 이 제품의 음성 인식 시스템을 훈련하겠습니까? 어쩌면 당신은 음성인식 시스템에 장시간 일해왔을 수 있습니다. 그리하여 다른 음성인식 앱에 대한 데이터들이 많을 수 있죠. 백미러의 음성 인식 시스템이 아닐 뿐이죠. 여기에 당신이 당신의 훈련 데이터를 개발과 테스트 세트로 나눌 수 있는 방법에 있습니다. 훈련을 위해, 당신이 갖고 있는 일을 통해 축적해온 모든 음성 데이터들, 예를 들어 몇년동안 구매한 다양한 음성인식 데이터 공급 업체들을 취할 수 있습니다. 그리고 오늘날 당신은 실제로 x, y쌍으로 된 공급업체의 데이터를 구매할 수 있습니다. x는 오디오 영상이고 y는 기록입니다. 혹은 어쩌면 당신은 스마트 음성 지원하는 스피커 스마트 스피커에 대해 관련된 일을 해봤을 수도 있죠. 그래서 그에 관련된 데이터들을 갖고있을 수 있죠. 어쩌면 당신은 키보드 음성지원이나 그 외의 것들에 관련된 일을 해봤을 수 있겠죠. 이 논쟁을 위해서, 50만 개의 음성이 있다고 합시다. 개발 및 테스트 세트의 경우 실제로 음성인식된 백미러에서 사용된 것보다 훨씬 더 작은 데이터 세트가 있습니다. 사용자가 방향에 대한 질문 혹은 다양한 장소의 방향을 찾으려고 시도하게 때문에 이 데이터 세트에는 많은 데이터가 포함될 수 있습니다. 더 많은 거리 주소가 필요하겠죠? 다음 주소로 이동할 수 있도록 도와 주십시오. 또는, 이 주유소로 가는 길 좀 안내해 주세요. 그래서 이 데이타의 분배는 왼쪽의 이것들과는 매우 다르다. 하지만 이것이 당신이 관심을 가지는 진짜 데이터입니다. 이것이 당신의 제품이 잘 작동되데하고, 강신의 개발과 테스트가 잘 되게 하는 것이니까요. 이 예에서는 당신의 훈련 세트는 왼쪽 500,000개의 발언과 개발 및 테스트들을 저는 축약해서 D와 T라고 하겠습니다. 이것들은 아마도 한 사람당 10,000 마디일 것입니다. 그것은 실제 음성인식 백미러에서 따온 것 입니다. 아니면, 당신이 20,000개의 모든 예를 음성인식 백미러의 개발과 테스트세트에서 넣을 필요가 없다고 생각하면, 그것의 반만 훈련 세트에 넣어도 됩니다. 그럼 훈련 세트는 거기서 온 500명을 포함하여 백미러의 10,000건과 510,000개의 의 발언이 가능하고 그런 다음 개발 및 테스트 세트에서 각각 5,000건 정도 될 것 입니다 그러니까 20,000번의 발언 중에서 아마 10k는 훈련 세트에 들어가서 개발 세트에 5k 시험 세트에 5천개가 될 것 입니다. 그리하여 이것은 또다른 합리적인 데이터를 훈련, 개발, 테스트로 나누는 방법입니다. 그리고 이것은 당신에게 훨씬 더 큰 500,000건이 넘는 음성 세트를 제공합니다. 이는 단지 훈련 세트을 위해 음성 활성화 된 백미러 데이터를 사용하는 경우에만 해당됩니다. 이 영상에서 당신은 언제 당신의 훈련세트가 다른 개발과 테스트를 허용하여 훨씬 더 많은 그리고 이 예들에서 당신의 러닝 알고리즘이 더 잘 수행되게 할 것이고, 당신이 갖을 수 있는 질문은 당신이 갖고있는 모든 데이터를 항상 다 쓸 것인가?일 것입니다. 대답은 미묘합니다. 항상 그렇지는 않습니다. 다음 비디오에서는 반대되는 예를 보겠습니다.