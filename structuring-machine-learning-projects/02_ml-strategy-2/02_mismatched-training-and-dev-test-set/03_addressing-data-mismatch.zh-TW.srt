1
00:00:00,000 --> 00:00:02,700
如果您的訓練集來自於

2
00:00:02,700 --> 00:00:04,135
跟您的開發，測試集不同的分佈

3
00:00:04,135 --> 00:00:09,623
而如果誤差分析顯示
您有資料不匹配問題時，您該怎麼辦？

4
00:00:09,623 --> 00:00:13,105
這沒有完整的系統化解決方案

5
00:00:13,105 --> 00:00:15,520
但我們來看看一些您可以試的事

6
00:00:15,520 --> 00:00:19,107
如果我發現大的資料不匹配問題

7
00:00:19,107 --> 00:00:23,865
我通常會進行手工誤差分析，試著

8
00:00:23,865 --> 00:00:31,865
理解訓練集跟
開發，測試集的不同

9
00:00:31,865 --> 00:00:34,272
為了避免過適於測試集

10
00:00:34,272 --> 00:00:35,800
技術上在誤差分析時

11
00:00:35,800 --> 00:00:40,030
您應該只人工來看開發集
而非測試集

12
00:00:40,030 --> 00:00:42,040
但看一個實際的例子

13
00:00:42,040 --> 00:00:47,020
如果您建立一個
語音啟動後視鏡應用

14
00:00:47,020 --> 00:00:50,020
您會看，或者說如果是語音的話

15
00:00:50,020 --> 00:00:53,230
您會聽您開發集的語音，試著

16
00:00:53,230 --> 00:00:56,885
發覺您個開發集不同於您的訓練集

17
00:00:56,885 --> 00:00:58,890
舉個例子，您會發現

18
00:00:58,890 --> 00:01:03,745
很多開發集例子很吵，有很多汽車的聲音

19
00:01:03,745 --> 00:01:08,485
而這是一種方式您的開發集
不同於您的訓練集

20
00:01:08,485 --> 00:01:11,350
而或許您會發現
另一種類型的誤差

21
00:01:11,350 --> 00:01:17,095
舉個例子，在車子裡的語音啟動後視鏡

22
00:01:17,095 --> 00:01:20,650
您會發現常常誤判

23
00:01:20,650 --> 00:01:22,600
街道號碼，因為有很多

24
00:01:22,600 --> 00:01:25,450
導航查詢用到街道號碼

25
00:01:25,450 --> 00:01:28,420
所以正確地做對
街道號碼是很重要的

26
00:01:28,420 --> 00:01:31,110
當您有這些開發集誤差
的本質洞察時

27
00:01:31,110 --> 00:01:33,960
或者您有開發集

28
00:01:33,960 --> 00:01:37,055
不同於訓練集或者
難於訓練集的洞見

29
00:01:37,055 --> 00:01:41,645
您可以做的是試著找一個方式

30
00:01:41,645 --> 00:01:47,290
或者取而代之，試著去
收集類似於開發跟測試集資料

31
00:01:47,290 --> 00:01:53,940
舉個例子，如果您發現
車子背景噪音是主要的誤差來源

32
00:01:53,940 --> 00:02:00,120
您可以做的是模擬車子的噪音資料

33
00:02:00,120 --> 00:02:03,580
在下一張投影片會講一下您可以如何做

34
00:02:03,580 --> 00:02:06,710
或者您發現您很難辨識街道號碼

35
00:02:06,710 --> 00:02:10,280
或許您可以去嘗試獲取更多的資料有關

36
00:02:10,280 --> 00:02:15,150
人們講到號碼的語音
然後加入您的訓練集

37
00:02:15,150 --> 00:02:20,555
我知道這張投影片只給您
您可以試的很粗淺的準則

38
00:02:20,555 --> 00:02:23,525
這不是一種系統化的步驟

39
00:02:23,525 --> 00:02:27,720
我想，這並不能保證您會得到
您可以改進的洞見

40
00:02:27,720 --> 00:02:32,045
但我發現這種手工的洞見

41
00:02:32,045 --> 00:02:35,870
我們一起試著讓資料在維度上更類似

42
00:02:35,870 --> 00:02:39,765
通常會幫助很多的問題

43
00:02:39,765 --> 00:02:46,010
所以您的目標是讓您的訓練資料
更類似於您的開發集

44
00:02:46,010 --> 00:02:48,620
您可以做些什麼？

45
00:02:48,620 --> 00:02:50,270
您可以用的一件技巧是

46
00:02:50,270 --> 00:02:52,970
人工資料合成，讓我們

47
00:02:52,970 --> 00:02:56,810
用處理車子噪音問題來討論

48
00:02:56,810 --> 00:02:59,240
所以，要建立語音辨識系統

49
00:02:59,240 --> 00:03:01,970
或許您沒有很多語音實際上

50
00:03:01,970 --> 00:03:05,030
在車子裡錄製
有很多車子的背景噪音

51
00:03:05,030 --> 00:03:07,040
高速公路背景噪音等等

52
00:03:07,040 --> 00:03:09,440
但，實際上，有方法來合成它

53
00:03:09,440 --> 00:03:11,435
假設您已經錄製了

54
00:03:11,435 --> 00:03:15,620
很多清楚的語音
沒有車子的背景噪音

55
00:03:15,620 --> 00:03:20,400
所以，這個例子是您或許
在您的訓練集有的語音片段

56
00:03:21,190 --> 00:03:26,340
 順便說一下，這句話常常用在人工智慧

57
00:03:26,340 --> 00:03:30,590
來測試，這是一個短句
包含了所有的字母從 A 到 Z

58
00:03:30,590 --> 00:03:32,745
所以您常會見到這個句子

59
00:03:32,745 --> 00:03:36,540
但是給予"快速棕色狐狸跳過懶狗,"的錄音，你

60
00:03:36,540 --> 00:03:46,455
也可以有車子的噪音像這樣

61
00:03:46,455 --> 00:03:49,010
所以那是在車子裡的聲音

62
00:03:49,010 --> 00:03:50,595
如果您在沈默中開車

63
00:03:50,595 --> 00:03:53,460
而如果您拿這兩段語音，
將它們加在一起

64
00:03:53,460 --> 00:03:55,595
您可以合成為

65
00:03:55,595 --> 00:03:58,835
說 "快速棕色狐狸跳過懶狗" 聽起來像

66
00:03:58,835 --> 00:04:06,870
 如果您是在有噪音的
車子裡說的話像是

67
00:04:06,870 --> 00:04:10,980
所以，這是一種相對簡單的語音合成例子

68
00:04:10,980 --> 00:04:14,210
實作上，您或許合成
其他語音效果像是

69
00:04:14,210 --> 00:04:16,370
反響也就是

70
00:04:16,370 --> 00:04:19,700
您的聲音從
車子的牆壁回響的聲音

71
00:04:19,700 --> 00:04:22,370
但透過人工資料合成

72
00:04:22,370 --> 00:04:26,900
您或許能夠很快地產生資料的聲音像是

73
00:04:26,900 --> 00:04:32,540
在車子裡錄製，而不需要真的
到外邊去取那麼多的資料

74
00:04:32,540 --> 00:04:34,850
或許上百萬或上萬個小時的

75
00:04:34,850 --> 00:04:37,700
在車子的資料
自己實際一個人開車得來的

76
00:04:37,700 --> 00:04:41,210
所以，如果您的誤差分析
顯示您應該要試著

77
00:04:41,210 --> 00:04:45,050
讓您的資料像是
在車子裡錄製的

78
00:04:45,050 --> 00:04:47,705
那這可能是一種合理的步驟來

79
00:04:47,705 --> 00:04:51,310
合成這樣的資料來
給您的學習演算法

80
00:04:51,310 --> 00:04:54,380
現在，有一個注意事項

81
00:04:54,380 --> 00:04:57,855
在人工資料合成上
我要說的是

82
00:04:57,855 --> 00:05:04,814
假設，您有 10,000 小時的資料
是錄製在安靜的背景中

83
00:05:04,814 --> 00:05:11,915
且假設您只有一小時的車子噪音

84
00:05:11,915 --> 00:05:14,940
所以，您可以試著拿這一小時

85
00:05:14,940 --> 00:05:17,820
車子噪音然後重複 10,000 次

86
00:05:17,820 --> 00:05:24,695
為了要加這個到 10,000 小時
的在安靜背景下的錄音

87
00:05:24,695 --> 00:05:29,355
如果這樣做，這些聲音檔會很完美
到人類的耳朵裡

88
00:05:29,355 --> 00:05:30,600
但有這樣的可能

89
00:05:30,600 --> 00:05:38,790
有這樣的風險，您的學習演算法會
過適於這一小時的車子噪音

90
00:05:38,790 --> 00:05:44,325
而，特別是，如果這組

91
00:05:44,325 --> 00:05:52,460
聲音是您可以在
車子裡錄製的所有聲音

92
00:05:52,460 --> 00:05:56,195
或許是所有您可以想像的
所有車子背景噪音

93
00:05:56,195 --> 00:05:59,285
如果您只有一小時的
車子背景噪音

94
00:05:59,285 --> 00:06:03,660
您或許會模擬在
一組在整個空間很小的子集上

95
00:06:03,660 --> 00:06:09,010
您或許只是從這個空間
很小的子集上合成

96
00:06:09,010 --> 00:06:10,870
而對於人耳

97
00:06:10,870 --> 00:06:13,990
所有這些聲音可能還好，
因為這一小時的車子噪音

98
00:06:13,990 --> 00:06:18,030
聽起來就像其他小時的車子噪音，對於人耳而言

99
00:06:18,030 --> 00:06:23,880
但，在整個空間很小的子集上
合成您的資料

100
00:06:23,880 --> 00:06:25,840
這個神經網路或許會

101
00:06:25,840 --> 00:06:30,530
過適於您僅有的
這一小時的車子噪音

102
00:06:30,530 --> 00:06:33,355
我不知道是否可以

103
00:06:33,355 --> 00:06:37,090
便宜的收集 10,000 小時
的車子噪音

104
00:06:37,090 --> 00:06:39,310
所以您不用重複使用同樣這一小時

105
00:06:39,310 --> 00:06:42,550
的噪音，一直重複，
如果您有 10,000 小時單獨的

106
00:06:42,550 --> 00:06:48,024
車子噪音來加入這 10,000 小時
的單獨的在安靜背景下的錄音

107
00:06:48,024 --> 00:06:50,900
但是有可能，不帶保證

108
00:06:50,900 --> 00:06:56,710
有可能用這 10,000 小時單獨的車子噪音
而不只是一小時

109
00:06:56,710 --> 00:07:01,167
可能造成學習演算法
比較好的表現

110
00:07:01,167 --> 00:07:05,650
而人工資料合成的挑戰
在於對於人耳而言

111
00:07:05,650 --> 00:07:07,340
人類耳朵可以辨別的

112
00:07:07,340 --> 00:07:10,850
這 10,000 小時聽起來
像是這一個小時

113
00:07:10,850 --> 00:07:13,175
所以您最終會建立

114
00:07:13,175 --> 00:07:16,310
非常貧乏的合成資料集

115
00:07:16,310 --> 00:07:19,890
從空間上很小的子集建立
而不知不覺

116
00:07:19,890 --> 00:07:23,265
這是另一個例子
有關人工資料合成

117
00:07:23,265 --> 00:07:26,495
假設您要建立一個自駕車，您想要真正能偵測到

118
00:07:26,495 --> 00:07:31,260
這樣的車輛，然後
放一個框框在外面像這樣

119
00:07:31,260 --> 00:07:34,550
很多人討論的一個想法是, 好,

120
00:07:34,550 --> 00:07:39,070
為什麼不用電腦圖形
來模擬大量的汽車照片？

121
00:07:39,070 --> 00:07:41,045
實際上，這裡有一些車子的照片

122
00:07:41,045 --> 00:07:44,045
是用電腦圖形產生出來的

123
00:07:44,045 --> 00:07:46,970
我想這些圖形實際上相當不錯

124
00:07:46,970 --> 00:07:50,210
我可以想像
像這樣的合成照片

125
00:07:50,210 --> 00:07:54,510
您可以訓練相當好的
電腦視覺系統來偵測車子

126
00:07:54,510 --> 00:07:56,570
很不幸的，我在先前畫的

127
00:07:56,570 --> 00:08:00,740
圖形也適用這種設定

128
00:08:00,740 --> 00:08:05,075
或許這是所有車子的集合

129
00:08:05,075 --> 00:08:10,200
如果您只合成一組
小的子集的這些車子

130
00:08:10,200 --> 00:08:12,775
對於人眼而言

131
00:08:12,775 --> 00:08:15,145
或許這些合成影像
看起來不錯

132
00:08:15,145 --> 00:08:18,985
但您可能過適於
這一組您合成的小集合

133
00:08:18,985 --> 00:08:23,590
特別是，很多人單獨提出

134
00:08:23,590 --> 00:08:26,950
一旦您發現一些電腦遊戲
有很好的電腦圖形汽車

135
00:08:26,950 --> 00:08:31,115
只從這裡面抓取
很大量的車子的資料集

136
00:08:31,115 --> 00:08:33,805
實際上您看這些電腦遊戲

137
00:08:33,805 --> 00:08:38,065
如果這個電腦遊戲
只有 20 種汽車在遊戲中

138
00:08:38,065 --> 00:08:39,700
那這個電腦遊戲看起來很好

139
00:08:39,700 --> 00:08:42,190
因為當您在電腦遊戲中駕駛，您看

140
00:08:42,190 --> 00:08:47,065
這其他 20 種汽車，
它們看起像是很真實的模擬

141
00:08:47,065 --> 00:08:51,715
但這個世界有遠大於
這 20 種單獨設計的汽車

142
00:08:51,715 --> 00:08:56,200
而如果您整個合成訓練集
只有這 20 種不同的車子

143
00:08:56,200 --> 00:09:00,485
那您的神經網路很可能
過適於這 20 種車子

144
00:09:00,485 --> 00:09:03,985
而這很難
讓人類輕易理解

145
00:09:03,985 --> 00:09:06,130
即使這些影像
看起來很真實

146
00:09:06,130 --> 00:09:11,780
您真的只包含了
所有可能車子中的很小一部份

147
00:09:11,780 --> 00:09:15,310
所以總結一下，
如果您有資料不匹配問題

148
00:09:15,310 --> 00:09:17,640
我建議您做誤差分析

149
00:09:17,640 --> 00:09:18,820
或者看一下訓練集

150
00:09:18,820 --> 00:09:20,785
或者看一下開發集，試著去發現

151
00:09:20,785 --> 00:09:24,685
試著去獲得一些洞見
來看這兩種分佈如何不同？

152
00:09:24,685 --> 00:09:26,950
然後看看是否您可以發現一些方式來

153
00:09:26,950 --> 00:09:30,025
獲得更多的訓練資料
比較接近一些開發集

154
00:09:30,025 --> 00:09:33,185
我們談到的一種方式是
人工資料合成

155
00:09:33,185 --> 00:09:35,515
而人工資料合成是可行的

156
00:09:35,515 --> 00:09:39,630
在語音辨識中，我看到人工資料合成明顯的

157
00:09:39,630 --> 00:09:43,870
提高了我們已經做得很棒的
語音辨識系統的表現

158
00:09:43,870 --> 00:09:45,505
所以，它是可行的

159
00:09:45,505 --> 00:09:47,675
但，如果您使用了人工資料合成

160
00:09:47,675 --> 00:09:51,505
要小心跟注意
是否您會不經意的

161
00:09:51,505 --> 00:09:57,105
只從空間上一小部分子集來的
模擬資料

162
00:09:57,105 --> 00:10:01,990
所以這是如何處理資料不匹配

163
00:10:01,990 --> 00:10:04,690
接下來，我想分享您一些想法

164
00:10:04,690 --> 00:10:08,390
如何同時來學習不同種類的資料