如果训练集的分布 与你的开发集和测试集的分布不同 并且如果误差分析表明出现了数据不匹配的问题
你该怎么解决？ 当然这个问题有系统的解决方案 但是先看看我们怎么尝试解决 如果发现出现了严重的数据不匹配问题 我通常会人工地分析误差 并且试着去理解训练集与开发/测试集之间的差异 为了避免测试集上的过拟合 技术上对误差分析来说 你的关注点应该只是开发集而不是测试集 但举一个具体的例子 当你在构建语音激活后视镜的应用时, 你可以看，但我想这些是语音， 那就去听开发集中的样本 弄明白开发集和你的训练集有什么不同 比如说，你可能发现 开发集中的许多样本的噪声很大
并且有大量的车辆噪音 这是开发集不同于你测试集的一个方面 也许你会发现其他类型的错误 例如,在语音激活后视镜应用中 你会发现它经常错误地识别 街道号码,这是因为 很多的导航查询需要街道地址。 因此,正确地获取街道号码是非常重要的。 当你研究开发集误差的本质时 或当观察开发集 跟训练集相比，存在怎样的差异或者难点时 你所能做的就是想方设法使训练集更为相似 或者也可以收集更多与开发测试集较为相似的数据 比方说，如果你发现
车辆的背景噪声是主要的误差来源 你可以模拟出车载噪声数据 下张幻灯片将阐述更多操作方法 或者当你发现你不能识别街道号码时 也许你可以收集关于说话人数的数据 并收入你的测试集 我认为这张幻灯片可以给你的尝试提供了一个粗略的方案 但这不是一个系统化的过程并且 我认为不能保证你获得所需的见解以取得进展 但是我发现这人为的观察 能使数据在我们所关心的维度上具有更强的相似性 这对很多问题都有帮助 因此，如果你的目标是使训练集与开发集更加相似 这样有什么解决方法呢？ 其中一个方法是你可以通过 人工数据合成 让我们在解决汽车噪声问题的背景下讨论这个问题。 构建一个语音识别系统， 你可能没有足够的车载音频数据 伴随车外的背景噪声 高速公路的背景噪声等等 实际上有一种人工合成的方法 所以,假设你已经记录了 大量干净的、没有车辆背景噪声的音频 这个是你的训练集中的一个示例 而且，这个句子经常用在AI测试上 因为这个短句包含了A到Z所有字母 所以你会经常看到这个句子 但是，基于音频“快速的棕色狐狸跳过懒狗” 你也可以得到这样的汽车噪声 这就是汽车内部的声音 如果你安静地开车 如果你把这两个音频剪辑加在一起 你可以合成出 “快速的棕色狐狸跳过懒狗”的声音 如果你在嘈杂的车厢里说这句话
将听起来像这样 因此,这是一个相对简单的音频合成示例 实际上,你可以合成其他音频效果,比如 回响,这是你的声音 在汽车内壁上来回震动 但通过人工合成数据 你可以够快速创建更多的数据 听起来就好比不需要出门收集得到的车载音频 也许数千或数万小时的车内音频数据 是从实际驾车时获取的 因此,如果你的误差分析显示你应该尝试 让你的数据听起来更像是在车里记录的， 那么这个过程能够让你合理地 合成这类型的数据，提供给你的训练算法。 现在有一点关于人工数据合成 我想提出注意的是 比如说，有在安静的背景下
记录的1万小时的数据 并且其中有一个小时伴随着汽车噪声 你可以尝试将这一个小时的 汽车噪声反复循环1万次 目的是叠加这1万个小时在
安静背景的音频数据 如果你这样做，人耳听起来会觉得不错， 但是这里有可能 会使学习算法对这一小时的
汽车噪声造成过度拟合 特别的是,如果这组音频 能够在汽车中收集 或者这组音频的背景噪声是你所能想象的 如果你只有一个小时的汽车噪音背景 你可能只会模拟这其中很小的一个子集 从而只从这个很小的子集进行合成 对于人类的听觉来说 这些音频没有任何问题，因为一小时的汽车噪音 听起来和其他时段的汽车噪音没有区别 但是，有可能从这个很小的子集进行合成 这个神经网络可能 会造成那一个小时的汽车噪音过拟合 我不了解低成本地收集一万小时的 汽车噪声数据的可行性有多大 以便你不用不断地重复一小时的汽车噪音 而是使用1万小时的不重复的 汽车噪声去叠加到1万小时的
安静背景音频。 虽然不能保证可行性 但是确实是有可能去使用
一万小时的汽车噪声而不是那仅仅一小时 这样通过学习算法可以提高性能。 并且对于人类听觉来说
人工数据合成是一个挑战 在你的听觉看来 这一万小时的声音和一小时没有区别 因此你可能就不会再 毫无意识地从更小的子集中 合成数据集 这里是另一个人工数据合成的例子 比方说你在构建自动驾驶车辆 并且你想检测出这样的一辆车并用矩形框圈出 很多人讨论的一个想法是 为什么要用计算机图形学来模拟大量的汽车图片 事实上,这里有几张 由计算机图形学来生成的汽车的图片 我认为这些图形的效果是相当不错的 我能想象，通过合成像这样的图片 你可以训练一个优秀的计算机视觉系统来检测车辆 不幸的是，我在前面幻灯片画出的图片 可以再一次应用到这个设定中 可能这是所有汽车的一个子集并且 如果你对这些汽车中非常小的子集进行合成 那么可能对人眼来说 这些合成的图像看上去没问题 但是可能会对这个子集造成过拟合的问题 特别的是，很多人纷纷提出一个想法 一旦你发现一个电子游戏
具有良好的汽车计算机图形 并捕捉汽车图像
获得一个庞大的汽车图片数据集 事实证明，如果你在看在电子游戏 如果在电子游戏中有20辆各异的汽车 那么电子游戏看起来没问题 因为你在电子游戏中驾驶汽车 同时看到另外20辆汽车
这看起来像一个相当接近现实的模拟 但是现实中的汽车模型远多于20种 并且如果你所合成的训练集中只包含20种汽车 那么你的神经网络可能会对这20种汽车过拟合 即使这些图像看起来很现实 对于一个人来说也很难轻易辨别出来 但实际上，你确实只涵盖了
所有汽车的很小的一部分 因此，总得来说，如果你认为
你遇到了数据不匹配的问题 我推荐你做误差分析 或者观察一下训练集 或者观察一下开发集 以便试图深入了解这两种数据分布的不同所在 你可以设法来获得更多的 看起来更像你的开发集的训练数据 我们所讨论的一种方法是人工数据合成 并且人工数据合成的确能起到作用 在语音识别方面，我已经看到人工数据合成 显着提升了已经非常好的语音识别系统的性能 所以这种方法很好 但如果你使用人工数据合成 你必须小心并且记住，你是否可能意外地 模拟了所有可能样本的子集中的数据 这就是如何处理数据不匹配的问题 接下来，我想与你分享一些想法 关于如何同时从多种类型的数据中学习
GTC字幕组翻译