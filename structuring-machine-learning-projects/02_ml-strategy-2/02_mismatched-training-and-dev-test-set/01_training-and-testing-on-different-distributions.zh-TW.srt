1
00:00:00,560 --> 00:00:04,440
深度學習演算法對於
訓練資料極度飢渴

2
00:00:04,440 --> 00:00:06,970
當您可以找到足夠的

3
00:00:06,970 --> 00:00:10,294
標籤練資料放在訓練集
它們通常會作用得很好

4
00:00:10,294 --> 00:00:14,154
這已經造成在許多團隊有時候
採用不管您可以找到什麼樣的資料

5
00:00:14,154 --> 00:00:18,120
只為了將更多資料擠進訓練集

6
00:00:18,120 --> 00:00:21,720
即使一些資料，甚至於很多資料

7
00:00:21,720 --> 00:00:25,870
不同於您的開發跟測試集的分佈

8
00:00:25,870 --> 00:00:30,330
所以在深度學習時代
越來越多的團隊現在訓練用的資料

9
00:00:30,330 --> 00:00:34,325
來自於跟您的開發跟測試集
不同的分佈

10
00:00:34,325 --> 00:00:37,385
有一些細節
跟一些最佳做法來

11
00:00:37,385 --> 00:00:41,825
處理您的訓練跟測試
來自於不同的分佈

12
00:00:41,825 --> 00:00:43,315
讓我們來看看

13
00:00:43,315 --> 00:00:48,630
假設您正建立一個行動應用，使用者上傳

14
00:00:48,630 --> 00:00:51,970
從他們的手機拍攝的照片
您想要辨識這些片

15
00:00:51,970 --> 00:00:56,470
您的使用者從行動應用
上傳的照片是不是貓的照片

16
00:00:56,470 --> 00:00:59,580
所以您會得到兩種資料來源

17
00:00:59,580 --> 00:01:03,940
一種是您真正關心的資料
來源是手機應用程式

18
00:01:03,940 --> 00:01:07,940
像是右邊這種
往往比較不是專業的拍照

19
00:01:07,940 --> 00:01:12,800
比較不好的取景, 甚至模糊,
因為它是由業餘使用者拍攝

20
00:01:12,800 --> 00:01:16,760
另外一種您可取得的資料是
您可以爬網路下載

21
00:01:16,760 --> 00:01:21,635
很多，以這個例子而言
您可以下載很多

22
00:01:21,635 --> 00:01:27,250
專業的取景，高解析度
專業的貓攝影

23
00:01:27,250 --> 00:01:29,950
假設說您的行動應用
還沒有很多的使用者

24
00:01:29,950 --> 00:01:35,632
或許您拿到 10,000 張照片
從行動應用上傳而來

25
00:01:35,632 --> 00:01:40,320
但用爬網路的方式
您可以下載大量的貓照片

26
00:01:40,320 --> 00:01:45,322
或許您有 200,000 張貓照片
 從網路下載來

27
00:01:48,079 --> 00:01:53,296
而您真正關心的是
在您的最終系統

28
00:01:53,296 --> 00:01:58,311
在手機應用的照片分佈
可以作用得很好，是吧

29
00:01:58,311 --> 00:02:01,594
因為最終，您的使用者會
上傳像右邊這樣的照片

30
00:02:01,594 --> 00:02:04,230
而您需要您的分類器在
這樣的照片作用得很好

31
00:02:04,230 --> 00:02:08,500
但您現在有一點矛盾
因為您有相對較小的

32
00:02:08,500 --> 00:02:12,970
資料集，只有 10,000 個例子
從這樣的分佈取出

33
00:02:12,970 --> 00:02:16,754
而您有更大的資料集
從另一種分佈取出

34
00:02:16,754 --> 00:02:19,986
比起您想要的
有不同的樣貌的照片

35
00:02:19,986 --> 00:02:24,505
您不想只用這 10,000 張照片
 因為這會導致

36
00:02:24,505 --> 00:02:27,330
給您相對小的訓練集

37
00:02:28,466 --> 00:02:31,724
使用這些 200,000 影像應該有幫助

38
00:02:31,724 --> 00:02:37,550
但矛盾的是這些 200,000 影像
並不真正是從您要的分佈來的

39
00:02:37,550 --> 00:02:38,496
您要怎麼做？

40
00:02:38,496 --> 00:02:43,340
這裡有一種選擇

41
00:02:43,340 --> 00:02:47,669
您可以將這些資料集放一起

42
00:02:47,669 --> 00:02:50,910
總共有 210,000 個影像

43
00:02:50,910 --> 00:02:56,835
而您可以拿這 210,000 影像

44
00:02:56,835 --> 00:03:03,470
隨機洗牌成為
訓練，開發跟測試集

45
00:03:03,470 --> 00:03:07,020
為了方便解釋起見
您決定您的開發

46
00:03:07,020 --> 00:03:11,380
跟測試集會是各 2,500 

47
00:03:11,380 --> 00:03:16,360
所以您的訓練集會是 
205,000 個例子

48
00:03:17,450 --> 00:03:23,520
用這樣的設定有一些
好處跟壞處

49
00:03:23,520 --> 00:03:26,910
好處是現在您的訓練，開發跟測試集

50
00:03:26,910 --> 00:03:30,400
來自於同一個分佈
所以比較容易管理

51
00:03:30,400 --> 00:03:33,470
但壞處是
這是一個大壞處

52
00:03:33,470 --> 00:03:38,010
如果您看您的開發集的這 2,500例子

53
00:03:38,010 --> 00:03:43,570
很多來自於網頁分佈的影像

54
00:03:43,570 --> 00:03:46,660
而不是您真正關心的
從行動應用來的影像分佈

55
00:03:48,520 --> 00:03:53,150
實際上您所有的資料 210,000 中的 200,000

56
00:03:53,150 --> 00:03:57,309
我將 200,000 縮寫成 200K

57
00:03:57,309 --> 00:04:01,169
我將 210,000 縮寫成 210k 
是從網頁來的

58
00:04:01,169 --> 00:04:06,951
所以這 2,500 個例子

59
00:04:06,951 --> 00:04:13,430
我期望約 2,381 個例子從網頁來的

60
00:04:13,430 --> 00:04:17,580
這是期望值，真正的值會

61
00:04:17,580 --> 00:04:20,290
根據隨機洗牌時運算產生

62
00:04:20,290 --> 00:04:25,250
但平均而言，
只有約 119 個例子會從行動應用上載

63
00:04:27,600 --> 00:04:32,630
記得設定您的開發集
是為了告訴您的團隊

64
00:04:32,630 --> 00:04:33,800
哪邊是您們的目標

65
00:04:33,800 --> 00:04:35,150
而注意您們目標的方式是

66
00:04:35,150 --> 00:04:38,080
您們花了大部分的時間在最佳化於

67
00:04:38,080 --> 00:04:41,550
網頁分佈的影像，
這不是您真正要的

68
00:04:42,780 --> 00:04:45,430
所以我建議反對使用第一種選項

69
00:04:45,430 --> 00:04:50,010
因為這是設定您的開發集來
告訴您的團隊最佳化於

70
00:04:50,010 --> 00:04:53,160
不同分佈的資料，
而不是您真正關心的

71
00:04:54,210 --> 00:04:56,018
所以與其使用這種方式

72
00:04:56,018 --> 00:05:01,704
我會建議您採用另一種選項如下

73
00:05:01,704 --> 00:05:08,487
訓練集，假設依然是 205,000 影像

74
00:05:08,487 --> 00:05:15,985
我會在訓練集使用所有
來自於網頁的 200,00 影像

75
00:05:15,985 --> 00:05:21,970
而如果您要的話，
您可以把 5,000 從行動應用上載的影像加入

76
00:05:21,970 --> 00:05:24,344
而對於開發跟測試集

77
00:05:24,344 --> 00:05:27,599
我想我的資料集畫的比例不太好

78
00:05:27,599 --> 00:05:34,993
您的開發跟測試集
會全部都是從行動應用來的

79
00:05:38,870 --> 00:05:44,405
所以訓練集會包含 200,000 從網頁來的影像

80
00:05:44,405 --> 00:05:46,560
5,000 從行動應用來的

81
00:05:46,560 --> 00:05:51,990
開發集會是 2,500 從行動應用來的影像

82
00:05:51,990 --> 00:05:58,680
測試集也會是 2,500 從行動應用來的影像

83
00:05:58,680 --> 00:06:03,480
用這樣的方式來拆您的資料
變成訓練，開發跟測試的好處是

84
00:06:03,480 --> 00:06:07,410
您現在的目標會
是您真正要的

85
00:06:07,410 --> 00:06:12,930
您告訴您的團隊，我的開發集的資料
來自於行動應用的上載

86
00:06:12,930 --> 00:06:15,570
那是您真正關心的影像分佈

87
00:06:15,570 --> 00:06:19,110
讓我們來建立一個機器學系系統，真的在

88
00:06:19,110 --> 00:06:21,750
行動應用的影像分佈
作用得很好

89
00:06:21,750 --> 00:06:25,190
壞處是，當然是
現在您的訓練

90
00:06:25,190 --> 00:06:30,870
分佈不同於您的
開發跟測試分佈

91
00:06:30,870 --> 00:06:34,724
然而實際上這樣的分拆資料
成為訓練，開發

92
00:06:34,724 --> 00:06:38,227
跟測試長期而言
會給您較佳的表現

93
00:06:38,227 --> 00:06:42,475
我們會在以後談論一些特定的技巧
來應付您的

94
00:06:42,475 --> 00:06:47,160
訓練集跟開發，測試集
來自於不同的分佈

95
00:06:47,160 --> 00:06:49,110
讓我們看另一個例子

96
00:06:49,110 --> 00:06:53,553
假設您正建立一個全新的產品

97
00:06:53,553 --> 00:06:58,610
一種汽車後視鏡的
語音啟動應用

98
00:06:58,610 --> 00:07:01,368
這是真正在中國的產品

99
00:07:01,368 --> 00:07:05,668
它正朝著其他國家輸出，
但您可以建立一個後視鏡

100
00:07:05,668 --> 00:07:10,034
取代原本的這個小東西，
而您可以跟後視鏡對話

101
00:07:10,034 --> 00:07:13,488
基本上可以說，
後視鏡，請幫我

102
00:07:13,488 --> 00:07:17,760
導航到最近的加油站，
而它會依照辦理

103
00:07:19,620 --> 00:07:22,750
這是一個真正的產品，假設您也試著

104
00:07:22,750 --> 00:07:23,530
在您的國家做這樣的產品

105
00:07:27,160 --> 00:07:31,720
您要如何獲取資料來
訓練語音辨識系統

106
00:07:31,720 --> 00:07:32,489
對於這種產品

107
00:07:32,489 --> 00:07:36,137
或許您已經在語音辨識
工作很長一段時間

108
00:07:36,137 --> 00:07:39,785
您有很多的資料
來自於其他語音辨識應用

109
00:07:39,785 --> 00:07:43,185
只是沒有來自於
後視鏡語音啟動應用

110
00:07:43,185 --> 00:07:47,164
您可以這樣來分拆您的
訓練跟開發，測試集

111
00:07:47,164 --> 00:07:50,780
對於訓練，您可以拿
所有您的語音資料

112
00:07:50,780 --> 00:07:54,180
您從其他語音問題累積的資料，像是

113
00:07:54,180 --> 00:07:59,060
您多年以來從不同的
語音辨識資料商購買的

114
00:07:59,060 --> 00:08:03,410
今日您真的可以從供應商
買到 x,y 成對資料

115
00:08:03,410 --> 00:08:06,130
而 x 是語音檔而 y 是語音對照的文字

116
00:08:06,130 --> 00:08:10,832
或者您可以用智慧揚聲器，
智慧語音啟動揚聲器

117
00:08:10,832 --> 00:08:12,990
您可以從那裏
獲得一些資料

118
00:08:12,990 --> 00:08:17,040
或許您可以從語音啟動鍵盤
來獲取一些資料

119
00:08:17,040 --> 00:08:21,515
方便討論起見，或許您有 500,000

120
00:08:21,515 --> 00:08:25,330
聲音從所有這些來源

121
00:08:25,330 --> 00:08:30,078
而對於您的開發跟測試集，
或許您有較少的資料集

122
00:08:30,078 --> 00:08:33,892
實際上從語音啟動後視鏡得到的

123
00:08:34,950 --> 00:08:38,316
因為會有使用者詢問
對於導航查詢

124
00:08:38,316 --> 00:08:41,590
或者試著尋找不同地點的方向等等

125
00:08:41,590 --> 00:08:46,560
這種資料集或許有很多的
像是街道，地址等等

126
00:08:46,560 --> 00:08:49,250
請幫我導航到這個街道位址，或者

127
00:08:49,250 --> 00:08:51,980
請幫我導航到加油站

128
00:08:51,980 --> 00:08:56,040
所以這種資料分佈會
非常不同於在左邊的資料

129
00:08:58,140 --> 00:09:01,780
但這資料是您真正關心的，
因為您要您的

130
00:09:01,780 --> 00:09:08,082
產品在這種資料作用得很好，
所以您這樣設定您的開發跟測試集

131
00:09:08,082 --> 00:09:12,868
所以您在這個例子
設定了您的訓練集為

132
00:09:12,868 --> 00:09:16,960
在左邊的 500,000 語音，而

133
00:09:16,960 --> 00:09:21,847
您的開發跟測試集，我用 D 跟 T 縮寫

134
00:09:21,847 --> 00:09:26,380
這些可能會是每種 10,000 語音

135
00:09:26,380 --> 00:09:31,064
是從真正的語音啟動後視鏡取得的

136
00:09:31,064 --> 00:09:35,600
或者，如果您覺得您不需要將所有 20,000 個例子

137
00:09:35,600 --> 00:09:38,498
從語音啟動後視鏡取得的放進開發跟

138
00:09:38,498 --> 00:09:42,470
測試集中，或許您可以拿一半放在訓練集

139
00:09:43,730 --> 00:09:49,085
這樣訓練集會有 510,000 語音

140
00:09:49,085 --> 00:09:55,662
包含了 這裡的 500k 跟 10,000 從後視鏡取得

141
00:09:58,046 --> 00:10:04,500
而開發跟測試集會有 5,000 個語音

142
00:10:04,500 --> 00:10:09,934
所以對於這 20,000 語音，或許 10k 到訓練集

143
00:10:09,934 --> 00:10:14,490
5k 到開發集，而 5,000 個到測試集

144
00:10:14,490 --> 00:10:18,870
所以這會是一種合理的方式來分拆您的資料成為

145
00:10:18,870 --> 00:10:20,360
訓練，開發跟測試

146
00:10:20,360 --> 00:10:26,258
而這會給您大很多的訓練集，
超過 500,000 個語音，

147
00:10:26,258 --> 00:10:31,297
比起您只用從語音啟動後視鏡
得到的資料來當訓練集

148
00:10:31,297 --> 00:10:35,880
在這段影片中，您看到一些例子，允許讓您在

149
00:10:35,880 --> 00:10:38,790
訓練集資料使用跟
開發，測試來自於不同的分佈

150
00:10:38,790 --> 00:10:41,980
讓您可以有更多的訓練資料

151
00:10:41,980 --> 00:10:45,990
在這些例子，會讓您的訓練算法表現更佳

152
00:10:45,990 --> 00:10:50,100
一個問題或許您會問，您是否總會用到所有您有的資料？

153
00:10:50,100 --> 00:10:52,850
這答案很微妙，並不總是這樣

154
00:10:52,850 --> 00:10:54,910
我們在下段影片看一些反例