Diyelim ki bir makine öğrenmesi sistemi inşa ediyorsunuz uçtan-uca bir yaklaşım kullanıp kullanmayacağınıza karar vermeye çalıştığınız Bazı artılarına ve eksilerine bir göz atalım uçtan-uca derin öğrenmenin böylece bazı yönergeler elde edersiniz uçtan-uca bir yaklaşımın sizin uygulamanız için uygun olup olmadığına dair Uçtan-uca öğrenme uygulamanın bazı faydaları şunlardır. İlk olarak uçtan-uca öğrenme gerçekten verinin konuşmasına imkan verir. Dolayısıyla yeteri kadar X, Y verisine sahipseniz, X'den Y'ye haritalandırma yapmak için en uygun fonksiyon ne olursa olsun, eğer yeteri kadar büyük bir sinir ağını eğitiyorsanız, umulur ki sinir ağı bir yolunu bulacaktır. Ve yalın bir makine öğrenimi yaklaşımı ile, X'den Y'ye girdi öğrenen sinir ağınız veride yer alan her istatistiği insan önyargıları ile zorlanmasına göre daha iyi elde edebilir. Örneğin, bir konuşma tanıma vakasında, daha önceki konuşma sistemlerinde C, A ve T gibi basit bir ses birimi olan bir fonem vardı kedi (cat) kelimesi için Ve ben fonemlerin insan dil bilimciler tarafından oluşturulmuş yapay bir olgu olduğunu düşünüyorum. Aslında öyle düşünüyorum ki fonemler dil bilimcilerin dil için makul bir tanımlama olan bir fantezisi, fakat sizin öğrenme algoritmanızı fonemler içinde düşünmeye zorlamak istediğiniz belli değil. Ve eğer algoritmanıza istediği simgelemeyi öğrenmesi için izin verirseniz fonemleri bir simgeleme olarak kullanmasına zorlamak yerine, tüm performansı daha iyi sonuçlanabilecektir. Uçtan-uca derin öğrenmenin ikinci faydası, bileşenlerin manuel tasarlanmasını daha az gerektirmesidir. Ve bu böylece sizin tasarlayacağınız iş akışını, özellikleri, bu ara simgeleri manuel tasarlamak için çok fazla zaman harcamanız gerekmeyeceğinden basitleştirebilecektir. Dezavantajlarına ne desiniz? İşte bazı dezavantajları. İlk olarak, büyük miktarda veri gerektirebilir. Çünkü X'den Y'ye haritalamayı doğrudan öğrenmek için birçok X verisine, Y verisine ihtiyaç duyabilirsiniz ve önceki bir videoda alt görevler için birçok veriyi nereden elde edebileceğinizi görüyorduk. Örneğin yüz tanıma, yüzü bir kez bulduktan sonra onu tanımlamak için birçok veri bulabileceğimiz gibi resim içindeki bir yüzü bulmak için de birçok veri bulabiliriz, fakat tüm uçtan-uca görev için daha az veri ulaşılabilirdir. Yani X, uçtan-uca öğrenmenin girdi ucu ve Y de çıktı ucudur. Ve bu yüzden tüm X Y verisine bu sistemleri eğitmek için hem girdi ucu hem de çıktı ucu ile ihtiyaç duyacaksınız, ve bu yüzden buna uçtan-uca öğrenmenin değeri diyoruz çünkü sistemin bir ucundan sonuna kadar sitemin diğer ucuna doğrudan bir haritalama öğreniyorsunuz. Diğer bir dezavantajı da potansiyel olarak faydalı olabilecek elle tasarlanmış bileşenleri dahil etmemesidir. Bu yüzden makine öğrenmesi araştırmacıları bir şeylerin elle tasarlanmasının aleyhinde konuşma eğilimindedirler. Fakat çok fazla veriye sahip değilseniz, o zaman öğrenme algoritmanız, eğitim kümeniz küçükse, verinizden elde edebileceği çok fazla sezgiye sahip değildir. Ve bu yüzden bir bileşeni elle tasarlamak manuel bilgiyi algoritmaya aktarmak için gerçekten iyi bir yol olabilir, ve bu her zaman kötü bir şey değildir. Öğrenme algoritmalarının iki temel bilgi kaynağı olduğunu düşünüyorum. Bir tanesi veri ve diğeri de elle tasarladığınız herşey, bileşenleri, veya özellikleri, veya diğer şeyler. Ve bu yüzden bir yığın veriye sahip olduğunuzda, bir şeyleri elle tasarlamak daha az önemli fakat o kadar çok veriye sahip olmadığınızda, o zaman dikkatlice elle tasarlanmış bir sisteme sahip olmak gerçekten insanların problem hakkında bir çok bilgiyi algoritmaya aktarmasına imkan verebilir ve bu oldukça faydalı olmalı. Yani uçtan-uca derin öğrenmenin dezavantajlarından biri potansiyel olarak faydalı olan elle tasarlanmış bileşenleri hariç tutmasıdır. Ve elle tasarlanmış bileşenler iyi tasarlanmışlarsa çok faydalı olabilirler. Eğer performansınızı kısıtlıyorsa gerçekten zararlı olabilir, örneğin bir algoritmayı fonemler içinde düşünmeye zorlarsanız kendi kendine daha iyi bir simge keşfettiğinde. Yani bu bir çeşit iki ucu keskin kılıçtır zarar verebilen veya yardımcı olabilen fakat daha ziyade yardım etmeye meyillidir, elle tasarlanmış bileşenler küçük bir eğitim kümesi üzerinde eğitim yaptığınızda yardım etmeye meyillidir. Yani yeni bir makine öğrenmesi sistemi inşa ediyorsanız ve uçtan-uca derin öğrenme kullanıp kullanmamaya karar vermeye çalışıyorsanız, bana göre anahtar soru, yetecek kadar veriye sahip misiniz? X'den Y'ye haritalama yapmak için gerekli olan karmaşıklıktaki fonksiyonu öğrenmeye Bu ifade için yapısal bir tanımım yok, karmaşıklık gereklidir, fakat sezgisel olarak, X'den Y'ye bir fonksiyon öğrenmeye çalışıyorsanız, bu bunun gibi bir resime bakmaktır ve resimdeki kemiklerin pozisyonunu algılamaktır o zaman belki bu nispeten kolay bir problem gibi gözükebilir resimdeki kemiklerin tanımlanması ve belki bu görev için o kadar çok veriye ihtiyaç duyacaklar. Veya bir insan fotoğrafı verildiğinde, belki resimdeki o kişinin yüzünü bulmak çok zor bir problem gibi gözükmez, yani bir insanın yüzünü bulmak için çok fazla veriye ihtiyaç duymazsınız. Veya en azından o görevi çözmek için yeteri kadar veri bulabilirsiniz, ele bakıp doğrudan çocuğun yaşı ile eşleştirmek için gerekli olan fonksiyonla ters olarak, daha karmaşık bir problem gibi gözüken eğer yalın bir uçtan-uca derin öğrenme yaklaşımı uyguluyorsanız sezgisel olarak öğrenmek için daha çok veriye ihtiyaç duyacağınız Daha karmaşık bir örnekle bu videoyu bitirelim. Belki biliyorsunuzdur, yardım etmek için zaman harcıyorum. bir otonom sürüş şirketine, Drive.ai Yani aslında otonom sürüş konusunda çok heyecanlıyım. Kendi kendini süren bir arabayı nasıl yaparsınız? Yapabileceğiniz şeylerden biri burada, ve bu uçtan-uca bir öğrenme yaklaşımı değil. Arabanızın önünde yer alan şeyin bir resmini girdi olarak alabilirsiniz, radar, ışık, diğer sensör okuyucuları da, fakat tanımları basitleştirmek için, arabanızın önünde veya etrafında yer alan şeylerin bir fotoğrafını çektiğinizi söyleyelim. Ve sonra arabanızı güvenli bir şekilde sürmek için diğer arabaları ve yayaları tespit etmelisiniz. Elbette diğer şeyleri de tespit etmelisiniz, fakat burada sadece basitleştirilmiş bir örnek vereceğiz. Diğer arabaların ve yayaların nerede olduğunu tespit ettiğinizde, kendi rotanızı planlamanız gerekmektedir. Diğer bir deyişle, diğer arabaların, yayaların nerede olduğunu görürseniz, kendi arabanızı nasıl yönlendireceğinize karar vermeniz gerekir, sonraki birkaç saniye için arabanızı hangi yola yönlendireceğinize. Ve belli bir yola süreceğinize karar verdiğinizde, belki bu bir yolun tepeden aşağı bir görünüşü ve sizin arabanızdır. Belki o yola sürmeye karar verdiniz, bu bir rotadır, sonra uygun yönlendirmeyi oluşturarak bunu uygulamanız gerekir, gaza basma ve frene basma komutları gibi. Yani arabaları ve yayaları tespit etmek için resminiz veya sensör girdileriniz üzerinden gidildiğinde, derin öğrenme kullanılarak oldukça iyi bir şekilde yapılabilir, fakat sonra diğer arabaların ve yayaların nereye gidiyor olduğunu tespit ederken, arabanızı tam olarak hareket ettirmek istediğiniz bu rotayı seçmek genelde derin öğrenme ile yapılmaz. Bunun yerine bu Hareket Planlama (Motion Planning) isminde bir yazılım ile yapılır. Ve eğer robotik konusunda bir ders alırsanız hareket planlama konusunu öğreneceksiniz. Ve sonra arabanızı hangi yol boyunca yönlendirmek istediğinize karar verdiğinizde, orada başka algoritma da olacaktır, bunun kesin kararı veren bir kontrol algoritmasını olduğunu söyleyeceğiz, direksiyonu ne kadar çevireceğine ve gaza veya frene ne kadar basacağına karar veren. Bana göre bu örneğin gösterdiği şey, bazı bireysel bileşenleri öğrenmek için makine öğrenmesi veya derin öğrenme kullanmak istersiniz ve denetimli öğrenmeyi uygularken X'den Y'ye hangi tipte eşleştirme öğrenmek istediğinizi dikkatli bir şekilde seçmelisiniz. hangi görev için veri elde edebileceğinize bağlı olarak Buna karşılık, yalın bir uçtan-uca derin öğrenme yaklaşımı hakkında konuşmak heyecan vericidir resmi girdi olarak verdiğiniz ve doğrudan bir yönlendirme çıktısı aldığınız. Fakat mevcut veri ulaşılabilirliği ve bugün sinir ağları ile öğrenebildiğimiz şeylerin tipleri ile, bu aslında en umut vadeden yaklaşım değildir veya bana göre takımların en iyi sonuçları aldığı yaklaşım değildir. Ve bence bu uçtan-uca derin öğrenme yaklaşımı aslında bu gibi daha karmaşık yaklaşımlara göre daha az umut vadeder, mevcut veri ulaşılabilirliği ve bugünkü sinir ağlarını eğitme kabiliyetimiz ile. Evet uçtan-uca derin öğrenme yaklaşımı böyle. Bazen gerçekten iyi çalışabilir fakat uçtan-uca derin öğrenmeyi nereye uyguladığınıza dikkat etmelisiniz. Son olarak, benimle buraya kadar geldiğiniz için teşekkürler ve tebrikler. Eğer geçen haftanın ve bu haftanın videolarını bitirirseniz daha akıllı ve stratejik olacağınızı düşünüyorum. ve iyi önceliklendirme kararlarını daha iyi vereceğinizi makine öğrenmesi projenizde nasıl ilerleyeceğinize dair, hatta birçok makine öğrenmesi mühendisiyle ve burada Silikon Vadisi'nde gördüğüm araştırmacıyla karşılaştırıldığında Dolayısıyla buraya kadar öğrendiğiniz herşey için tebrikler ve bu haftanın ödev problemlerine bir göz atacağınızı umuyorum size bu fikirlerle alıştırma yapmak ve onlara hakim olmanızı sağlamak için diğer bir fırsat verecek