1
00:00:00,000 --> 00:00:04,182
만약 여러분이 완전 새로운 러닝 어플을 작업하고 계신다면,

2
00:00:04,182 --> 00:00:06,840
제가 개인적으로 사람들에게 조언드리는 부분은, 

3
00:00:06,840 --> 00:00:11,005
첫번째 시스템을 먼저 빨리 만들고 반복테스트 업무를 진행하라는 것입니다.

4
00:00:11,005 --> 00:00:14,895
어떤 말인지 설명드리겠습니다. 저는 음성인식 기능 관련하여 수년간 작업했었는데요,

5
00:00:14,895 --> 00:00:18,385
만약 여러분이 새로운 음성인식 시스템을 만들 생각 중에 계시면,

6
00:00:18,385 --> 00:00:20,430
진행하는데 있어 여러가지 추진할 수 있는 방향이 있고

7
00:00:20,430 --> 00:00:22,976
또한 우선순위를 정할 수 있는 것들 또한 많습니다.

8
00:00:22,976 --> 00:00:25,590
예를 들어, 시끄러운 주변환경에서 강성으로 작동하는

9
00:00:25,590 --> 00:00:29,235
음성인식 시스템을 만들 수 있는 특정 테크닉이 있는데요. 

10
00:00:29,235 --> 00:00:32,340
시끄러운 주변환경이란, 커피숍에서의 소음,

11
00:00:32,340 --> 00:00:35,430
예를 들어, 여러 사람이 떠는는 환경, 또는 자동차 소음,

12
00:00:35,430 --> 00:00:38,930
고속도로에서 주행하는 자동차소리 등이 있겠습니다.

13
00:00:38,930 --> 00:00:43,440
억양이 포함된 음성이 더 잘 인식되게 하기 위한 여러가지 다양한 방법들이 있는데요.

14
00:00:43,440 --> 00:00:48,311
스피커가 마이크와 멀리 떨어져 있는 경우에 발생하는 구체적인 문제들이 있습니다.

15
00:00:48,311 --> 00:00:50,705
이런 것을 far-field speech recognition이라고 하는데요.

16
00:00:50,705 --> 00:00:53,610
특히 어린 유아들의 음성이 특별한 과제로 남습니다.

17
00:00:53,610 --> 00:00:56,535
유아들이 낱말 단어를 어떻게 발음하는지와 

18
00:00:56,535 --> 00:00:59,820
단어 선정에 있어서 말이죠.

19
00:00:59,820 --> 00:01:07,130
그리고 만약 스피커가 버벅거리거나 "oh"나 "um" 같은 의미가 없는 문구를 

20
00:01:07,130 --> 00:01:09,960
사용하는 경우, 더 자연스럽고 부드럽게 

21
00:01:09,960 --> 00:01:12,940
표기 스크립트 결과값을 만들기 위한 여러가지 방법이 

22
00:01:12,940 --> 00:01:15,310
있습니다.

23
00:01:15,310 --> 00:01:17,880
이러 것들이나 또는

24
00:01:17,880 --> 00:01:22,710
더 많은 방법을 통해 음성인식 시스템을 개선할 수 있습니다.

25
00:01:22,710 --> 00:01:26,693
더 일반적으로는, 거의 모든 머신 러닝 어플에서

26
00:01:26,693 --> 00:01:30,030
접근할 수 있는 50가지 다른 방향이 있을 수 있는데

27
00:01:30,030 --> 00:01:34,650
이런 방향들은 모두 합리적이고 시스템 개선에 도움이 될 수 있는 부분이라고
말할 수 있습니다.

28
00:01:34,650 --> 00:01:35,955
하지만 과제는,

29
00:01:35,955 --> 00:01:38,990
정확히 어떤 방법을 골라서 집중을 하느냐입니다.

30
00:01:38,990 --> 00:01:42,970
저도 물론 음성 인식 분야에서 다년간 업무를 해왔지만

31
00:01:42,970 --> 00:01:46,075
만약 제가 새로운 어플리케이션 도메인을 만드는 경우에는,

32
00:01:46,075 --> 00:01:48,730
문제에 대해서 시간을 갖고 생각하지 않는 이상

33
00:01:48,730 --> 00:01:52,625
쉽게 고르지 못할 것입니다.

34
00:01:52,625 --> 00:01:54,550
그러므로 제가 여러분께 권장드리는 것은

35
00:01:54,550 --> 00:01:58,570
만약 여러분이 완전히 새로운 러닝 어플을 만든다고 하면,

36
00:01:58,570 --> 00:02:02,277
첫번째 시스템을 빨리 만들고 반복 테스트를 진행하라고 말씀드리겠습니다.

37
00:02:02,277 --> 00:02:04,720
구체적으로 무슨 뜻이냐면,

38
00:02:04,720 --> 00:02:08,470
먼저 첫째로 가장 dev/test set와 그 매트릭을 셋업하라는 것입니다.

39
00:02:08,470 --> 00:02:12,360
이건 결국에 여러분이 어디에 목표를 둘지를 결정라는 과정입니다.

40
00:02:12,360 --> 00:02:14,560
만약 여러분이 틀린 경우, 언제든지 나중시점에 바꿀 수 있습니다.

41
00:02:14,560 --> 00:02:16,695
일단 먼저 그 목표를 어디든 설정을 하십시요.

42
00:02:16,695 --> 00:02:20,920
그 다음, 처음 머신 러닝 시스템을 만드는 것입니다.

43
00:02:20,920 --> 00:02:23,248
트레이닝 세트를 찾으시고, 트레이닝 시키고 결과를 지켜보십시요.

44
00:02:23,248 --> 00:02:25,180
여러분의 dev/test set 그리고 값과 매트릭을 상대로

45
00:02:25,180 --> 00:02:29,475
얼마나 잘 작동하는지 지켜보고 이해를 먼저 하십시요.

46
00:02:29,475 --> 00:02:32,633
여러분이 처음 시스템을 만들때,

47
00:02:32,633 --> 00:02:37,180
드디어 이전에 배웠던 편향/편차 분석에 관한 내용을 적용할 수 있습니다.

48
00:02:37,180 --> 00:02:42,470
이 내용은 몇개 이전 비디오에서 강의했었죠. 오류분석에 대한 내용과 함께요.

49
00:02:42,470 --> 00:02:45,260
다음 단계에 대한 우선순위를 정하기 위한 방법에 대해 배웠었습니다.

50
00:02:45,260 --> 00:02:49,320
특히, 오류 분석을 통해

51
00:02:49,320 --> 00:02:52,780
오류의 원인 상당부분이 스피커가 

52
00:02:52,780 --> 00:02:55,675
마이크로부터 멀리 떨어져 있어 발생하는 것이면 

53
00:02:55,675 --> 00:02:58,342
음성인식 기능이 취약하기도 한 부분인데요, 

54
00:02:58,342 --> 00:03:03,990
그러면 far-field speech recognition 라고 하는 테크닉에 

55
00:03:03,990 --> 00:03:06,640
집중할 만한 좋은 경우일 것입니다.

56
00:03:06,640 --> 00:03:10,865
far-field speech recognition 은 한마디로 얘기해서 스피커가 마이크와 멀리
떨어져 있을때 핸들링하는 경우를 이야기합니다.

57
00:03:10,865 --> 00:03:14,693
이 초기 이니셜 시스템을 도입하는 것의 가치를 제쳐두고

58
00:03:14,693 --> 00:03:16,737
도입이 빠르고 지저분할 수 있습니다.

59
00:03:16,737 --> 00:03:18,120
너무 많이 생각하지 마십시요. 

60
00:03:18,120 --> 00:03:22,690
하지만 초기 이니셜 시스템의 가치는 학습이 완료된 시스템의 구축,

61
00:03:22,690 --> 00:03:26,497
그리하여 학습완료된 시스템을 통해 편향/편차를 조절, 

62
00:03:26,497 --> 00:03:28,255
그리고 우선순위를 결정하는 것,

63
00:03:28,255 --> 00:03:30,270
오류 분석을 가능케하고,

64
00:03:30,270 --> 00:03:31,480
실수를 보고,

65
00:03:31,480 --> 00:03:34,630
이에 맞는 수많은 접근 방식과 방향성을 알아내서,

66
00:03:34,630 --> 00:03:37,822
어떤 부분이 가장 값어치가 있는지 알아내는 것입니다.

67
00:03:37,822 --> 00:03:44,125
복습하자면, 제가 여러분께 권장드리는 부분은 시스템을 먼저 만들고, 테스트를 반복하라는 것입니다.

68
00:03:44,125 --> 00:03:47,050
이런 조언이 어쩌면 덜 적용될 수 있는 분야도 있습니다.

69
00:03:47,050 --> 00:03:52,300
이전에 특정 어플에 경험이 있는 경우엔 말이죠.

70
00:03:52,300 --> 00:03:56,080
또, 덜 적용될 만한 분야는 바로 학술문학 분야가 많이 적용된

71
00:03:56,080 --> 00:03:58,480
경우인데요, 이런 경우에는 

72
00:03:58,480 --> 00:04:01,425
여러분이 만드는 문제에 똑같이 학술 분야 내용을 덧붙혀서 그려나가면 되기 때문입니다.

73
00:04:01,425 --> 00:04:05,810
예로 들자면, 얼굴인식에 대한 학술 문학이 있습니다.

74
00:04:05,810 --> 00:04:08,185
만약 여러분이 얼굴 인식하는 것을 만들려고 하면,

75
00:04:08,185 --> 00:04:11,725
애초에 더 복잡한 시스템을 만들면 됩니다.

76
00:04:11,725 --> 00:04:16,595
이 아주 큰 학술문학위에 말이죠.

77
00:04:16,595 --> 00:04:19,990
하지만 여러분이 처음으로 문제를 해결해나가는 과정이라고 하면 

78
00:04:19,990 --> 00:04:23,235
너무 많은 생각을 하시지 말고

79
00:04:23,235 --> 00:04:27,010
또 너무 처음으로 만드는 시스템을 복잡하게 만들지 말라고 격려드리고 싶습니다.

80
00:04:27,010 --> 00:04:30,070
그냥 일단 지저분하더라고 빨리 시스템을 만들고

81
00:04:30,070 --> 00:04:33,447
이 것을 바탕으로 시스템의 우선순위를 정해 개선해 나가는 방식으로 접근하십시요.

82
00:04:33,447 --> 00:04:36,670
저는 여러가지 다앙한 머신러닝 프로젝트를 접해왔는데요,

83
00:04:36,670 --> 00:04:40,465
이런 과정에서 많은 팀들이 해결책에 대해 너무 많이 생각하고 너무 복잡한 시스템을 만드는 것을 보았습니다.

84
00:04:40,465 --> 00:04:44,335
또, 너무 생각을 안하고 너무 심플하게 만드는 경우도 보았습니다.

85
00:04:44,335 --> 00:04:46,240
평균적으로는 너무 많이 생각하고

86
00:04:46,240 --> 00:04:49,315
복잡한 시스템을 만드는 팀이 더 많았습니다.

87
00:04:49,315 --> 00:04:52,275
너무 심플하게 만드는 팀도 있기는 하지만요.

88
00:04:52,275 --> 00:04:53,920
이 내용이 여러분께 도움이 됐으면 좋겠습니다.

89
00:04:53,920 --> 00:04:58,583
여러분의 머신러닝 알고리즘에 새로운 어플을 적용시키는 경우라면,

90
00:04:58,583 --> 00:05:01,840
그리고 주 목표가 잘 작동하는 시스템을 만드는 것이라면,

91
00:05:01,840 --> 00:05:04,720
여러분의 목표가 완전 새로운 머신러닝 알고리즘을 창조하겠다는 

92
00:05:04,720 --> 00:05:08,020
목표가 아니라면,

93
00:05:08,020 --> 00:05:11,075
주 목표는 아주 잘 작동하는 시스템을 만드는 것일 겁니다.

94
00:05:11,075 --> 00:05:13,360
저는 여러분께 빨리 지저분하게라도 시스템을 일단 만들라고 말씀드리고 싶습니다.

95
00:05:13,360 --> 00:05:14,600
이 시스템을 이용해서 편향/편차 분석을 진행하고,

96
00:05:14,600 --> 00:05:17,890
오류분석을 하고,

97
00:05:17,890 --> 00:05:23,510
이런 분석 결과값으로 다음 단계의 우선순위를 결정하십시요.