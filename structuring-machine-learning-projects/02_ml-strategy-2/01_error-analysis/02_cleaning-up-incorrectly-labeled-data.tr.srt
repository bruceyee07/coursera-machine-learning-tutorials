1
00:00:00,000 --> 00:00:06,985
Gözetimli öğrenme probleminiz için olan veriler girdi X ve çıktı Y etiketlerinden oluşan verilerdir

2
00:00:06,985 --> 00:00:09,730
Peki verileriniz üzerinden geçerseniz ve bazı çıktı etiketleri Y lerin

3
00:00:09,730 --> 00:00:12,240
yanlış olduğunu, yanlış etikete

4
00:00:12,240 --> 00:00:14,740
sahip olduğunu fark ederseniz ne olur?

5
00:00:14,740 --> 00:00:19,540
Verinin içerisine bakıp bu hatalı etiketleri düzeltmeniz harcadığınız zamana değer mi?

6
00:00:19,540 --> 00:00:21,640
Kedi sınıflandırması probleminde,

7
00:00:21,640 --> 00:00:25,295
Y eşittir 1 kedi olanlar için, Y eşittir 0 kedi olmayanlar içindir,

8
00:00:25,295 --> 00:00:28,560
Dolayısıyla, diyelim ki verilere bakıyorsunuz ve bu kedi,

9
00:00:28,560 --> 00:00:30,400
bu kedi değil, bu kedi,

10
00:00:30,400 --> 00:00:33,275
bu kedi, bu kedi değil, bu kedi,

11
00:00:33,275 --> 00:00:35,480
bekle bir dakika, bu aslında kedi değil,

12
00:00:35,480 --> 00:00:41,310
dolayısıyla bu yanlış etikete bir örnektir

13
00:00:41,310 --> 00:00:43,900
Hatalı etiketlenme terimini öğrenme algoritmanız

14
00:00:43,900 --> 00:00:48,235
hatalı sonuç ürettiğinde bunu adlandırmak için kullandım

15
00:00:48,235 --> 00:00:50,800
fakat şu an yanlış etiketlenme terimini kullanacağım,

16
00:00:50,800 --> 00:00:53,590
burada bunu eğer veri setinizde

17
00:00:53,590 --> 00:00:56,740
dolayısıyla öğrenme setinde veya geliştirme setinde veya test setinde Y için olan etikete

18
00:00:56,740 --> 00:00:59,320
aslında insanların atadığı etiket yanlışsa bunu adlandırmak için kullanacağım

19
00:00:59,320 --> 00:01:02,228
(algoritmanın hatalı ürettiği sonucu adlandırmak için değil)

20
00:01:02,228 --> 00:01:06,430
ve burada gördüğünüz aslında köpek ve Y gerçekte 0 değeri olmalıydı.

21
00:01:06,430 --> 00:01:10,115
fakat belki de bunu etiketleyen kişi yanlış etiketledi

22
00:01:10,115 --> 00:01:14,755
dolayısıyla eğer verilerinizin yanlış etiketlenmiş örneklere sahip olduğunu bulursanız,

23
00:01:14,755 --> 00:01:16,440
bu durumda ne yapmalısınız?

24
00:01:16,440 --> 00:01:21,177
Pekala, ilk olarak öğrenme setini düşünelim,

25
00:01:21,177 --> 00:01:24,170
görünecek olan o ki, derin öğrenme algoritmaları

26
00:01:24,170 --> 00:01:27,610
eğitim setindeki rastgele hatalara karşı oldukça dayanıklıdır.

27
00:01:27,610 --> 00:01:32,450
Dolayısıyla yanlış etiketlenmiş örnekleriniz rastgeleden

28
00:01:32,450 --> 00:01:35,420
çok fazla uzak olmadığı sürece,

29
00:01:35,420 --> 00:01:41,495
-belki etiketleyen kişi fazla dikkat etmiyordu veya kazara-

30
00:01:41,495 --> 00:01:44,205
-rastgele yanlış bir klavye tuşuna bastı.-

31
00:01:44,205 --> 00:01:46,400
Eğer hatalar çoğunlukla rastgele ise,

32
00:01:46,400 --> 00:01:49,130
bu durumda hataları olduğu gibi bırakmak büyük ihtimalle kötü bir sonuç doğurmayacaktır,

33
00:01:49,130 --> 00:01:53,065
ve hataları düzeltmekle uğraşmak için zaman harcamak gereksiz olacaktır.

34
00:01:53,065 --> 00:01:55,040
Tabi ki veri setinize gidip etiketleri inceleyip

35
00:01:55,040 --> 00:01:57,920
düzeltmekte herhangi bir zarar yoktur

36
00:01:57,920 --> 00:02:02,285
bazen bu yapılmaya değer fakat eğer toplam veri seti büyüklüğü yeterince büyükse

37
00:02:02,285 --> 00:02:05,390
ve yüzdelik olarak oran çok fazla değilse

38
00:02:05,390 --> 00:02:10,470
bunu yapmasanız bile bu çoğu zaman büyük bir hataya sebebiyet vermez.

39
00:02:10,470 --> 00:02:15,230
Ben eğitim setinde birkaç X hatası olmasına rağmen eğitimde kullanılan makine öğrenimi

40
00:02:15,230 --> 00:02:21,115
algoritmaları gördüm ve çoğunlukla bunlar düzgün çalışıyor.

41
00:02:21,115 --> 00:02:24,770
Burada bir uyarıya değinmekte fayda var ki bu da,

42
00:02:24,770 --> 00:02:28,500
derin öğrenme algoritmaları sistematik hatalara karşı daha az dayanıklıdır

43
00:02:28,500 --> 00:02:34,955
fakat rastgele hatalara karşı oldukça dayanıklıdır.

44
00:02:34,955 --> 00:02:40,555
Dolayısıyla örnek vermek gerekirse, eğer etiketleyen kişi devamlı olarak beyaz köpekleri kedi olarak etiketliyorsa,

45
00:02:40,555 --> 00:02:43,390
bu durumda bu bir problemdir çünkü bu durumda sınıflandırıcı

46
00:02:43,390 --> 00:02:46,970
beyaz köpekleri kedi olarak sınıflandırmayı öğrenecektir

47
00:02:46,970 --> 00:02:50,260
fakat rastgele hatalar veya rastgeleye yakın hatalar,

48
00:02:50,260 --> 00:02:54,575
birçok derin öğrenme algoritması için çok kötü sonuçlar doğurmaz.

49
00:02:54,575 --> 00:02:57,730
Şimdi, bu tartışmanın konusu eğitim setindeki

50
00:02:57,730 --> 00:03:00,905
yanlış etiketlenmiş örnekler hakkında ne yapılacağı ile ilgili.

51
00:03:00,905 --> 00:03:04,895
Peki ya geliştirme setindeki veya test setindeki yanlış etiketlenmiş verilerle ilgili ne yapmalı?

52
00:03:04,895 --> 00:03:07,195
Eğer yanlış etiketlenmiş örneklerin geliştirme veya

53
00:03:07,195 --> 00:03:10,445
test setindeki etkisi üzerine endişeleriniz varsa,

54
00:03:10,445 --> 00:03:14,440
size yapmanızı önereceğim şey, hata analizi sırasında

55
00:03:14,440 --> 00:03:17,920
extra bir kolon ekleyin ve böylece buradakileri toplayarak

56
00:03:17,920 --> 00:03:22,080
hatalı etiketlenmiş Y lerin sayılarının toplamını bulabilirsiniz.

57
00:03:22,080 --> 00:03:29,075
Dolayısıyla örneğin, 100 hatalı geliştirme seti örneği üzerinde inceleme yaptığınızda,

58
00:03:29,075 --> 00:03:31,300
sınıflandırıcınızın sonucunun geliştirme setindeki

59
00:03:31,300 --> 00:03:35,595
etiketle uyuşmadığı 100 tane örnek bulacaksınız

60
00:03:35,595 --> 00:03:38,440
ve bazen bunlardan birkaç tanesinde,

61
00:03:38,440 --> 00:03:42,175
sınıflandırıcınız hatalı olduğu için değil de etiket yanlış olduğu için

62
00:03:42,175 --> 00:03:44,220
sizin sınıflandırıcınızın etiket ile aynı olmadığı durumlara rastlayacaksınız.

63
00:03:44,220 --> 00:03:46,030
Dolayısıyla belki bu örnekte,

64
00:03:46,030 --> 00:03:49,415
etiketleyici arka plandaki kediyi fark edemedi,

65
00:03:49,415 --> 00:03:55,810
-buraya 98.örneğin yanlış etikete sahip olduğuyla ilgili bir işaret bırakıyorum,

66
00:03:55,810 --> 00:03:57,600
ve belki de bu örnekte,

67
00:03:57,600 --> 00:04:01,845
resim aslında gerçek kediden ziyade kedinin çizimiydi.

68
00:04:01,845 --> 00:04:06,865
belki etiketleyicinizin Y'yi sıfıra eşitlemesindense bire eşitlemesini istiyordunuz.

69
00:04:06,865 --> 00:04:09,940
ve dolayısıyla buraya da başka bir işaret bırakıyorum,

70
00:04:09,940 --> 00:04:12,585
ve tıpkı hataların oranınını önceki videolardaki

71
00:04:12,585 --> 00:04:15,670
diğer kategorilerde olduğu gibi topluyoruz

72
00:04:15,670 --> 00:04:20,800
aynı zamanda geliştirme setindeki Y değerinin yanlış olduğu ve bundan dolayı

73
00:04:20,800 --> 00:04:23,320
veri setinizdeki etiketle farklılaşan bir tahminde

74
00:04:23,320 --> 00:04:25,940
bulunduğu örneklerden dolayı oluşan yanlış etiketler

75
00:04:25,940 --> 00:04:32,140
sebebiyle oluşan hataların yüzdelerinin oranını da topluyoruz

76
00:04:32,140 --> 00:04:33,835
Dolayısıyla, şu anda soru şu;

77
00:04:33,835 --> 00:04:41,045
bu %6'lık hatayı gidip yerinde düzeltmeye gerek var mı?

78
00:04:41,045 --> 00:04:43,060
benim önerim şudur ki,

79
00:04:43,060 --> 00:04:47,560
eğer geliştirme setindeki algoritmalarınızın değerlendirilmesindeki yetenekte önemli ölçüde fark oluşturuyorsa,

80
00:04:47,560 --> 00:04:50,740
gidin ve yanlış etiketlenmiş etiketleri düzeltmek için zaman harcayın.

81
00:04:50,740 --> 00:04:52,900
fakat eğer geliştirme setini sınıflandırıcı olarak kullanma yeteneğinizi etkileyecek

82
00:04:52,900 --> 00:04:56,125
kadar önemli bir fark oluşturmuyor ise

83
00:04:56,125 --> 00:04:58,810
bu durumda bu hataları düzelterek zamanınızı yerinde kullanmak için iyi bir tercih yapmamış olursunuz

84
00:04:58,810 --> 00:05:02,075
Size bununla ne demek istediğimi anlamtmak için bir örnek göstereyim

85
00:05:02,075 --> 00:05:05,620
Peki, gidip düzeltip hatalı örnek sayısını düşürmeye çalışmaya

86
00:05:05,620 --> 00:05:09,305
değip değmeyeceğini anlamak için bakmanızı önerdiğim 3 sayı var.

87
00:05:09,305 --> 00:05:12,755
Genel geliştirme seti hatasına bakmanızı öneriyorum

88
00:05:12,755 --> 00:05:16,570
-ve önceki videodan sahip olduğumuz örneğe bakarsak,

89
00:05:16,570 --> 00:05:20,680
belki sistemimiz genel olarak %90 keskinliğe sahip olduğunu söylemiştik,

90
00:05:20,680 --> 00:05:22,995
dolayısıyla %10 hataya sahipti

91
00:05:22,995 --> 00:05:26,560
bu durumda yanlış etiketlerden kaynaklanan hata sayısına

92
00:05:26,560 --> 00:05:30,495
bakmalı ya da hata yüzdesine bakmalısınız

93
00:05:30,495 --> 00:05:32,695
dolayısıyla, burada,

94
00:05:32,695 --> 00:05:35,730
yanlış etiketlerden kaynaklanan hatalar %6

95
00:05:35,730 --> 00:05:40,990
dolayısıyla %10'un %6'sı %0.6 eder

96
00:05:40,990 --> 00:05:45,600
ve daha sonra diğer nedenlerden kaynaklanan hatalara bakmalısınız

97
00:05:45,600 --> 00:05:48,280
dolayısıyla geliştirme setinde %10 hatanız varsa

98
00:05:48,280 --> 00:05:51,580
ve %0.6'sı hatalı etiketlerden kaynaklanıyorsa,

99
00:05:51,580 --> 00:05:54,430
bu durumda geriye kalan %9.4,

100
00:05:54,430 --> 00:05:58,231
diğer nedenlerden kaynaklanan sebeplerdir örneğin köpekleri kedi olarak hatalı tanılama gibi

101
00:05:58,231 --> 00:06:01,420
büyük kediler ve bunların görüntülerini gibi.

102
00:06:01,420 --> 00:06:08,380
Dolayısıyla, bu durumda, odaklanmanız gereken hata oranı bu %9.4'lük orandır

103
00:06:08,380 --> 00:06:12,370
bu örnekte yanlış etiketlenmeden kaynaklanan hatalar

104
00:06:12,370 --> 00:06:16,360
genel hatanın sadece küçük bir bölümünü oluşturur

105
00:06:16,360 --> 00:06:17,860
Dolayıyla, istiyorsanız muhakkak,

106
00:06:17,860 --> 00:06:20,605
gidin ve bu yanlış etiketlenmeden kaynaklanan hataları düzeltin fakat

107
00:06:20,605 --> 00:06:24,455
bu şu anda yapılması en mantıklı işlem olmayabilir

108
00:06:24,455 --> 00:06:26,830
Şimdi, başka bir örnek verelim.

109
00:06:26,830 --> 00:06:30,040
Diyelim ki, eğitim probleminizde çok daha fazla aşama kaydettiniz,

110
00:06:30,040 --> 00:06:31,896
dolayısıyla, %10 hata yerine,

111
00:06:31,896 --> 00:06:35,065
diyelim ki hata oranını %2'ye kadar düşürdünüz,

112
00:06:35,065 --> 00:06:43,300
fakat hala %0.6 oranındaki hatanız yanlış etiketlenmeden kaynaklanıyor

113
00:06:43,300 --> 00:06:47,755
Dolayısıyla, hatalı etiketlenmiş geliştirme seti örneklerinden bir set inceleyecek olursanız,

114
00:06:47,755 --> 00:06:52,600
bu set %2'lik hatalı etiketlenmiş bir setten geliyor,

115
00:06:52,600 --> 00:06:56,065
bu durumda bu hatanın önemli bir oranı ,

116
00:06:56,065 --> 00:06:59,315
yani 0.6/2.0 ye karşılık gelen oranı,

117
00:06:59,315 --> 00:07:05,235
dolayısıyla bu aslında önceki örnekten ziyade %6 yerine, %30 oranına karşılık geliyor

118
00:07:05,235 --> 00:07:09,145
yanlış örnekler aslında yanlış etiketlenmiş örneklerden kaynaklanmakta.

119
00:07:09,145 --> 00:07:12,445
ve dolayısıyla, diğer nedenlerden kaynaklanan hatalar bu durumda %1.6 olarak karşımıza çıkar

120
00:07:12,445 --> 00:07:16,885
Geliştirme setinizdeki hataların

121
00:07:16,885 --> 00:07:23,640
bu kadar büyük bir oranı yanlış etiketlenmeden oluştuğu zaman,

122
00:07:23,640 --> 00:07:30,825
bu durumda gidip bu hataları düzeltmeniz çok daha fazla anlam ifade eder

123
00:07:30,825 --> 00:07:32,800
ve eğer geliştirme setinin amacının,

124
00:07:32,800 --> 00:07:34,890
temel amacının şu olduğunu hatırlarsanız ki bu da

125
00:07:34,890 --> 00:07:39,520
A ve B arasında sınıfları arasında sınıflandırma konusunda yardımcı olmak

126
00:07:39,520 --> 00:07:42,030
Diyelim ki, A ve B sınıflandırıcılarını deniyorsunuz,

127
00:07:42,030 --> 00:07:49,740
bir tanesi geliştirme setinde %2.1 hataya sahip diğeri %1.9 hataya sahip

128
00:07:49,740 --> 00:07:52,370
bu durumda geliştirme setine bu sınıflandırıcının mı daha iyi

129
00:07:52,370 --> 00:07:55,020
veya bu sınıflandırıcının mı daha iyi olduğu

130
00:07:55,020 --> 00:07:57,440
konusunda daha fazla güvenemezsiniz çünkü

131
00:07:57,440 --> 00:08:02,215
hatalarınızın %0.6 oranı yanlış etiketlenmeden kaynaklanmakta.

132
00:08:02,215 --> 00:08:06,720
Böyle bir durumda bu gidip hatalı etiketleri düzeltmeniz için iyi bir sebeptir

133
00:08:06,720 --> 00:08:10,770
çünkü, bu sağdaki örnekte algoritmanızın toplam değerlendirmesinde

134
00:08:10,770 --> 00:08:14,784
çok daha fazla etkiye sahip olduğunu görüyoruz,

135
00:08:14,784 --> 00:08:17,385
bunun yanısıra soldaki örnekte etkinin yüzdesi

136
00:08:17,385 --> 00:08:21,055
hala küçük olarak kalıyor

137
00:08:21,055 --> 00:08:24,040
Şimdi, eğer geliştirme setine gitmeye ve yanlış

138
00:08:24,040 --> 00:08:28,285
etiketleri elle düzeltmeye karar verirseniz,

139
00:08:28,285 --> 00:08:33,505
burada aklınızda bulundurabileceğiniz birkaç kılavuz veya prensip mevcut.

140
00:08:33,505 --> 00:08:36,850
Birincisi, uygulayacağınız işlemin aynı zamanda

141
00:08:36,850 --> 00:08:41,320
hem geliştirme ve hem de eğitim setine uygulamanız gerektiği olacaktır.

142
00:08:41,320 --> 00:08:44,110
Daha önce geliştirme ve test setlerinin neden

143
00:08:44,110 --> 00:08:47,335
aynı dağılımdan gelmesi gerektiğini konuşmuştuk

144
00:08:47,335 --> 00:08:50,890
Geliştirme seti size hedef hakkında bilgi veriyor ve hedefi bulduğunuzda,

145
00:08:50,890 --> 00:08:53,320
bunu test setinde genelleştirmek istersiniz

146
00:08:53,320 --> 00:08:55,540
dolayısıyla takımınız geliştirme ve test setlerinin

147
00:08:55,540 --> 00:08:59,195
aynı dağılımdan gelmesi konusunda daha fazla çalışmalıdır

148
00:08:59,195 --> 00:09:01,620
dolayısıyla, eğer geliştirme setinde bir şeyi tamir edecekseniz,

149
00:09:01,620 --> 00:09:04,290
ben olsam aynı işlemi aynı dağılımdan olma özelliğini

150
00:09:04,290 --> 00:09:07,170
kaybetmemek için test setine de uygulardım.

151
00:09:07,170 --> 00:09:10,690
Dolayısıyla, etiketleri daha dikkatli incelemesi için birini işe alırız.

152
00:09:10,690 --> 00:09:13,125
-bunu hem geliştirme hem de test setlerine uygulamak için

153
00:09:13,125 --> 00:09:16,255
İkinci olarak, algoritmanızın hem doğru ve hem de yanlış olarak

154
00:09:16,255 --> 00:09:20,920
belirlediği örnekleri incelemeyi düşünmenizi öneririm.

155
00:09:20,920 --> 00:09:23,400
Algoritmanızın yanlış olarak belirlediği örneklere bakıp

156
00:09:23,400 --> 00:09:26,875
bunlardan biri düzeltilmesi gerekiyor mu diye incelemeniz kolaydır

157
00:09:26,875 --> 00:09:30,463
fakat aynı zamanda algoritmanızın doğru olarak belirlediği fakat hala düzeltilmesi

158
00:09:30,463 --> 00:09:32,000
gereken örnekler de mevcut olabilir

159
00:09:32,000 --> 00:09:34,560
ve eğer sadece algoritmanızın yanlış belirlediği şeyleri düzeltirseniz,

160
00:09:34,560 --> 00:09:38,905
algoritmanızda daha fazla yanlı tahnimlerle başbaşa kalırsınız

161
00:09:38,905 --> 00:09:42,450
bunu yapmak algoritmanıza adil olmayan bir avantaj sağlar

162
00:09:42,450 --> 00:09:46,560
Neyi yanlış yaptığını iki kez kontrol etmeye çalışırız fakat neyi

163
00:09:46,560 --> 00:09:50,910
doğru yaptığını da kontrol etmeliyiz çünkü şanş eseri doğru yağtığı

164
00:09:50,910 --> 00:09:54,645
bir şeye denk gelebilirsiniz ve etiketi düzeltmek

165
00:09:54,645 --> 00:09:59,160
o örnekte doğrudan yanlışa yönelmesini sağlar.

166
00:09:59,160 --> 00:10:01,995
İkinci söylediğimizi uygulaması her zaman kolay olmayacaktır

167
00:10:01,995 --> 00:10:03,865
dolayısıyla her zaman yapılmaz

168
00:10:03,865 --> 00:10:08,055
Bunun her zaman yapılmamasının sebebi eğer sınıflandırıcınız çok keskin bir sınıflandırma yapıyorsa

169
00:10:08,055 --> 00:10:11,940
bu durumda daha az şeyi doğru yerine hatalı olarak belirler.

170
00:10:11,940 --> 00:10:15,120
Dolayısıyla, eğer sınıflandırıcınız %98 keskinliğe sahipse,

171
00:10:15,120 --> 00:10:19,660
bu durumda %2'yi hatalı ve %98'i doğru olarak alıyor

172
00:10:19,660 --> 00:10:24,365
Dolayısıyla, %2'ilk hatalı belirlediği kısmı incelemek %98'lik doğru olarak

173
00:10:24,365 --> 00:10:30,345
belirlediği kısmı incelemekten her zaman daha kolaydır.

174
00:10:30,345 --> 00:10:31,840
Dolayısıyla, bu her zaman yapılmaz

175
00:10:31,840 --> 00:10:34,365
bu düşünülmesi gereken bir şeylerden yalnızca biriydi.

176
00:10:34,365 --> 00:10:41,275
Son olarak, eğer geliştirme ve test verilerinizdeki oradaki bazı etiketleri düzeltmeye giderseniz,

177
00:10:41,275 --> 00:10:46,410
aynı işlemi eğitim setine uygulamaya karar verebilirsiniz de vermeyebilirsiniz de.

178
00:10:46,410 --> 00:10:48,600
Hatırlayın diğer videoda eğitim setindeki etiketleri

179
00:10:48,600 --> 00:10:51,485
düzeltmenizin daha az önemli olduğunu söylemiştik

180
00:10:51,485 --> 00:10:54,750
ve sadece geliştirme ve test setindeki etiketleri düzeltmeye karar vermeniz çok daha mümkündür

181
00:10:54,750 --> 00:10:58,170
çünkü bunların boyutları eğitim setinde göre oldukça düşüktür

182
00:10:58,170 --> 00:11:01,710
ve çok daha fazla boyuta sahip olan eğitim setini düzeltmek

183
00:11:01,710 --> 00:11:06,025
için çabanızı harcamanıza değmeyeceğinden bu şekilde karar vermeyi seçebilirsiniz.

184
00:11:06,025 --> 00:11:07,365
Bu aslında çok sorun değil.

185
00:11:07,365 --> 00:11:11,775
Bu haftanın ilerleyen kısımlarında

186
00:11:11,775 --> 00:11:14,070
eğer eğitim verileriniz geliştirme ve test verilerinden farklı dağılıma sahipse

187
00:11:14,070 --> 00:11:17,435
ne yapmanız gerektiği ile ilgili konuşacağız

188
00:11:17,435 --> 00:11:20,190
Öğrenme algoritmaları aslında buna oldukça dayanıklı.

189
00:11:20,190 --> 00:11:25,175
Geliştirme ve test setlerinizin aynı dağılımdan gelmesi çok önemlidir

190
00:11:25,175 --> 00:11:28,530
fakat eğer eğitim setinden biraz farklı bir dağılımdan geliyorsa

191
00:11:28,530 --> 00:11:31,170
bu sıklıkla yapılması gayet mantıklı bir şey olarak karşımıza çıkar

192
00:11:31,170 --> 00:11:34,060
bunu nasıl halledeceğiniz ile ilgili bu hafta daha fazla konuşacağız

193
00:11:34,060 --> 00:11:37,705
Dolayısıyla, birkaç parça tavsiye ile birlikte bunu toparlamak istiyorum.

194
00:11:37,705 --> 00:11:41,265
Birincisi, derin öğrenme araştırmacıları bazen

195
00:11:41,265 --> 00:11:42,920
'algoritmayı az önce doyurdum eğittim ve çalıştı'

196
00:11:42,920 --> 00:11:44,897
şeklinde şeyler söylemeyi severler ve

197
00:11:44,897 --> 00:11:48,035
bunda derin öğrenme çağında bakıldığında oldukça doğruluk payı vardır

198
00:11:48,035 --> 00:11:51,000
Algoritmayı eğitmektense onu doyurmak söz konusudur ve

199
00:11:51,000 --> 00:11:54,685
daha az elle mühendislik ve daha az insan sezgilerinden faydalanmak söz konusudur

200
00:11:54,685 --> 00:11:57,780
fakat faydalı sistemler kurarken

201
00:11:57,780 --> 00:12:01,965
çoğunlukla araştırmacıların olmasını istediğinden daha fazla

202
00:12:01,965 --> 00:12:07,270
elle hata analizi ve insan sezgisi ile karşılaşıldığını düşünüyorum

203
00:12:07,270 --> 00:12:10,580
İkinci olarak söylemek istediğim ise, elle örnekleri incelemek konusunda

204
00:12:10,580 --> 00:12:14,415
isteksiz olan bazı mühendisler ve araştırmacılar gördüğümdür.

205
00:12:14,415 --> 00:12:16,510
Belki oturup birkaç yüz tane örneği

206
00:12:16,510 --> 00:12:17,745
inceleyip hataları saymak

207
00:12:17,745 --> 00:12:21,465
yapılabilecek çok ilginç bir şey olmayabilir

208
00:12:21,465 --> 00:12:23,865
fakat bu benim de makine öğrenimi takımına

209
00:12:23,865 --> 00:12:25,485
liderlik ederken ne hata yaptığını

210
00:12:25,485 --> 00:12:27,240
öğrenebilmek için yaptığım bir şeydir.

211
00:12:27,240 --> 00:12:29,430
Gidip verilere bizzat bakarım

212
00:12:29,430 --> 00:12:31,820
ve hataların oranlarını sayarım

213
00:12:31,820 --> 00:12:35,535
ve bunun bir sonrakinde neye öncelik vermenizle alakalı

214
00:12:35,535 --> 00:12:40,005
bilgi vermede epey yardımcı olabileceğini düşünüyorum.

215
00:12:40,005 --> 00:12:42,720
Bunu zamanı iyi bir şeklide kullanmak olduğunu düşünüyorum

216
00:12:42,720 --> 00:12:45,480
ve hangi fikirlere veya hangi yönlere öncelik vermeniz gerektiğine

217
00:12:45,480 --> 00:12:47,385
karar vermeye çalışırken yardımcı olması adına

218
00:12:47,385 --> 00:12:51,585
bunu yapmayı düşünmeyi size de tavsiye ediyorum.

219
00:12:51,585 --> 00:12:55,620
Böylelikle, hata analizi işlemi buraya kadardı.

220
00:12:55,620 --> 00:13:00,060
Bir sonraki videoda, hata analizinin yeni bir makine öğrenimi projesine başlarken

221
00:13:00,060 --> 00:13:05,000
projenin neresinde yer alacağına yönelik bir takım düşünceler paylaşmak istiyorum.