Gözetimli öğrenme probleminiz için olan veriler girdi X ve çıktı Y etiketlerinden oluşan verilerdir Peki verileriniz üzerinden geçerseniz ve bazı çıktı etiketleri Y lerin yanlış olduğunu, yanlış etikete sahip olduğunu fark ederseniz ne olur? Verinin içerisine bakıp bu hatalı etiketleri düzeltmeniz harcadığınız zamana değer mi? Kedi sınıflandırması probleminde, Y eşittir 1 kedi olanlar için, Y eşittir 0 kedi olmayanlar içindir, Dolayısıyla, diyelim ki verilere bakıyorsunuz ve bu kedi, bu kedi değil, bu kedi, bu kedi, bu kedi değil, bu kedi, bekle bir dakika, bu aslında kedi değil, dolayısıyla bu yanlış etikete bir örnektir Hatalı etiketlenme terimini öğrenme algoritmanız hatalı sonuç ürettiğinde bunu adlandırmak için kullandım fakat şu an yanlış etiketlenme terimini kullanacağım, burada bunu eğer veri setinizde dolayısıyla öğrenme setinde veya geliştirme setinde veya test setinde Y için olan etikete aslında insanların atadığı etiket yanlışsa bunu adlandırmak için kullanacağım (algoritmanın hatalı ürettiği sonucu adlandırmak için değil) ve burada gördüğünüz aslında köpek ve Y gerçekte 0 değeri olmalıydı. fakat belki de bunu etiketleyen kişi yanlış etiketledi dolayısıyla eğer verilerinizin yanlış etiketlenmiş örneklere sahip olduğunu bulursanız, bu durumda ne yapmalısınız? Pekala, ilk olarak öğrenme setini düşünelim, görünecek olan o ki, derin öğrenme algoritmaları eğitim setindeki rastgele hatalara karşı oldukça dayanıklıdır. Dolayısıyla yanlış etiketlenmiş örnekleriniz rastgeleden çok fazla uzak olmadığı sürece, -belki etiketleyen kişi fazla dikkat etmiyordu veya kazara- -rastgele yanlış bir klavye tuşuna bastı.- Eğer hatalar çoğunlukla rastgele ise, bu durumda hataları olduğu gibi bırakmak büyük ihtimalle kötü bir sonuç doğurmayacaktır, ve hataları düzeltmekle uğraşmak için zaman harcamak gereksiz olacaktır. Tabi ki veri setinize gidip etiketleri inceleyip düzeltmekte herhangi bir zarar yoktur bazen bu yapılmaya değer fakat eğer toplam veri seti büyüklüğü yeterince büyükse ve yüzdelik olarak oran çok fazla değilse bunu yapmasanız bile bu çoğu zaman büyük bir hataya sebebiyet vermez. Ben eğitim setinde birkaç X hatası olmasına rağmen eğitimde kullanılan makine öğrenimi algoritmaları gördüm ve çoğunlukla bunlar düzgün çalışıyor. Burada bir uyarıya değinmekte fayda var ki bu da, derin öğrenme algoritmaları sistematik hatalara karşı daha az dayanıklıdır fakat rastgele hatalara karşı oldukça dayanıklıdır. Dolayısıyla örnek vermek gerekirse, eğer etiketleyen kişi devamlı olarak beyaz köpekleri kedi olarak etiketliyorsa, bu durumda bu bir problemdir çünkü bu durumda sınıflandırıcı beyaz köpekleri kedi olarak sınıflandırmayı öğrenecektir fakat rastgele hatalar veya rastgeleye yakın hatalar, birçok derin öğrenme algoritması için çok kötü sonuçlar doğurmaz. Şimdi, bu tartışmanın konusu eğitim setindeki yanlış etiketlenmiş örnekler hakkında ne yapılacağı ile ilgili. Peki ya geliştirme setindeki veya test setindeki yanlış etiketlenmiş verilerle ilgili ne yapmalı? Eğer yanlış etiketlenmiş örneklerin geliştirme veya test setindeki etkisi üzerine endişeleriniz varsa, size yapmanızı önereceğim şey, hata analizi sırasında extra bir kolon ekleyin ve böylece buradakileri toplayarak hatalı etiketlenmiş Y lerin sayılarının toplamını bulabilirsiniz. Dolayısıyla örneğin, 100 hatalı geliştirme seti örneği üzerinde inceleme yaptığınızda, sınıflandırıcınızın sonucunun geliştirme setindeki etiketle uyuşmadığı 100 tane örnek bulacaksınız ve bazen bunlardan birkaç tanesinde, sınıflandırıcınız hatalı olduğu için değil de etiket yanlış olduğu için sizin sınıflandırıcınızın etiket ile aynı olmadığı durumlara rastlayacaksınız. Dolayısıyla belki bu örnekte, etiketleyici arka plandaki kediyi fark edemedi, -buraya 98.örneğin yanlış etikete sahip olduğuyla ilgili bir işaret bırakıyorum, ve belki de bu örnekte, resim aslında gerçek kediden ziyade kedinin çizimiydi. belki etiketleyicinizin Y'yi sıfıra eşitlemesindense bire eşitlemesini istiyordunuz. ve dolayısıyla buraya da başka bir işaret bırakıyorum, ve tıpkı hataların oranınını önceki videolardaki diğer kategorilerde olduğu gibi topluyoruz aynı zamanda geliştirme setindeki Y değerinin yanlış olduğu ve bundan dolayı veri setinizdeki etiketle farklılaşan bir tahminde bulunduğu örneklerden dolayı oluşan yanlış etiketler sebebiyle oluşan hataların yüzdelerinin oranını da topluyoruz Dolayısıyla, şu anda soru şu; bu %6'lık hatayı gidip yerinde düzeltmeye gerek var mı? benim önerim şudur ki, eğer geliştirme setindeki algoritmalarınızın değerlendirilmesindeki yetenekte önemli ölçüde fark oluşturuyorsa, gidin ve yanlış etiketlenmiş etiketleri düzeltmek için zaman harcayın. fakat eğer geliştirme setini sınıflandırıcı olarak kullanma yeteneğinizi etkileyecek kadar önemli bir fark oluşturmuyor ise bu durumda bu hataları düzelterek zamanınızı yerinde kullanmak için iyi bir tercih yapmamış olursunuz Size bununla ne demek istediğimi anlamtmak için bir örnek göstereyim Peki, gidip düzeltip hatalı örnek sayısını düşürmeye çalışmaya değip değmeyeceğini anlamak için bakmanızı önerdiğim 3 sayı var. Genel geliştirme seti hatasına bakmanızı öneriyorum -ve önceki videodan sahip olduğumuz örneğe bakarsak, belki sistemimiz genel olarak %90 keskinliğe sahip olduğunu söylemiştik, dolayısıyla %10 hataya sahipti bu durumda yanlış etiketlerden kaynaklanan hata sayısına bakmalı ya da hata yüzdesine bakmalısınız dolayısıyla, burada, yanlış etiketlerden kaynaklanan hatalar %6 dolayısıyla %10'un %6'sı %0.6 eder ve daha sonra diğer nedenlerden kaynaklanan hatalara bakmalısınız dolayısıyla geliştirme setinde %10 hatanız varsa ve %0.6'sı hatalı etiketlerden kaynaklanıyorsa, bu durumda geriye kalan %9.4, diğer nedenlerden kaynaklanan sebeplerdir örneğin köpekleri kedi olarak hatalı tanılama gibi büyük kediler ve bunların görüntülerini gibi. Dolayısıyla, bu durumda, odaklanmanız gereken hata oranı bu %9.4'lük orandır bu örnekte yanlış etiketlenmeden kaynaklanan hatalar genel hatanın sadece küçük bir bölümünü oluşturur Dolayıyla, istiyorsanız muhakkak, gidin ve bu yanlış etiketlenmeden kaynaklanan hataları düzeltin fakat bu şu anda yapılması en mantıklı işlem olmayabilir Şimdi, başka bir örnek verelim. Diyelim ki, eğitim probleminizde çok daha fazla aşama kaydettiniz, dolayısıyla, %10 hata yerine, diyelim ki hata oranını %2'ye kadar düşürdünüz, fakat hala %0.6 oranındaki hatanız yanlış etiketlenmeden kaynaklanıyor Dolayısıyla, hatalı etiketlenmiş geliştirme seti örneklerinden bir set inceleyecek olursanız, bu set %2'lik hatalı etiketlenmiş bir setten geliyor, bu durumda bu hatanın önemli bir oranı , yani 0.6/2.0 ye karşılık gelen oranı, dolayısıyla bu aslında önceki örnekten ziyade %6 yerine, %30 oranına karşılık geliyor yanlış örnekler aslında yanlış etiketlenmiş örneklerden kaynaklanmakta. ve dolayısıyla, diğer nedenlerden kaynaklanan hatalar bu durumda %1.6 olarak karşımıza çıkar Geliştirme setinizdeki hataların bu kadar büyük bir oranı yanlış etiketlenmeden oluştuğu zaman, bu durumda gidip bu hataları düzeltmeniz çok daha fazla anlam ifade eder ve eğer geliştirme setinin amacının, temel amacının şu olduğunu hatırlarsanız ki bu da A ve B arasında sınıfları arasında sınıflandırma konusunda yardımcı olmak Diyelim ki, A ve B sınıflandırıcılarını deniyorsunuz, bir tanesi geliştirme setinde %2.1 hataya sahip diğeri %1.9 hataya sahip bu durumda geliştirme setine bu sınıflandırıcının mı daha iyi veya bu sınıflandırıcının mı daha iyi olduğu konusunda daha fazla güvenemezsiniz çünkü hatalarınızın %0.6 oranı yanlış etiketlenmeden kaynaklanmakta. Böyle bir durumda bu gidip hatalı etiketleri düzeltmeniz için iyi bir sebeptir çünkü, bu sağdaki örnekte algoritmanızın toplam değerlendirmesinde çok daha fazla etkiye sahip olduğunu görüyoruz, bunun yanısıra soldaki örnekte etkinin yüzdesi hala küçük olarak kalıyor Şimdi, eğer geliştirme setine gitmeye ve yanlış etiketleri elle düzeltmeye karar verirseniz, burada aklınızda bulundurabileceğiniz birkaç kılavuz veya prensip mevcut. Birincisi, uygulayacağınız işlemin aynı zamanda hem geliştirme ve hem de eğitim setine uygulamanız gerektiği olacaktır. Daha önce geliştirme ve test setlerinin neden aynı dağılımdan gelmesi gerektiğini konuşmuştuk Geliştirme seti size hedef hakkında bilgi veriyor ve hedefi bulduğunuzda, bunu test setinde genelleştirmek istersiniz dolayısıyla takımınız geliştirme ve test setlerinin aynı dağılımdan gelmesi konusunda daha fazla çalışmalıdır dolayısıyla, eğer geliştirme setinde bir şeyi tamir edecekseniz, ben olsam aynı işlemi aynı dağılımdan olma özelliğini kaybetmemek için test setine de uygulardım. Dolayısıyla, etiketleri daha dikkatli incelemesi için birini işe alırız. -bunu hem geliştirme hem de test setlerine uygulamak için İkinci olarak, algoritmanızın hem doğru ve hem de yanlış olarak belirlediği örnekleri incelemeyi düşünmenizi öneririm. Algoritmanızın yanlış olarak belirlediği örneklere bakıp bunlardan biri düzeltilmesi gerekiyor mu diye incelemeniz kolaydır fakat aynı zamanda algoritmanızın doğru olarak belirlediği fakat hala düzeltilmesi gereken örnekler de mevcut olabilir ve eğer sadece algoritmanızın yanlış belirlediği şeyleri düzeltirseniz, algoritmanızda daha fazla yanlı tahnimlerle başbaşa kalırsınız bunu yapmak algoritmanıza adil olmayan bir avantaj sağlar Neyi yanlış yaptığını iki kez kontrol etmeye çalışırız fakat neyi doğru yaptığını da kontrol etmeliyiz çünkü şanş eseri doğru yağtığı bir şeye denk gelebilirsiniz ve etiketi düzeltmek o örnekte doğrudan yanlışa yönelmesini sağlar. İkinci söylediğimizi uygulaması her zaman kolay olmayacaktır dolayısıyla her zaman yapılmaz Bunun her zaman yapılmamasının sebebi eğer sınıflandırıcınız çok keskin bir sınıflandırma yapıyorsa bu durumda daha az şeyi doğru yerine hatalı olarak belirler. Dolayısıyla, eğer sınıflandırıcınız %98 keskinliğe sahipse, bu durumda %2'yi hatalı ve %98'i doğru olarak alıyor Dolayısıyla, %2'ilk hatalı belirlediği kısmı incelemek %98'lik doğru olarak belirlediği kısmı incelemekten her zaman daha kolaydır. Dolayısıyla, bu her zaman yapılmaz bu düşünülmesi gereken bir şeylerden yalnızca biriydi. Son olarak, eğer geliştirme ve test verilerinizdeki oradaki bazı etiketleri düzeltmeye giderseniz, aynı işlemi eğitim setine uygulamaya karar verebilirsiniz de vermeyebilirsiniz de. Hatırlayın diğer videoda eğitim setindeki etiketleri düzeltmenizin daha az önemli olduğunu söylemiştik ve sadece geliştirme ve test setindeki etiketleri düzeltmeye karar vermeniz çok daha mümkündür çünkü bunların boyutları eğitim setinde göre oldukça düşüktür ve çok daha fazla boyuta sahip olan eğitim setini düzeltmek için çabanızı harcamanıza değmeyeceğinden bu şekilde karar vermeyi seçebilirsiniz. Bu aslında çok sorun değil. Bu haftanın ilerleyen kısımlarında eğer eğitim verileriniz geliştirme ve test verilerinden farklı dağılıma sahipse ne yapmanız gerektiği ile ilgili konuşacağız Öğrenme algoritmaları aslında buna oldukça dayanıklı. Geliştirme ve test setlerinizin aynı dağılımdan gelmesi çok önemlidir fakat eğer eğitim setinden biraz farklı bir dağılımdan geliyorsa bu sıklıkla yapılması gayet mantıklı bir şey olarak karşımıza çıkar bunu nasıl halledeceğiniz ile ilgili bu hafta daha fazla konuşacağız Dolayısıyla, birkaç parça tavsiye ile birlikte bunu toparlamak istiyorum. Birincisi, derin öğrenme araştırmacıları bazen 'algoritmayı az önce doyurdum eğittim ve çalıştı' şeklinde şeyler söylemeyi severler ve bunda derin öğrenme çağında bakıldığında oldukça doğruluk payı vardır Algoritmayı eğitmektense onu doyurmak söz konusudur ve daha az elle mühendislik ve daha az insan sezgilerinden faydalanmak söz konusudur fakat faydalı sistemler kurarken çoğunlukla araştırmacıların olmasını istediğinden daha fazla elle hata analizi ve insan sezgisi ile karşılaşıldığını düşünüyorum İkinci olarak söylemek istediğim ise, elle örnekleri incelemek konusunda isteksiz olan bazı mühendisler ve araştırmacılar gördüğümdür. Belki oturup birkaç yüz tane örneği inceleyip hataları saymak yapılabilecek çok ilginç bir şey olmayabilir fakat bu benim de makine öğrenimi takımına liderlik ederken ne hata yaptığını öğrenebilmek için yaptığım bir şeydir. Gidip verilere bizzat bakarım ve hataların oranlarını sayarım ve bunun bir sonrakinde neye öncelik vermenizle alakalı bilgi vermede epey yardımcı olabileceğini düşünüyorum. Bunu zamanı iyi bir şeklide kullanmak olduğunu düşünüyorum ve hangi fikirlere veya hangi yönlere öncelik vermeniz gerektiğine karar vermeye çalışırken yardımcı olması adına bunu yapmayı düşünmeyi size de tavsiye ediyorum. Böylelikle, hata analizi işlemi buraya kadardı. Bir sonraki videoda, hata analizinin yeni bir makine öğrenimi projesine başlarken projenin neresinde yer alacağına yönelik bir takım düşünceler paylaşmak istiyorum.