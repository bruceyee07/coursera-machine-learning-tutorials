בסרטון הזה אני רוצה להמשיך ולהתקדם בדוגמה שלנו כדי להראות כיצד רשת עצבית יכולה לחשב היפותזה מורכבת לא ליניארית. בסרטון האחרון ראינו כיצד ניתן להשתמש ברשת עצבית כדי לחשב את הפונקציות x1 AND x2, ואת הפונקציה x1 OR x2 כאשר x1 ו-x2 הם בוליאניים, כלומר כאשר הם מקבלים ערכים 0,1. אנחנו יכולים גם לעשות רשת שמחשבת שלילה, כלומר שמחשבת את הפונקציה NOT x1. תרשו לי רק לרשום את המשקלות הקשורות לרשת הזו. יש לנו רק תכונת קלט אחת x1 במקרה הזה ויחידת הטיה 1+. ואם נשייך להם משקולות פלוס 10 ומינוס 20, אז ההשערה מחשבת את הביטוי (h(x) = g(10-20x1. אז כאשר x1 שווה ל-0, ההשערה שלנו תהיה (g(10-20x0 שהערך שלה הוא הסיגמואיד של 10. אז זה בערך 1, וכאשר x שווה 1, זה יהיה (10-)g שזה שווה בערך ל-0. ואם תסתכלו על ערכי התוצאה האלה, תראו שהם בעצם הפונקציה NOT x1. בשביל לכלול את רעיון השלילה, הרעיון הכללי הוא לשים משקל שלילי גדול כמשקל של המשתנה שאותו רוצים לשלול. 20- כפול x1, וזה הרעיון הכללי של איך אפשר להגיע לשלילה של x1. אז נעבור לדוגמה שאני מקווה שאתם יכולים להבין בעצמכם בקלות, אם נרצה לחשב את הפונקציה NOT x1 AND NOT x2, חלק מהפתרון יהיה כנראה לשים משקלים שליליים גדולים על x1 ו-x2, אבל זה צריך להיות אפשרי לגרום לרשת עצבית עם יחידת פלט אחת בלבד לחשב גם את זה. בסדר, אז הפונקציה הלוגית, NOT x1 AND NOT x2, תהיה שווה 1 אם ורק אם x1 שווה x2 שווה 0. מכיוון שזו פונקציה לוגית, המשמעות של NOT x1 היא ש-x1 חייב להיות 0 והמשמעות של NOT x2, היא שגם x2 חייב להיות שווה ל-0. אז הפונקציה הלוגית הזו שווה 1 אם ורק אם הן x1 והן x2 שווים ל-0 ואני מקווה שאתם כבר מסוגלים להבין איך לבנות רשת עצבית קטנה כדי לחשב גם את הפונקציה הלוגית הזאת. עכשיו, כשניקח ונחבר את שלוש החתיכות שכבר הרכבנו, הרשת לחישוב x1 AND x2, והרשת לחישוב NOT x1 AND NOT x2. והרשת האחרונה לחישוב x1 OR x2, אנחנו צריכים להיות מסוגלים לחבר את שלושת החלקים כדי לחשב את הפונקציה הלוגית x1 XNOR x2. ותנו לי להזכיר לכם אם כאן בתרשים אלה x1 ו-x2, לפונקציה הזאת שאנחנו רוצים לחשב יש דוגמאות שליליות כאן וכאן, ודוגמאות חיוביות שם ושם. ולכן ברור שיהיה צורך בגבולות החלטה לא ליניאריים כדי להפריד בין הדוגמאות החיוביות והשליליות. אז בואו נשרטט את הרשת. אני לוקח את הקלטים 1+, x1, ו-x2 וליצור את היחידה החבויה הראשונה שלי כאן. אני אקרא לה a(2)1 כי זו היחידה החבויה הראשונה שלי. ואני אעתיק את המשקלות מהרשת האדומה, הרשת של x1 AND x2. אז 30-, 20, 20. עכשיו אני יוצר יחידה נסתרת שניה שלה אני אקרא a(2)2. זוהי היחידה הנסתרת השנייה בשכבה שתיים. ואני אעתיק את המשקלות מהרשת התכולה שבמרכז כאן, אז נקבל משקלים 10, 20-, 20-. ועכשיו בואו נסתכל על כמה מהערכים בטבלת האמת. לגבי הרשת האדומה, אנחנו יודעים שהיא מחשבת את הפונקציה x1 AND x2, ולכן נקבל כאן ערכים קרובים ל-1 0 0 0, לפי הערכים של x1 ו-x2, ולגבי a(2)2, הרשת התכולה, מה אנחנו יודעים? זו הפונקציה NOT x1 AND NOT x2, שהערכים שלה הם 0 0 0 1, עבור 4 האפשרויות של ערכים של x1 ו-x2. ועכשיו סופסוף, אני עומד ליצור את צומת הפלט שלנו, יחידת הפלט שהיא a(3)1. זוהי שכבת הפלט (h(x ואני אעתיק את רשת ה-OR בשביל זה. אז אני צריך יחידת הטייה, 1+ כאן, אז נצייר את זה, ואני כמובן אעתיק את המשקלות מהרשת הירוקה. אז זה 10-, 20, 20 ואנחנו יודעים מהסרטון הקודם שזה מחשב את הפונקציה OR. אז עכשיו בואו נמלא את טבלת האמת. אז הערך הראשון הוא אפס OR אחת שהוא 1, הבא הוא 0 OR אפס שהוא 0, 0 OR אפס שהוא 0, 1 OR אפס שיוצא 1. ולכן (h(x שווה ל-1 כאשר x1 ו-x2 הם שניהם אפס או כאשר x1 ו-x2 הם שניהם 1 ו-(h(x מוציא 1 למעשה בדיוק בשני המקומות האלה ואחרת הוא מוציא 0. אז זו רשת עצבית שיש לה שכבת קלט, שכבה מוסתרת אחת, ושכבת פלט, אנחנו מקבלים גבול החלטה לא ליניארי שמחשב את הפונקציה XNOR. וההבנה היותר כללית היא שבשכבת הקלט, יש לנו פשוט קלטים. ואז יש לנו שכבה מוסתרת, שמחשבת כמה פונקציות קצת יותר מורכבות על הקלטים כפי שמוצג כאן שהן פונקציות קצת יותר מסובכות. ואז על ידי הוספת שכבה נוספת אנו מקבלים פונקציה מורכבת ואפילו יותר בלתי ליניארית. וזו ההבנה לגבי מדוע רשתות עצביות יכולות לחשב פונקציות מסובכות למדי. שכשיש לנו שכבות מרובות ויש לנו פונקציה פשוטה יחסית על הקלט של השכבה השנייה. אז אפשר לבנות שכבה שלישית ולחשב בה פונקציות עוד יותר מורכבות, ואם צריך אפשר להויף עוד שכבה שתוכל לחשב פונקציות אפילו עוד יותר מורכבות. כדי לסכם את הסרטון, אני רוצה להראות לכם דוגמה נחמדה של יישום של רשת עצבית שבה רואים את האינטואיציה הזו ששכבות נוספות יכולות לחשב תכונות מורכבות יותר. אני רוצה להראות לכם סרטון של לקוח שהוא חבר טוב שלי יאן לקון. יאן הוא פרופסור באוניברסיטת ניו יורק, NYU והוא היה אחד החלוצים הראשונים של מחקר רשתות עצביות והוא מעין אגדה בתחום עכשיו והרעיונות שלו משמשים בכל מיני מוצרים ויישומים ברחבי העולם עכשיו. אז אני רוצה להראות לכם וידאו מתוך עבודה מוקדמת שלו שבו הוא השתמש ברשת עצבית לזהות כתב יד, לעשות זיהוי ספרות מכתב יד. אולי אתם זוכרים מוקדם בקורס הזה, בתחילת הקורס אמרתי שאחת ההצלחות המוקדמות ביותר של רשתות עצביות היה הניסיון להשתמש בהם כדי לקרוא קודי מיקוד כדי לסייע לשירות הדואר האמריקאי, לקרוא מיקודים. אז זה אחד הניסיונות, זהו אחד האלגוריתמים בהם השתמשו כדי לנסות לטפל בבעיה הזו. בסרטון שאני אראה לכם, האזור הזה כאן הוא אזור קלט המציג תו כתוב בכתב-יד שמוצג לרשת. העמודה זו מראה הדמיה של התכונות המחושבות על ידי השכבה הנסתרת הראשונה של הרשת. אז זו השכבה החבויה הראשונה של הרשת והשכבה החבויה הראשונה, ההדמיה הזו מראה תכונות שונות. שפות שונות וקווים שונים וכן הלאה שזוהו. העמודה הבאה היא הדמיה של השכבה המוסתרת הבאה. זה קצת יותר קשה לראות, קשה יותר להבין את השכבות העמוקות יותר, וזו ויזואליזציה של מה שמחשבת השכבה הסמויה הבאה. אתם מן הסתם מתקשים לראות מה קורה הרבה מעבר לשכבה החבויה הראשונה, אבל אז בסופו של דבר כל התכונות הללו שנלמדו מוזנות אל שכבת הפלט. וכאן אנחנו רואים את התשובה הסופית, זהו הערך החזוי הסופי של מה שהרשת העצבית חושבת שמה שהיא רואה היא הספרה הכתובה בכתב-היד הזו. אז בואו נראה את הסרטון. [מוסיקה] אז אני מקווה שנהניתם מהווידאו ושבתקווה זה נתן לכם קצת אינטואיציה על סוג הפונקציות המסובכות למדי שרשתות עצביות יכולות ללמוד. שבו היא מקבלת את התמונה הזו כקלט, פשוט מקבלת כקלט את הפיקסלים האלה, והשכבה המוסתרת הראשונה מחשבת איזה סדרה של תכונות. השכבה החבויה הבאה מחשבת תכונות מורכבות עוד יותר ועוד יותר מורכבות. והתכונות האלה יכולות לשמש את השכבה הסופית של מסווגים לוגיסטיים כדי לבצע תחזית מדויקת של הספרה שאותה רואה הרשת.