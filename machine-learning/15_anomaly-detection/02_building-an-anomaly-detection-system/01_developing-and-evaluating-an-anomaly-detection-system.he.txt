בסרטון האחרון פיתחנו אלגוריתם לזיהוי חריגים - אנומליות. בסרטון הזה, אני רוצה לדבר על התהליך של איך לתכנן פיתוח של יישום ספציפי לזיהוי חריגים לבעיה נתונה, ובמיוחד נתמקד בבעיה של הערכת הטיב של אלגוריתם זיהוי חריגים. בסרטונים קודמים, דיברנו על החשיבות של הערכה מספרית וזה נובע מהרעיון שכאשר מנסים לפתח אלגוריתם למידה ליישום ספציפי, צריכים לעשות הרבה בחירות כמו בחירה באילו תכונות להשתמש וכו' וקבלת ההחלטות לגבי האפשרויות האלו היא בדרך כלל הרבה יותר קלה אם יש דרך מספרית להעריך את אלגוריתם הלמידה. לדוגמא אם אתה מנסה להחליט, נניח שיש לך רעיון לעוד תכונה, האם כדאי להוסיף אותה או לא. אז אם אתה יכול להפעיל את האלגוריתם עם התכונה, ולהפעיל את האלגוריתם ללא התכונה, ולקבל מספר שאומר לך האם הוספת התכונה שפרה או הרעה את הביצועים. אז זה נותן לך דרך הרבה יותר טובה ופשוטה בעזרתה להחליט אם לכלול את התכונה. אז על מנת להיות מסוגל לפתח מערכת זיהוי חריגים במהירות, דרך להערכת תוכנת זיהוי חריגים ממש תועיל. כדי להעריך מערכת לזיהוי חריגים, אנחנו נניח שיש לנו קצת נתונים מתויגים. עד עכשיו דיברנו על זיהוי אנומליות כעל בעיית למידה לא מושגחת, תוך שימוש בנתונים ללא תוויות. אבל אם יש לנו כמה נתונים מתויגים שמגדירים כמה דוגמאות כחריגות וכמה דוגמאות כלא חריגות, אז הנה דרך טובה לבנות דרך סטנדרטית להערכת אלגוריתם של זיהוי אנומליות. אז בואו ניקח שוב את דוגמת מנועי המטוסים. נניח שיש לנו קצת נתונים מתויגים של כמה דוגמאות חריגות של כמה מנועי מטוסים שיוצרו בעבר והתברר שהיו חריגים, התברר שהם היו פגומים או לא רגילים באיזו שהיא דרך. ונניח שיש לנו גם כמה דוגמאות לא חריגות, כמה דוגמאות שהיו בסדר גמור. אני אשתמש ב-y שווה 0 כדי לציין נורמלי או לא-חריג, וב-y שווה 1 כדי לציין דוגמאות חריגות. התהליך של פיתוח של אלגוריתם לזיהוי אנומליות הוא כדלקמן. אנחנו נחשוב על הדוגמאות שלנו כעל קבוצת אימון, ונדבר מאוחר יותר על קבוצות אימות צולב ומבחן, אבל אנחנו נחשוב על קבוצת האימון עדיין כערכת אימון בלתי מתויגת. אז זה אוסף גדול של דוגמאות נורמליות, לא אנומליות, לא חריגות. ובדרך כלל אנחנו חושבים על זה כעל קבוצה לא חריגה, אבל זה ממש בסדר גם אם כמה דוגמאות חריגות השתחלו להן לתוך ערכת האימון הבלתי מתויגת. עכשיו אנחנו נגדיר סדרות אימות צולב ומבחן, בהן נשתמש כדי להעריך את איכותו של אלגוריתם זיהוי אנומליה מסוים. אז, ספציפית, הן עבור סדרת המבחן והן עבור סדרת האימות אנחנו מניחים שהן כוללות כמה דוגמאות שידועות כחריגות. ... ... זאת אומרת, בקבוצת הבדיקה יש לנו כמה דוגמאות עם y שווה 1 שזה אומר מנועי מטוסים חריגים. הנה דוגמה ספציפית. נניח שאלה הם כל הנתונים שיש לנו. בנינו 10,000 דוגמאות של מנועים, שעד כמה שאנחנו יודעים הם מנועי מטוסים נורמליים לחלוטין וטובים. ושוב, מסתבר שזה גם בסדר אם כמה מנועים פגומים הצליחו להשתחל לתוך הקבוצה של 10,000 המנועים הטובים, אבל אנחנו מניחים שרובם המכריע של 10,000 הדוגמאות האלה הן של מנועים טובים ונורמלים ולא חריגים. ונניח גם שבעבר, לא חשוב במשך כמה זמן זה קרה בהיסטוריה של ייצור המנועים, נניח שכבר ראינו גם בערך 20 מנועים חריגים. ביישום אופייני למדי של זיהוי אנומליות, מספר הדוגמאות האנומליות, כלומר עם y שווה 1, יהיה איזשהו מספר בטווח 20 עד 50. זה טווח אופייני למדי של מספר דוגמאות שיש לנו עם y שווה 1. ובדרך כלל יש לנו מספר גדול בהרבה של דוגמאות טובות. אז בהינתן ערכת נתונים כזו, דרך אופיינית למדי לפצל אותה לערכת אימון, ערכת אימות וערכת מבחן תהיה כדלקמן. ניקח את 10,000 מנועי המטוסים הטובים ונשים 6,000 מתוכם בערכת האימון או ההדרכה הלא מתויגת. אני קורא לזה קבוצת הדרכה לא מתויגת אבל בעצם כל הדוגמאות האלה הם של y שווה 0, ככל שאנו יודעים. ובהן נשתמש כדי להתאים את p של x. נשתמש ב-6000 מנועים האלה כדי להתאים את p של x, כאשר p של x1 יש לו פרמטרים μ1 ו-σ²1, וכן הלאה עד p של xn עם פרמטרים μn ו-σ²n. שוב, ב-6,000 הדוגמאות נשתמש כדי לאמוד את הפרמטרים μ1 ו-σ²1, וכו' עד μn ו-σ²n. אז זה מערך ההדרכה שלנו, שכולל את הרוב המכריע של דוגמאות טובות. עכשיו ניקח את מנועי המטוסים הטובים הנותרים ונחלק אותם לערכת אימות וערכת בדיקה או מבחן. אז 6,000 פלוס 2,000 פלוס 2,000, ככה נפצל את 10,000 מנועי המטוסים הלא-חריגים שלנו. ויש לנו גם 20 מנועי מטוסים פגומים, ניקח אותם ואולי נפצל אותם לשני חצאים, עשרה מהם בסדרת האימות ועשרה מהם בסדרת הבדיקה. ובשקופית הבאה נדבר על איך באמת להשתמש בזה כדי להעריך את איכות האלגוריתם לזיהוי חריגים. אז מה שתיארתי כאן הוא המלצה לדרך טובה לפצל את הנתונים המתויגים והבלתי-מתויגים. מנועי המטוסים הטובים והפגומים. כשהשתמשנו בפיצול של משהו כמו 60, 20, 20 עבור המנועים הטובים ולקחנו את המנועים הפגומים, וחילקנו אותם לסדרות האימות והמבחן, ונוכל לראות בשקופית הבאה למה זה כך. אבל דרך אגב, אם תסתכלו על מימושים שונים של אלגוריתמים לזיהוי אנומליה, לפעמים תראו שמפתחים שונים מפצלים את הנתונים בצורה שונה. אז חלופה אחרת, שאיננה באמת מומלצת, אבל חלק מהמפתחים מעדיפים לחלק 10,000 מנועים כך, אולי 6000 מהם בסדרת האימון ואז לשים את אותם 4000 הנותרים גם במערך האימות הצולב וגם במערך הבדיקה, אבל אנחנו אוהבים לחשוב על סדרת האימות הצולב וסדרת המבחן כקבוצות נתונים זרות לחלוטין. ולמרות זאת בזיהוי חריגים, לפעמים אנו רואים מפתחים שמשתמשים באותה קבוצה של מנועים טובים בסדרות האימות הצולב והבדיקה, ולפעמים אנו רואים מפתחים שמשתמשים גם בדיוק באותן קבוצות של מנועים חריגים במערך האימות הצולב ובמערך הבדיקה. אבל השיטות האלה נחשבות לשיטות טובות פחות ובהחלט מומלצות פחות. ברור ששימוש באותם נתונים במערך האימות הצולב ובמערך הבדיקה איננו נחשב לשיטה טובה בלמידת מכונה. אבל לפעמים רואים מפתחים שכן עושים את זה. אז אחרי שיש לנו קבוצות אימון, אימות ובדיקה, כך מעריכים או מפתחים ומעריכים אלגוריתם. קודם כל לוקחים את ערכת האימון ומתאימים מודל של p של x. מתאימים את כל הגאוסיאנים האלה ל-m הדוגמאות הלא מתויגות של מנועי המטוסים, ואני קורא להם דוגמאות ללא תווית, אבל בעצם הם דוגמאות שאנחנו מניחים שהם מנועי מטוסים לא חריגים. דמיינו שאלגוריתם זיהוי האנומליות הוא בעצם ביצוע של חיזוי. בסדרת האימות הצולב ובקבוצת הבדיקה, לדוגמא בדוגמת מבחן x, חשבו על האלגוריתם כמנבא ש-y שווה 1 אם p של x קטן מ-ε, וכמנבא אפס, אם p של x גדול או שווה ε. בהינתן x הוא מנסה לחזות, מה התווית שהיינו נותנים לו, y שווה 1 דהיינו חריג, או y שווה 0 שמתאים לדוגמה לא חריגה? טוב, אז נתונות לנו סדרות אימון, אימות, ובדיקה. איך מפתחים אלגוריתם? ליתר דיוק, איך מעריכים את איכותו של אלגוריתם לזיהוי אנומליה? אז הצעד הראשון הוא לקחת את ערכת האימון ללא תוויות, ולהתאים מודל p של x לנתוני האימון. אז אתה לוקח את מה שאני קורא ערכת הדרכה ללא תוויות, אבל בעצם הן דוגמאות שאנחנו מניחים שרובן המכריע הוא מנועים לא חריגים, ולזה נתאים את המודל p של x. זה יכוון או יתאים את כל הפרמטרים האלה לכל הגאוסיאנים על הנתונים האלה. אחר כך בסדרות האימות והבדיקה, אנחנו נחשוב על אלגוריתם זיהוי האנומליות כמנסה לחזות את הערך של y. אז בכל אחת מהדוגמאות האלה, יש לנו הדוגמאות (x(i-test ו-(y(i-test, שבהם y שווה 1 אם זו דוגמא חריגה ו-0 אם לא. אז כשנתון לנו קלט x מתוך סט הבדיקה, חישבו על האלגוריתם לזיהוי אנומליה כפונקציה שחוזה ש-y הוא 1 אם p של x קטן מ-ε. ואז היא מנבאת אנומליה כי ההסתברות נמוכה מאוד. ואנחנו חושבים שהאלגוריתם מנבא ש-y שווה ל 0 אם p של x גדול או שווה ε. ואז היא מנבאת שהדוגמה נורמלית כי p של x, ההסתברות, גדולה מספיק. אז כך אנחנו יכולים כעת לחשוב על אלגוריתם זיהוי אנומליות כעל ביצוע תחזיות לגבי מהם הערכים של תוויות y האלה בקבוצות הבדיקה והאימות הצולב. וזה מעמיד אותנו באזור קצת יותר דומה למסגרת הלמידה בפיקוח, נכון? שבה יש לנו ערכות מתויגות והאלגוריתם שלנו מבצע תחזיות על התוויות האלה, כך שאנחנו יכולים להעריך את האיכות שלו על ידי ספירת הפעמים בה הוא מוציא תוויות נכונות. כמובן התוויות האלה תהיינה מאוד מוטות כי y שווה אפס, הדוגמאות הנורמליות, בדרך כלל הרבה יותר שכיחות מאשר y שווה 1, הדוגמאות החריגות. אבל זה הרבה יותר קרוב לסוג של אומדנים שאנחנו משתמשים בהם בלמידה בפיקוח. אז איזה מדד הוא אומדן טוב להשתמש בו? ובכן, מכיוון שהנתונים מוטים מאוד, כי y שווה 0 הרבה יותר שכיח מאשר 1, הדיוק של הסיווג איננו מדד טוב להערכה. דיברנו על זה בסרטון מוקדם יותר. שאם יש לנו ערכת נתונים מאוד מוטה, אז לחזות ש-y שווה 0 כל הזמן, ייתן לנו דיוק גבוה מאוד. ובמקום זה אנו צריכים להשתמש במדדי הערכה כמו חישוב האחוזים של התוצאות החיוביות האמיתיות, החיוביות הכוזבות, השליליות האמיתיות והשליליות הכוזבות או חישוב הדיוק והקליעה של האלגוריתם או חישוב של ציון-F₁, שהוא מספר ממשי יחיד שמאחד את הדיוק והקליעה. אז אלה דרכים להערכת אלגוריתם זיהוי אנומליות במערך האימות הצולב או במערך הבדיקה. לבסוף, מקודם באלגוריתם זיהוי האנומליות היה לנו הפרמטר ε, נכון? ε הוא הסף שבו השתמשנו כדי להחליט מתי לסמן משהו כחריג. אז אם יש לנו סדרת אימות, עוד דרך לבחירת הפרמטר ε, תהיה לנסות ערכים רבים ושונים של ε, ולבחור את הערך של ε שנותן ציון-F₁ הכי גבוה, שמצליח היטב על סדרת האימות. ובאופן כללי יותר, הדרך להשתמש בסדרות האימון, הבדיקה והאימות, היא שכאשר אנו מנסים לקבל החלטות, כמו אילו תכונות לכלול בחישוב, או לכוון את הפרמטר ε, נעריך שוב ושוב את האלגוריתם לפי ערכת האימות ונעשה את כל ההחלטות האלה כמו באלה תכונות להשתמש ומה ערכו של ε, בשימוש בערכת האימות, ואז לאחר שבחרנו את כל הפרמטרים האלה ומצאנו ערך של ε שאיתו אנחנו מרוצים, ניקח את המודל הסופי ונעריך אותו, נעשה הערכה סופית של האלגוריתם על ערכת הבדיקה. אז בסרטון הזה דיברנו על התהליך של הערכת איכותו של אלגוריתם לזיהוי חריגים, וההערכה הזו תלויה בכך שיש מספר ממשי אחד שנותן לנו ציון כמו ציון-F₁ שמאפשר לנו לחסוך הרבה זמן כאשר אנו מנסים לפתח מערכת לזיהוי חריגים, ואז אנחנו צריכים לעשות החלטות כאלה, לבחור ε, להחליט אילו תכונות לכלול, וכן הלאה. בסרטון הזה, התחלנו להשתמש בנתונים מתויגים כדי להעריך אלגוריתם לזיהוי חריגים, וזה קירב אותנו קצת אל מסגרת הלמידה המבוקרת. בסרטון הבא אני אדבר על זה עוד קצת. ובפרט נדבר על מתי צריך להשתמש באלגוריתם זיהוי אנומליות ומתי בעצם יותר נכון להשתמש בלמידה בפיקוח במקום זה,
ומהם ההבדלים בין שתי השיטות האלה.