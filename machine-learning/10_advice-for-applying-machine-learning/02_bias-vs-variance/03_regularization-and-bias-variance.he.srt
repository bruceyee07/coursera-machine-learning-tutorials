1
00:00:00,430 --> 00:00:04,460
ראינו כיצד יכולה ההסדרה לסייע במניעת התאמת-יתר.

2
00:00:04,460 --> 00:00:08,680
אבל איך משפיעה ההסדרה על ההטיה ועל השונות של אלגוריתם למידה?

3
00:00:08,680 --> 00:00:12,308
בסרטון הזה אני רוצה להתעמק יותר בסוגיות של ההטיה

4
00:00:12,308 --> 00:00:15,358
והשונות, ולדבר על האינטראקציה שלהן עם,

5
00:00:15,358 --> 00:00:19,297
ועל איך הם משפיעות ומושפעות מההסדרה של אלגוריתם הלמידה.

6
00:00:22,154 --> 00:00:26,364
נניח שאנחנו מתאימים פולינום מסדר גבוה, כמו זה שמוצג כאן, אבל

7
00:00:26,364 --> 00:00:30,730
כדי למנוע התאמת-יתר אנחנו צריכים להשתמש בהסדרה, כמו שמוצג כאן

8
00:00:30,730 --> 00:00:36,270
אז יש לנו מונח הסדרה כזה כדי לנסות להגביל את גודלם של ערכי תטא.

9
00:00:36,270 --> 00:00:41,467
וכרגיל, ההתאמות הן רק מ-j=1 עד m, ולא מ-j=0 עד m.

10
00:00:41,467 --> 00:00:44,281
הבה נבחן שלושה מקרים.

11
00:00:44,281 --> 00:00:48,973
הראשון הוא המקרה בו לפרמטר ההסדרה למבדה יש ערך ענק,

12
00:00:48,973 --> 00:00:52,430
כגון אם למבדה שווה ל-10,000.

13
00:00:52,430 --> 00:00:53,340
איזשהו ערך ענק.

14
00:00:54,450 --> 00:00:58,660
במקרה זה, כל הפרמטרים האלה, תטא-1, תטא-2, תטא-3, וכן הלאה

15
00:00:58,660 --> 00:01:00,970
יהיה להם קנס כבד

16
00:01:00,970 --> 00:01:06,360
ולכן רוב הערכים של הפרמטרים האלה יהיו קרובים לאפס.

17
00:01:06,360 --> 00:01:08,960
וההשערה תהיה בערך ש-H של x

18
00:01:08,960 --> 00:01:11,860
שווה או בערך שווה לתטא-0.

19
00:01:11,860 --> 00:01:15,840
אז נקבל פונקצית השערה שנראית פחות או יותר ככה, פחות או יותר

20
00:01:15,840 --> 00:01:18,720
קו ישר שטוח, קבוע.

21
00:01:18,720 --> 00:01:23,690
ולכן להשערה הזאת יש הטיה גבוהה והיא סובלת מהתאמת חסר לנתונים,

22
00:01:23,690 --> 00:01:28,440
כי קו ישר אופקי הוא פשוט לא מודל מספיק טוב עבור הקבוצה הזו של נתונים.

23
00:01:28,440 --> 00:01:32,690
מצד שני, אם יש לנו ערך קטן מאוד של למבדה,

24
00:01:32,690 --> 00:01:36,240
כגון אם למבדה שווה לאפס.

25
00:01:36,240 --> 00:01:39,750
במקרה זה, בהתחשב בעובדה שאנחנו מתאימים פולינום מסדר גבוה,

26
00:01:39,750 --> 00:01:43,320
זה המקרה הרגיל של התאמת-יתר.

27
00:01:43,320 --> 00:01:47,150
במקרה זה, בהתחשב בכך שאנחנו מתאימים פולינום מסדר גבוה, ביסודו של דבר

28
00:01:47,150 --> 00:01:50,630
ללא הסדרה או עם הסדרה מינימלית מאוד,

29
00:01:50,630 --> 00:01:53,570
נקבל את המצב הרגיל של שונות גבוהה והתאמת-יתר.

30
00:01:53,570 --> 00:01:57,304
בעצם אם למבדה שווה לאפס, אנחנו בונים התאמה

31
00:01:57,304 --> 00:02:01,200
ללא רגולריזציה, ולכן מקבלים התאמת-יתר.

32
00:02:01,200 --> 00:02:05,030
וזה רק כשיש לנו ערך ביניים של למבדה שהוא

33
00:02:05,030 --> 00:02:08,660
לא גדול מדי ולא קטן מדי, שאנחנו מקבלים

34
00:02:08,660 --> 00:02:13,470
פרמטרים תטא שנותנים לנו התאמה סבירה לנתונים.

35
00:02:13,470 --> 00:02:18,660
אז איך אנחנו יכולים לבחור באופן אוטומטי ערך טוב עבור למבדה, פרמטר ההסדרה?

36
00:02:19,660 --> 00:02:24,250
אז בואו נחזור רגע, הנה המודל שלנו, והנה המטרה של אלגוריתם הלמידה שלנו.

37
00:02:24,250 --> 00:02:27,080
עבור המצב הזה שבו אנחנו כן משתמשים בהסדרה,

38
00:02:27,080 --> 00:02:30,990
תרשו לי להגדיר את J-אימון של תטא להיות משהו אחר,

39
00:02:30,990 --> 00:02:36,110
להיות מטרת האופטימיזציה אבל בלי מונח ההסדרה.

40
00:02:36,110 --> 00:02:41,630
בעבר, בסרטון קודם כאשר לא השתמשנו בהסדרה, הגדרנו את

41
00:02:41,630 --> 00:02:47,650
J-אימון של תטא להיות זהה ל-J של תטא כפונקצית מחיר

42
00:02:47,650 --> 00:02:52,180
אבל כאשר אנו משתמשים בהסדרה ויש לנו האיבר הזה עם למבדה אנחנו נגדיר את J-אימון

43
00:02:52,180 --> 00:02:57,040
להיות פשוט הסכום של ריבועי השגיאות על סדרת האימון או הממוצע של

44
00:02:57,040 --> 00:03:01,610
השגיאה בריבוע על קבוצת האימון, בלי לקחת בחשבון את ההסדרה.

45
00:03:01,610 --> 00:03:07,077
ובדומה אנחנו גם נגדיר את שגיאת האימות הצולב

46
00:03:07,077 --> 00:03:12,380
ואת שגיאת המבחן כמו בעבר להיות הממוצע של ריבועי השגיאות על סדרות

47
00:03:12,380 --> 00:03:17,600
האימות הצולב והמבחן. אז רק כדי לסכם את ההגדרות: J-אימון, J-CV

48
00:03:17,600 --> 00:03:22,904
ו-J-מבחן הם פשוט הממוצע או בעצם חצי הממוצע של ריבועי השגיאות

49
00:03:22,904 --> 00:03:28,644
על סדרות האימון, האימות והמבחן, ללא המונח הנוסף של ההסדרה.

50
00:03:28,644 --> 00:03:32,981
אז עכשיו בואו נדבר על איך אנחנו יכולים לבחור באופן אוטומטי את

51
00:03:32,981 --> 00:03:34,356
פרמטר ההסדרה למבדה.

52
00:03:34,356 --> 00:03:38,700
מה שאני עושה בדרך כלל הוא מחליט על מגוון של ערכים של למבדה שאותם

53
00:03:38,700 --> 00:03:39,360
אני רוצה לנסות.

54
00:03:39,360 --> 00:03:43,555
אז אני עשוי לדוגמא לשקול ערכים של למבדה, 0 (ללא הסדרה) או כמו הרשימה הזו,

55
00:03:43,555 --> 00:03:48,360
הנה כמה ערכים שאותם אני עשוי לנסות, למבדה = 0.01, 0.02, 0.04, וכן הלאה.

56
00:03:48,360 --> 00:03:54,395
ואני בדרך כלל מגדיר אותם בכפולות של שתיים, עד איזה שהוא ערך גדול מספיק.

57
00:03:54,395 --> 00:03:59,784
לו עשיתי את הטור הזה במדויק בכפולות של 2 הייתי מגיע ל-10.24.

58
00:03:59,784 --> 00:04:02,663
כאן יש לנו 10, שזה מספיק קרוב.

59
00:04:02,663 --> 00:04:07,880
לשלוש או ארבע ספרות אחרי הנקודה העשרונית לא תהיה ממש השפעה על התוצאה.

60
00:04:07,880 --> 00:04:11,920
אז זה נותן לי אולי 12 מודלים שונים לנסות.

61
00:04:11,920 --> 00:04:16,040
ואני מנסה לבחור מבין 12 הערכים השונים האלה

62
00:04:16,040 --> 00:04:19,000
של ההסדרה, של הפרמטר למבדה.

63
00:04:19,000 --> 00:04:22,820
וכמובן אפשר גם לנסות ערכים קטנים מ-0.01 או

64
00:04:22,820 --> 00:04:27,450
ערכים גדולים מ-10 אבל אני פשוט חתכתי כאן את הסדרה לנוחות.

65
00:04:27,450 --> 00:04:31,830
בהינתן 12 המודלים האלה, מה שאנחנו יכולים לעשות הוא,

66
00:04:31,830 --> 00:04:36,980
אנו יכולים לקחת את המודל הראשון עם למבדה שווה אפס, למזער

67
00:04:36,980 --> 00:04:41,880
את פונקצית העלות J של תטא וזה נותן לנו וקטור פרמטרים תטא.

68
00:04:41,880 --> 00:04:43,200
ובדומה לוידאו קודם,

69
00:04:43,200 --> 00:04:47,900
אני אציין אותו כתטא סימן עליון אחד.

70
00:04:49,570 --> 00:04:54,184
ואז אני לוקח את המודל השני שלי שבו למבדה הוא 0.01

71
00:04:54,184 --> 00:04:59,328
וממזער את פונקצית העלות עכשיו באמצעות למבדה שווה 0.01 כמובן.

72
00:04:59,328 --> 00:05:01,532
ולקבל וקטור פרמטרים תטא שונה.

73
00:05:01,532 --> 00:05:03,227
ואני מסמן אותו תטא(2).

74
00:05:03,227 --> 00:05:05,295
ואז הבא בתור ואני מקבל תטא(3)

75
00:05:05,295 --> 00:05:07,476
עם המודל השלישי.

76
00:05:07,476 --> 00:05:13,249
וכך הלאה עד שהמודל האחרון עם למבדה שהוא 10

77
00:05:13,249 --> 00:05:18,250
או 10.24, אני מקבל את תטא(12).

78
00:05:18,250 --> 00:05:22,920
עכשיו אני יכול לקחת את כל ההשערות האלה, את כל הפרמטרים תטא האלה

79
00:05:22,920 --> 00:05:26,090
ולהשתמש בסדרת האימות כדי לאמת אותם,

80
00:05:26,090 --> 00:05:30,380
אני מסתכל על המודל הראשון, המודל השני,

81
00:05:30,380 --> 00:05:34,490
שמתאימים לערכים שונים של פרמטר ההסדרה,

82
00:05:34,490 --> 00:05:39,660
ומעריך אותם בעזרת סדרת האימות הצולב, על ידי מדידת ריבוע השגיאה הממוצע

83
00:05:39,660 --> 00:05:44,650
של כל הפרמטרים תטא האלה על קבוצת האימות הצולב.

84
00:05:44,650 --> 00:05:49,910
ואז אני בוחר את אותו מודל מבין 12 המודלים האלה שנותן לי את השגיאה הנמוכה ביותר

85
00:05:49,910 --> 00:05:52,070
על קבוצת האימות.

86
00:05:52,070 --> 00:05:57,200
ונניח, בדוגמה הזאת, שהחלטנו לבחור את תטא-5,

87
00:05:57,200 --> 00:06:03,060
פולינום מסדר 5, כי שגיאת האימות שלו היתה הנמוכה ביותר.

88
00:06:03,060 --> 00:06:08,450
אז אחרי שעשינו את זה, מה שהיינו עושים אם נרצה לחשב את השגיאה בסדרת המבחן,

89
00:06:08,450 --> 00:06:13,350
הוא לקחת את הפרמטר תטא-5 שבחרנו,

90
00:06:13,350 --> 00:06:15,720
ולראות כמה הוא מצליח בערכת המבחן.

91
00:06:15,720 --> 00:06:19,738
אז שוב, כאן אנחנו מתאימים את הפרמטר הזה, למבדה,

92
00:06:19,738 --> 00:06:24,880
כדי שיתאים לסדרת האימות, ולכן שמרנו בצד

93
00:06:24,880 --> 00:06:29,770
את קבוצת המבחן ובה אנחנו נשתמש כדי לקבל הערכה טובה יותר של איך

94
00:06:29,770 --> 00:06:35,140
מצליח וקטור הפרמטרים תטא בהכללה לדוגמאות שלא נראו בעבר.

95
00:06:35,140 --> 00:06:38,280
אז זו בחירת המודל כפי שמיישמים אותה לבחירת

96
00:06:38,280 --> 00:06:40,990
פרמטר ההסדרה למבדה.

97
00:06:40,990 --> 00:06:45,430
הדבר האחרון שאני רוצה לעשות בסרטון הזה הוא להשיג הבנה טובה יותר

98
00:06:45,430 --> 00:06:47,830
של איך משתנות

99
00:06:47,830 --> 00:06:52,750
שגיאת האימות ושגיאת האימון כאשר אנחנו משנים את פרמטר ההסדרה למבדה.

100
00:06:52,750 --> 00:06:56,870
וכזכור, זו היתה פונקצית העלות המקורית שלנו J של תטא.

101
00:06:56,870 --> 00:06:59,480
אבל למטרה שלנו אנחנו נגדיר

102
00:06:59,480 --> 00:07:02,940
שגיאת אימון ללא שימוש בפרמטר ההסדרה,

103
00:07:02,940 --> 00:07:06,340
וגם שגיאת אימות ללא שימוש בפרמטר ההסדרה.

104
00:07:07,560 --> 00:07:12,790
ומה שאני רוצה לעשות זה לשרטט את J-אימון ואת J-cv,

105
00:07:12,790 --> 00:07:18,590
כלומר כמה מצליחה ההשערה על סט האימון

106
00:07:18,590 --> 00:07:22,000
וכמה היא מצליחה על ערכת האימות הצולב

107
00:07:22,000 --> 00:07:25,140
כאשר אני משנה את פרמטר ההסדרה λ.

108
00:07:27,820 --> 00:07:34,680
כפי שראינו קודם אם λ הוא קטן אז אנחנו בעצם לא ממש משתמשים בהסדרה

109
00:07:35,680 --> 00:07:40,740
ומקבלים בסיכוי גבוה התאמת-יתר, ואילו אם λ

110
00:07:40,740 --> 00:07:46,910
הוא גדול, אם אנחנו בחלק הימני של הציר האופקי, אז

111
00:07:46,910 --> 00:07:52,500
עם ערך גדול של λ אנחנו מסתכנים בהטייה, אז

112
00:07:52,500 --> 00:07:59,720
כשנשרטט את J-אימון ואת J-cv, מה שנמצא הוא שעבור ערכים קטנים של λ,

113
00:07:59,720 --> 00:08:04,570
אפשר להתאים היטב את סדרת האימון כי אנחנו לא משתמשים בהסדרה.

114
00:08:04,570 --> 00:08:08,754
אז עבור ערכים קטנים של λ, מונח ההסדרה בעצם נעלם,

115
00:08:08,754 --> 00:08:11,844
ואנחנו ממזערים פשוט את ריבועי השגיאה.

116
00:08:11,844 --> 00:08:15,489
אז כאשר λ הוא קטן, נקבל ערך קטן עבור J-אימון,

117
00:08:15,489 --> 00:08:19,201
אבל אם λ הוא גדול, אז יש לנו בעיית הטייה גבוהה,

118
00:08:19,201 --> 00:08:23,475
ואנחנו עלולים לא להתאים היטב לסדרת האימון, אז אנחנו מקבלים ערך גבוה כאן.

119
00:08:23,475 --> 00:08:28,254
אז J-אימון של θ נוטה לגדול כאשר λ גדלה,

120
00:08:28,254 --> 00:08:33,119
כי ערך גדול של λ מתאים להטיה גבוהה שבה

121
00:08:33,119 --> 00:08:36,481
אי אפשר אפילו להתאים היטב את סט האימון,

122
00:08:36,481 --> 00:08:40,108
בעוד ערך קטן של λ כן יתאים היטב

123
00:08:40,108 --> 00:08:46,270
בהנחה שאפשר באמת להתאים פולינום מסדר גבוה מאוד לנתונים.

124
00:08:46,270 --> 00:08:50,370
לאחר שגיאת האימות אנו מגיעים לגרף כזה,

125
00:08:51,470 --> 00:08:56,450
כאשר כאן בצד ימין, אם יש לנו ערך גדול של λ,

126
00:08:56,450 --> 00:09:03,080
אנו מקבלים התאמת-חסר, זאת אומרת אנחנו באזור ההטיה.

127
00:09:03,080 --> 00:09:07,518
ולכן שגיאת האימות הצולב תהיה גבוהה.

128
00:09:07,518 --> 00:09:12,666
אני רק אשים פה כותרת (J-cv(θ, כי כך, עם הטיה גבוהה,

129
00:09:12,666 --> 00:09:17,424
אנחנו לא מצליחים להתאים, לא נצליח בסדרת האימות הצולב,

130
00:09:17,424 --> 00:09:21,948
ואילו כאן בצד שמאל, זה אזור השונות הגבוהה, שבו

131
00:09:21,948 --> 00:09:26,802
מכיוון שיש לנו ערך λ קטן מדי, אז אנחנו עשויים להיות באזור התאמת-יתר לנתונים.

132
00:09:26,802 --> 00:09:32,690
וכך בגלל התאמת-היתר לנתונים, גם שגיאת האימות תהיה גבוהה.

133
00:09:32,690 --> 00:09:38,670
אז כך נראות שגיאת האימות הצולב ושגיאת האימון

134
00:09:38,670 --> 00:09:43,790
על סדרות האימון והאימות בזמן שאנחנו משנים את פרמטר ההסדרה λ.

135
00:09:43,790 --> 00:09:50,180
אז כמו שאמרנו, לעתים קרובות זה יהיה איזה ערך ביניים של λ

136
00:09:50,180 --> 00:09:54,850
שבדיוק נכון ושעובד הכי טוב במונחים של הקטנת השגיאה

137
00:09:54,850 --> 00:09:56,540
על סדרות האימות והמבחן.

138
00:09:56,540 --> 00:09:59,970
ובעוד הקימורים שציירתי כאן הם קצת קריקטוריים

139
00:09:59,970 --> 00:10:04,730
וקצת להמחשה בלבד, כי בדרך כלל על סדרות של נתונים אמיתיים, הקימורים שנקבל אולי

140
00:10:04,730 --> 00:10:08,350
יצאו יותר מבולגנים וטיפטיפה פחות צפויים,

141
00:10:08,350 --> 00:10:13,230
עבור חלק מערכות הנתונים האמיתיות באמת אפשר לראות סוגים כאלה של עליות וירידות

142
00:10:13,230 --> 00:10:19,240
ועל ידי הסתכלות על השגיאות של ערכות האימות לגבי ערכי λ שונים אפשר או ידנית

143
00:10:19,240 --> 00:10:25,610
או באופן אוטומטי לנסות לבחור נקודה שממזערת את שגיאת האימות

144
00:10:25,610 --> 00:10:30,380
ולבחור את הערך של λ שבו נקבל שגיאת אימות צולב נמוכה.

145
00:10:30,380 --> 00:10:35,590
כאשר אני מנסה לבחור את פרמטר ההסדרה λ עבור אלגוריתם למידה,

146
00:10:35,590 --> 00:10:40,640
אני מוצא לעתים קרובות כי ציור של גרף כמו זה המוצג כאן עוזר לי להבין

147
00:10:40,640 --> 00:10:45,760
טוב יותר מה קורה ומסייע לי לוודא כי אני אכן בוחר ערך טוב

148
00:10:45,760 --> 00:10:48,350
עבור פרמטר ההסדרה λ.

149
00:10:48,350 --> 00:10:52,630
אז אני מקווה שזה נתן לכם יותר תובנה לגבי ההסדרה

150
00:10:52,630 --> 00:10:56,810
ולגבי ההשפעות ההדדיות שלה עם ההטיה והשונות של אלגוריתם למידה.

151
00:10:56,810 --> 00:11:01,290
עד עכשיו כבר ראיתם הטיה ושונות מהרבה נקודות מבט שונות.

152
00:11:01,290 --> 00:11:05,540
מה שהיינו רוצים לעשות בסרטון הבא הוא לקחת את כל התובנות

153
00:11:05,540 --> 00:11:10,890
שקיבלנו ולבנות עליהם כדי ליצור שיטת אבחון שנקראת עקומות

154
00:11:10,890 --> 00:11:16,170
למידה, שהיא כלי שבו אני משתמש לעתים קרובות כדי לאבחן אם אלגוריתם הלמידה

155
00:11:16,170 --> 00:11:19,900
אולי סובל מבעיית הטיה או מבעיית שונות, או קצת משתיהם.