בהרצאה הזו, אני רוצה להתחיל לדבר על עוד סוג של בעיית למידה ללא השגחה הנקראת הפחתת ממדים או צמצום ממדים. ישנן כמה סיבות שונות לעשות הפחתת ממדים. סיבה אחת היא דחיסת נתונים, וכפי שנראה בהמשך בעוד כמה סרטונים, דחיסת נתונים מאפשרת לנו לא רק לדחוס את הנתונים, מה שמצמצם את צריכת הזיכרון, אלא גם מאפשרת לנו להאיץ את אלגוריתמי הלמידה שלנו. אבל קודם כל נתחיל ונסביר מה היא הפחתת ממדים. כדוגמה טובה לנושא, נניח שאספנו סט נתונים עם ממש הרבה תכונות, ששרטטתי רק שתיים מהן כאן. ונניח שללא ידיעתנו, ששתיים מהתכונות הן למעשה האחת היא האורך של משהו בסנטימטרים, והתכונה השניה x2 היא האורך של אותו דבר באינצ'ים. אז זה נותן לנו ייצוג לגמרי מיותר ואולי במקום שתהיינה לנו שתי תכונות נפרדות x1 ו-x2, ששתיהן בעצם מודדות את האורך, אולי מה שאנחנו רוצים לעשות הוא להפחית את ממד הנתונים ופשוט להשתמש במספר אחד כדי למדוד את האורך. אם הדוגמה נראית לכם קצת מאולצת, אז דעו שהדוגמה של סנטימטר ואינץ' איננה כל כך בלתי-מציאותית, ואיננה שונה בהרבה ממה שאני רואה בענף. כשיש לך מאות או אלפי תכונות, לעתים קרובות זה קל לשכוח אילו תכונות בדיוק יש לך. ולפעמים יש כמה צוותי הנדסה שונים, צוות הנדסה אחד אוסף מאתיים תכונות, השני אוסף עוד שלוש מאות תכונות, וצוות הנדסה שלישי מודד חמש מאות תכונות אז ביחד יש לך אלף תכונות, וזה נהיה קשה לעקוב אחרי אילו תכונות יש לך בדיוק מאיזה צוות, וזה למעשה שכיח שיש תכונות מיותרות כאלה. אז אם האורך בסנטימטרים מעוגל לסנטימטר הקרוב ביותר, וגם האורך באינץ' מעוגל לאינץ' הקרוב ביותר, אז המדידות האלה לא ממש מתואמות בצורה מושלמת, בגלל שגיאת העיגול השונה בסנטימטרים ובאינצ'ים. ואם נוכל לצמצם את הנתונים לממד אחד במקום שני ממדים, זה מפחית את היתירות. דוגמה אחרת, שאולי נראית פחות מאולצת. במשך שנים רבות אני עובד עם טייסי מסוקים אוטונומיים. אני עובד עם טייסים שמטיסים מסוקים. וכך אם תמדוד - אם היית רוצה לעשות סקר או לעשות בדיקה של הטייסים השונים האלה - אולי תכונה אחת, x1, היא המיומנות של טייס המסוק, ואולי x2 היא ההנאה של הטייס. כלומר, כמה הם נהנים לטוס, ואולי שתי התכונות תהיינה מתואמות מאוד. ומה שבאמת איכפת לך יכול להיות בעצם תכונה אחרת שבעצם מודדת את הכישרון של הטייס. ואני כמובן ממציא את המילה "כישרון", אבל שוב, אם התכונות מאוד מתואמות, אולי באמת כדאי להקטין את הממדים. אז אני אדבר קצת יותר על מה זה באמת אומר להקטין את מימד הנתונים מ-2 מימדים או 2D לחד-ממדי או 1D. אני אצבע את הדוגמאות האלה באמצעות צבעים שונים. ... ובמקרה הזה ב"הפחתת הממדים" מה שאני מתכוון הוא שאני רוצה למצוא אולי את הקו הזה, שעליו נמצאים רוב הנתונים, ולהטיל את כל הנתונים אל הקו הזה ששרטטתי, ואז למדוד את המיקום של כל הדוגמאות על הקו הזה, ולהגדיר תכונה חדשה, z1, שערכה הוא המיקום על הקו הזה, והיא מספר בודד, z1 היא תכונה חדשה המציינת את המיקום של כל אחת מאותן נקודות על הקו הירוק הזה. ומה שזה אומר, זה שאם בעבר היתה לי דוגמה x1, לדוגמא אם זו הדוגמה הראשונה שלי, x1. אז כדי לייצג את x1 במקור הייתי צריך מספר דו מימדי, או וקטור תכונות דו מימדי. עכשיו במקום זה אני יכול להשתמש ב-z1 לייצג את הדוגמה הראשונה שלי, שהוא מספר ממשי בודד. ו-x2, אם x2 הוא הדוגמה השנייה שלי, אז מקודם נדרשו שני מספרים לייצג אותו, במקום זה אני מחשב את ההיטל של הצלב השחור על הקו, ועכשיו אני צריך רק מספר ממשי אחד שהוא z2, לייצג את המיקום של הנקודה הזו z2 על הקו. וכן הלאה על כל m הדוגמאות שלי. אז רק לסכם, אם אנחנו מרשים לעצמנו להפחית את הדיוק של הנתונים המקוריים על ידי הטלת כל הדוגמאות המקוריות על הקו הירוק הזה כאן, אז אנחנו צריכים רק מספר אחד, רק מספר ממשי אחד כדי לציין את המיקום של נקודה על הקו, ולכן אנחנו יכולים להשתמש במספר אחד כדי לייצג את המיקום של כל אחת מדוגמאות האימון שהוא ההיטל שלהן על הקו הירוק. אז זה אומדן של סדרת האימון המקורית שבו עשינו הטלה של דוגמאות ההכשרה על קו. אבל עכשיו אנחנו צריכים רק מספר אחד בלבד עבור כל אחת מהדוגמאות. אז זה מוריד את דרישות הזיכרון לחצי, או דרישות שטח האיחסון או מה שלא יהיה שאנחנו שומרים בו את הנתונים. אבל אולי יותר מעניין וחשוב, כפי שנראה בהמשך, בסרטון מאוחר יותר, זה גם יאפשר לנו לשפר את הביצועים של אלגוריתמי הלמידה שלנו. וזה בעצם, אולי, אפילו היישום המעניין וחשוב יותר של דחיסת הנתונים הזו, יותר מאשר לצמצם את הזיכרון או את שטח הדיסק הדרוש לאחסון הנתונים. בשקופית הקודמת הצגנו דוגמה של צמצום ממדים מ-2D ל-1D. בשקופית הזו, אני אראה דוגמה נוספת של הפחתת ממדים מתלת ממד 3D לדו ממד 2D. אגב, בדוגמאות אופייניות יותר של צמצום ממדים, ייתכן שיש לנו אלף תכונות, או נתונים ב-1000D ואנחנו עשויים לרצות לצמצם אותם נניח ל-100 ממדים או 100D, אבל בגלל המגבלות של מה שאני יכול לשרטט בשקופית, אני משתמש בדוגמאות של 3D ל 2D, או 2D ל 1D. אז, בואו נדבר על סדרת נתונים כמו זו שמוצגת כאן. אז יש לנו קבוצה של דוגמאות (x(i שהן נקודות ב-R3. זאת אומרת שיש לנו דוגמאות תלת-ממדיות. אני יודע שזה יכול להיות קצת קשה לראות את זה על השקופית, אבל אני אראה ענן של נקודות ב-3D עוד מעט. ואולי זה קשה לראות כאן, אבל כל הנתונים האלה נמצאים בערך במישור אחד, כך. ולכן מה שאנחנו יכולים לעשות עם צמצום ממדים, הוא לקחת את כל הנתונים האלה ולהטיל אותם אל המישור הזה, שהוא משטח דו-ממדי. וכאן מה שעשיתי הוא שלקחתי את כל הנתונים ועשיתי היטל שלהם כך שכולם נמצאים במישור. ועכשיו, לאחר כל זה, כדי לציין את המיקום של נקודה בתוך המישור הזה אנחנו צריכים רק שני מספרים, נכון? אנחנו צריכים, אולי, לציין את המיקום של הנקודה לאורך הציר הזה, וגם לאורך הציר הזה. אז אנחנו צריכים שני מספרים, אולי נקרא להם z1 ו-z2, כדי לציין את המיקום של נקודה בתוך המישור. אז זה אומר שאנחנו יכולים כעת לייצג כל דוגמת אימון באמצעות שני המספרים שרשמתי כאן, z1, ו-z2. עכשיו ניתן לייצג את הנתונים שלנו באמצעות וקטור z שהוא ב-R2. ו-z1 ו-z2, מה שאני מתכוון הוא שהוקטורים כאן, z, הם וקטורים דו-ממדיים, z1, z2. אם יש לנו איזו דוגמא ספציפית (z(i, אז היא וקטור דו מימדי, z(i)1, z(i)2. ובשקופית הקודמת כאשר צמצמנו את הממדים משניים לאחד, אז היה לנו רק z1, נכון? זה מה שהיה z1 בשקופית הקודמת, אבל כאן יש לנו נתונים דו ממדיים, אז יש לנו z1 ו-z2 כשני רכיבים של הנתונים. עכשיו, בואו נוודא שהנתונים האלה הגיוניים. אז תנו לי להראות מחדש את שלושת הגרפים האלה, אבל בהדמייה תלת-ממדית. אז התהליך שעברנו היה שהגרף משמאל מראה את הנתונים המקוריים, האמצעי מראה סדרת נתונים שמוטלים על 2D, ובימין גרף הנתונים מוצג דו-ממדית עם הצירים z1 ו-z2. בואו נסתכל עליהם עוד קצת. הנה ערכת הנתונים המקורית, מוצגת בצד שמאל, אז התחלתי עם ענן תלת-ממדי של נקודות, שבו הצירים מתויגים x1, x2, x3, ולכן הנקודות ב-3D אבל רוב הנתונים אולי נמצאים בערך על איזה שהוא מישור דו-ממדי. אז מה שאנחנו יכולים לעשות הוא לקחת את הנתונים האלה והנה הגרף האמצעי, שבו אנו מטילים את הנקודות על מישור ב-2D. הטלנו את הנתונים האלה, כך שכל זה עכשיו שוכב על המשטח הזה ב-2D. כפי שאתם יכולים לראות כל הנתונים עכשיו נמצאים על המישור כי הטלנו אותם על המישור, ומה שזה אומר הוא שעכשיו אנחנו צריכים רק שני מספרים, z1 ו-z2, כדי לייצג את המיקום של נקודה על המישור. אז זה התהליך שאנחנו יכולים לעבור כדי להפחית את הנתונים שלנו משלושה ממדים לשני ממדים. אז זוהי הפחתת ממדים, וכיצד אנו יכולים להשתמש בה כדי לדחוס את הנתונים שלנו. וכפי שנראה בהמשך, זה יאפשר לנו להאיץ בהרבה חלק מהאלגוריתמים הלומדים שלנו, אבל נגיע לזה רק בסרטון מאוחר יותר.