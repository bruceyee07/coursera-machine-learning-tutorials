1
00:00:00,340 --> 00:00:01,410
בסרטון הזה אני רוצה

2
00:00:01,550 --> 00:00:03,020
לספר לכם על

3
00:00:03,340 --> 00:00:04,570
אלגוריתם ניתוח מרכיבים עיקריים.

4
00:00:05,600 --> 00:00:06,560
ובסוף

5
00:00:06,710 --> 00:00:09,200
הסרטון הזה אתם תדעו ליישם PCA בעצמכם

6
00:00:10,170 --> 00:00:12,540
ולהשתמש בו כדי לצמצם את מספר המאפיינים של הנתונים שלכם.

7
00:00:13,100 --> 00:00:14,690
לפני שמיישמים את PCA,

8
00:00:14,800 --> 00:00:17,760
יש שלב מקדים של עיבוד נתונים שתמיד צריך לעשות.

9
00:00:18,510 --> 00:00:20,220
כשמקבלים ערכת אימון

10
00:00:20,520 --> 00:00:22,290
של m דוגמאות לא מתויגות, חשוב

11
00:00:22,600 --> 00:00:24,070
תמיד לבצע נירמול

12
00:00:25,330 --> 00:00:26,140
ובהתאם לנתונים שלך,

13
00:00:26,840 --> 00:00:28,540
אולי גם מישקול.

14
00:00:29,620 --> 00:00:30,950
זה דומה מאוד

15
00:00:31,650 --> 00:00:33,250
לנירמול הממוצע ולתהליך שינוי קנה המידה

16
00:00:34,080 --> 00:00:36,580
שיש לנו בלמידה מבוקרת.

17
00:00:36,910 --> 00:00:38,240
למעשה זה בדיוק

18
00:00:38,390 --> 00:00:40,160
אותו תהליך, חוץ מזה שאנחנו

19
00:00:40,310 --> 00:00:41,790
עושים את זה עכשיו על

20
00:00:42,930 --> 00:00:43,670
נתונים לא מתויגים, x1 עד xm.

21
00:00:44,180 --> 00:00:45,530
אז בנירמול של הממוצע

22
00:00:45,720 --> 00:00:47,080
אנחנו מחשבים את הממוצע

23
00:00:47,390 --> 00:00:49,070
של כל תכונה

24
00:00:49,340 --> 00:00:50,900
ואז מחליפים כל תכונה, x,

25
00:00:51,150 --> 00:00:52,680
ב-x מינוס הממוצע שלה,

26
00:00:52,810 --> 00:00:54,120
מה שגורם לכך שהממוצע

27
00:00:54,520 --> 00:00:57,450
של כל תכונה הוא עכשיו אפס.

28
00:00:58,690 --> 00:01:00,690
לגבי המישקול, לפעמים לתכונות השונות יש קני מידה שונים מאוד.

29
00:01:01,540 --> 00:01:03,050
למשל, אם x1

30
00:01:03,080 --> 00:01:04,060
הוא גודל הבית,

31
00:01:04,100 --> 00:01:05,390
ו-x2 הוא מספר חדרי השינה,

32
00:01:05,580 --> 00:01:07,370
להשתמש בדוגמה הקודמת שלנו,

33
00:01:07,480 --> 00:01:08,680
אז אנחנו חייבים לשנות את קני המידה

34
00:01:09,130 --> 00:01:10,540
כך שלכל תכונה יהיה טווח דומה של ערכים.

35
00:01:10,980 --> 00:01:12,490
אז בדומה למה

36
00:01:12,680 --> 00:01:13,860
שהיה לנו עם למידה בפיקוח,

37
00:01:14,060 --> 00:01:16,200
אנחנו לוקחים את (x(i במקום ה-j,

38
00:01:16,680 --> 00:01:17,620
המאפיין ה-j, מחסירים את הממוצע, זו הפעולה הראשונה,

39
00:01:23,250 --> 00:01:25,530
ואז מחלקים ב-sj.

40
00:01:25,890 --> 00:01:27,610
וכאן sj הוא מדד מסוים

41
00:01:28,370 --> 00:01:29,520
של טווח הערכים של התכונה j.

42
00:01:29,610 --> 00:01:30,020
אז זה יכול להיות המקסימום פחות המינימום,

43
00:01:30,080 --> 00:01:31,310
או משהו שיותר נפוץ,

44
00:01:31,890 --> 00:01:33,540
סטיית התקן של התכונה j.

45
00:01:33,640 --> 00:01:35,520
לאחר שעשינו

46
00:01:36,230 --> 00:01:39,480
את עיבוד הנתונים המקדים הזה, הנה מה שעושה אלגוריתם PCA.

47
00:01:40,620 --> 00:01:41,630
ראינו בווידאו הקודם

48
00:01:41,960 --> 00:01:43,050
ש-PCA

49
00:01:43,170 --> 00:01:44,520
מנסה למצוא

50
00:01:44,790 --> 00:01:46,080
תת-מרחב מממד קטן יותר

51
00:01:46,170 --> 00:01:47,500
ולהטיל עליו את הנתונים,

52
00:01:47,650 --> 00:01:49,780
כך שזה ימזער את שגיאת ההיטל הריבועי,

53
00:01:50,540 --> 00:01:51,660
את סכום

54
00:01:51,740 --> 00:01:53,080
שגיאות ההיטל הריבועיים,

55
00:01:53,420 --> 00:01:54,800
ריבוע האורך של

56
00:01:54,870 --> 00:01:56,790
הקווים הכחולים.

57
00:01:57,110 --> 00:01:58,510
אז מה שרצינו ספציפית לעשות

58
00:01:59,210 --> 00:02:02,730
הוא למצוא וקטור, u1,

59
00:02:03,280 --> 00:02:04,750
המציין את הכיוון

60
00:02:05,040 --> 00:02:06,630
או במקרה של שני ממדים אנחנו רוצים

61
00:02:06,880 --> 00:02:08,760
למצוא שני וקטורים, u1 ו-u2

62
00:02:10,640 --> 00:02:12,980
שיגדירו את המישור

63
00:02:13,590 --> 00:02:14,610
שעליו נבצע היטלים של הנתונים.

64
00:02:16,620 --> 00:02:17,920
אז,

65
00:02:18,040 --> 00:02:19,160
כתזכורת מהירה של מה פירושו

66
00:02:19,730 --> 00:02:20,820
של צמצום הממדים של נתונים,

67
00:02:21,490 --> 00:02:22,430
בדוגמה הזו

68
00:02:22,470 --> 00:02:23,560
בצד שמאל קיבלנו

69
00:02:23,680 --> 00:02:26,010
דוגמאות xi, שהן ב-R².

70
00:02:26,300 --> 00:02:28,390
ואנחנו

71
00:02:28,660 --> 00:02:29,500
רוצים למצוא

72
00:02:29,970 --> 00:02:32,400
קבוצה של מספרים zi

73
00:02:33,000 --> 00:02:34,950
ב-R¹, ובעזרתם לייצג את הנתונים שלנו.

74
00:02:36,000 --> 00:02:37,820
זוהי הפחתת מימדים מ-2D ל-1D.

75
00:02:39,020 --> 00:02:41,450
אז ספציפית, אם נעשה היטלים

76
00:02:42,710 --> 00:02:44,080
על הקו האדום הזה,

77
00:02:44,800 --> 00:02:46,320
נצטרך רק מספר אחד

78
00:02:46,450 --> 00:02:48,340
כדי לציין את המיקום של הנקודות על הקו.

79
00:02:48,590 --> 00:02:49,380
אז למספר הזה אנחנו נקרא

80
00:02:50,700 --> 00:02:51,830
z1 או סתם z.

81
00:02:52,020 --> 00:02:54,850
z הוא מספר ממשי, אז הוא כמו וקטור עם ממד אחד.

82
00:02:55,380 --> 00:02:56,650
אז z1 פשוט מתייחס

83
00:02:56,690 --> 00:02:58,080
למרכיב הראשון

84
00:02:58,280 --> 00:03:00,430
של המטריצה אחת על אחת או הוקטור החד-ממדי הזה.

85
00:03:01,670 --> 00:03:03,170
אז אנחנו צריכים

86
00:03:03,490 --> 00:03:05,590
רק מספר אחד כדי לציין את המיקום של נקודה.

87
00:03:06,330 --> 00:03:07,940
אם הדוגמה הזו

88
00:03:08,460 --> 00:03:09,510
כאן היא דוגמה

89
00:03:10,610 --> 00:03:13,160
x1, אז אולי היא תמופה לכאן.

90
00:03:13,900 --> 00:03:15,450
ואם הדוגמה הזו היא x2,

91
00:03:15,680 --> 00:03:17,250
אולי היא ממופה לכאן,

92
00:03:17,530 --> 00:03:18,790
אז הנקודה הזאת כאן

93
00:03:19,060 --> 00:03:20,400
תהיה z1

94
00:03:20,840 --> 00:03:21,920
והנקודה הזאת כאן תהיה

95
00:03:22,080 --> 00:03:24,240
z2, ובדומה לכך

96
00:03:24,620 --> 00:03:26,410
תהיינה לנו נקודות אחרות

97
00:03:26,840 --> 00:03:30,230
עבור שאר הנקודות, נניח x3,

98
00:03:30,510 --> 00:03:32,550
x4, x5 ממופות ל-z5, z4, z3.

99
00:03:34,360 --> 00:03:35,940
אז מה ש-PCA

100
00:03:36,050 --> 00:03:36,830
צריך לעשות הוא

101
00:03:36,930 --> 00:03:38,920
לתת לנו דרך לחשב שני דברים.

102
00:03:39,310 --> 00:03:40,710
הראשון הוא לחשב את הוקטורים האלה,

103
00:03:41,830 --> 00:03:44,970
u1, ובמקרה הזה u1 ו-u2.

104
00:03:45,230 --> 00:03:46,880
והשני הוא

105
00:03:47,130 --> 00:03:48,140
לחשב את המספרים האלה,

106
00:03:49,360 --> 00:03:51,200
z. אז

107
00:03:51,430 --> 00:03:53,910
בדוגמה משמאל אנחנו מצמצמים נתונים מ-2D ל-1D.

108
00:03:55,290 --> 00:03:56,100
ובדוגמה מימין

109
00:03:56,510 --> 00:03:58,100
אנחנו מצמצמים נתונים

110
00:03:58,450 --> 00:04:00,600
מ-3 ממדים,

111
00:04:00,710 --> 00:04:04,840
דהיינו מ-R³, ל-zi, שהם עכשיו דו-ממדיים.

112
00:04:05,390 --> 00:04:07,790
אז הווקטורים zi הם עכשיו דו-ממדיים.

113
00:04:08,450 --> 00:04:09,590
אז הווקטור הוא z1

114
00:04:10,150 --> 00:04:11,410
z2 ככה,

115
00:04:11,640 --> 00:04:12,940
ואנחנו גם צריכים למצוא דרך לחשב

116
00:04:13,670 --> 00:04:15,410
את הייצוגים החדשים של הנתונים, z1

117
00:04:15,570 --> 00:04:17,350
ו-z2.

118
00:04:18,280 --> 00:04:20,350
אז איך מחשבים את הגדלים האלו?

119
00:04:20,520 --> 00:04:21,520
מתברר כי הגזירה המתמטית,

120
00:04:22,490 --> 00:04:23,660
ההוכחה המתמטית,

121
00:04:24,300 --> 00:04:26,020
של מה הם

122
00:04:26,090 --> 00:04:27,970
הערכים הנכונים של u1, u2, z1,

123
00:04:28,290 --> 00:04:29,480
z2 וכן הלאה,

124
00:04:29,690 --> 00:04:31,230
ההוכחה המתמטית הזו

125
00:04:31,480 --> 00:04:32,890
מורכבת מאוד

126
00:04:32,950 --> 00:04:34,620
ומחוץ להיקף של הקורס.

127
00:04:35,280 --> 00:04:37,290
אבל ברגע שעשית את הגזירה הזו,

128
00:04:37,590 --> 00:04:38,590
מתברר שהתהליך

129
00:04:39,350 --> 00:04:40,570
של מציאת הערך

130
00:04:41,200 --> 00:04:42,210
של u1 שזה מה שצריך,

131
00:04:42,950 --> 00:04:43,950
זה לא כל כך קשה,

132
00:04:44,180 --> 00:04:45,640
למרות שההוכחה המתמטית

133
00:04:45,840 --> 00:04:46,940
שהערך הזה הוא הערך הנכון

134
00:04:47,260 --> 00:04:48,450
היא משהו יותר מדי

135
00:04:48,700 --> 00:04:49,960
מסובך בשבילנו.

136
00:04:50,880 --> 00:04:52,070
אז אני פשוט אתאר

137
00:04:52,480 --> 00:04:53,830
את הפרוצדורה המעשית

138
00:04:53,960 --> 00:04:55,250
שצריך ליישם כדי

139
00:04:55,440 --> 00:04:56,450
לחשב את כל

140
00:04:56,570 --> 00:04:57,840
הוקטורים האלה, u1, u2,

141
00:04:58,910 --> 00:05:00,980
z וכו'. הנה הנוהל.

142
00:05:02,070 --> 00:05:02,970
נניח שאנחנו רוצים להקטין את

143
00:05:03,170 --> 00:05:04,220
הנתונים מ-n ממדים

144
00:05:04,840 --> 00:05:05,760
ל-k ממדים. מה שאנחנו

145
00:05:06,760 --> 00:05:07,640
נעשה הוא קודם כל

146
00:05:07,900 --> 00:05:09,400
לחשב משהו שנקרא

147
00:05:09,830 --> 00:05:11,140
מטריצת שונוּת או מטריצת שונוּת משותפת (covariance matrix),

148
00:05:11,700 --> 00:05:13,620
ומטריצת השונוּת מסומנת בדרך כלל

149
00:05:13,820 --> 00:05:15,050
על ידי האות היוונית

150
00:05:15,190 --> 00:05:16,880
סיגמא גדולה, Σ.

151
00:05:18,000 --> 00:05:19,210
זה קצת מבלבל

152
00:05:19,310 --> 00:05:21,080
שסיגמא גדולה נראית בדיוק

153
00:05:21,760 --> 00:05:22,710
כמו הסמל של סיכום.

154
00:05:23,210 --> 00:05:24,620
אז זו

155
00:05:24,700 --> 00:05:26,220
סיגמא שמשמשת

156
00:05:26,420 --> 00:05:29,540
לציון מטריצה וכאן היא סימן של סיכום.

157
00:05:30,510 --> 00:05:32,330
אני מקווה שבשקפים האלה

158
00:05:32,680 --> 00:05:34,190
לא יהיה בלבול לגבי

159
00:05:34,410 --> 00:05:36,340
איזו סיגמא היא מטריצה

160
00:05:36,520 --> 00:05:37,850
ואיזו היא

161
00:05:38,090 --> 00:05:39,620
סמל של סיכום, ואני מקווה

162
00:05:39,940 --> 00:05:41,460
שזה יהיה ברור מההקשר

163
00:05:41,820 --> 00:05:43,510
מתי אני משתמש בכל אחד מהם.

164
00:05:43,740 --> 00:05:44,790
איך מחשבים את המטריצה הזו?

165
00:05:45,530 --> 00:05:46,550
נניח שאנחנו רוצים

166
00:05:47,135 --> 00:05:47,640
לאחסן אותה במשתנה של אוקטבה

167
00:05:48,120 --> 00:05:49,970
שנקרא סיגמא.

168
00:05:50,840 --> 00:05:51,890
מה שצריך לעשות הוא

169
00:05:52,030 --> 00:05:53,660
לחשב משהו שנקרא

170
00:05:54,130 --> 00:05:56,190
הווקטורים העצמיים (eigen vectors) של המטריצה סיגמא.

171
00:05:57,560 --> 00:05:58,450
באוקטבה,

172
00:05:58,590 --> 00:05:59,820
עושים את זה בשימוש

173
00:05:59,970 --> 00:06:01,020
בפקודה הזו, U S V שווה

174
00:06:01,350 --> 00:06:02,600
svd של סיגמא.

175
00:06:03,650 --> 00:06:06,090
svd, אגב, מייצג פירוק ערך סינגולרי.

176
00:06:08,520 --> 00:06:10,590
פירוק ערך סינגולרי הוא דבר

177
00:06:10,790 --> 00:06:12,660
הרבה יותר מתקדם,...

178
00:06:14,450 --> 00:06:15,560
אלגברה ליניארית הרבה יותר מתקדמת

179
00:06:15,800 --> 00:06:16,950
ממה שאתם באמת צריכים

180
00:06:16,950 --> 00:06:18,770
לדעת אבל מתברר

181
00:06:18,950 --> 00:06:20,250
שכאשר סיגמא היא

182
00:06:20,480 --> 00:06:21,800
מטריצת שונוּת יש

183
00:06:21,880 --> 00:06:23,420
כמה דרכים לחשב את

184
00:06:23,610 --> 00:06:25,810
הווקטורים העצמיים האלה

185
00:06:25,960 --> 00:06:27,350
ומי שמומחה באלגברה ליניארית

186
00:06:27,700 --> 00:06:28,610
ושמע כבר על וקטורים עצמיים,

187
00:06:28,860 --> 00:06:30,170
עשוי לדעת

188
00:06:30,350 --> 00:06:31,660
שיש עוד פונקציה באוקטבה

189
00:06:31,990 --> 00:06:33,420
שנקראת eig, שאפשר

190
00:06:33,520 --> 00:06:35,030
להשתמש בה כדי לחשב את אותו הדבר.

191
00:06:35,950 --> 00:06:36,980
וכפי שמתברר

192
00:06:37,370 --> 00:06:39,180
הפונקציה svd

193
00:06:39,290 --> 00:06:40,310
והפונקציה eig נותנות

194
00:06:40,370 --> 00:06:42,170
את אותם וקטורים, אבל svd

195
00:06:42,840 --> 00:06:44,210
היא קצת יותר יציבה מבחינה נומרית

196
00:06:44,540 --> 00:06:45,890
ולכן אני נוטה להשתמש ב-svd, אם כי

197
00:06:46,140 --> 00:06:47,040
יש לי כמה חברים שמשתמשים

198
00:06:47,280 --> 00:06:48,720
בפונקציה eig לעשות

199
00:06:48,920 --> 00:06:50,050
את זה, אבל כאשר

200
00:06:50,130 --> 00:06:51,270
מיישמים את זה על מטריצת השונות

201
00:06:51,750 --> 00:06:52,960
Σ, התוצאה היא זהה.

202
00:06:53,870 --> 00:06:55,070
הסיבה לכך היא כי מטריצת השונות

203
00:06:55,500 --> 00:06:57,250
תמיד מקיימת תכונה מתמטית

204
00:06:57,940 --> 00:07:00,560
הנקראת סימטרית חיובית חצי-מוחלטת.

205
00:07:01,360 --> 00:07:02,140
אתם ממש לא צריכים לדעת

206
00:07:02,280 --> 00:07:03,890
מה זה אומר, אבל svd

207
00:07:05,340 --> 00:07:07,090
ו-eig הן פונקציות שונות,

208
00:07:07,400 --> 00:07:08,670
שכאשר מריצים אותם

209
00:07:08,780 --> 00:07:10,410
על מטריצת שונות,

210
00:07:10,550 --> 00:07:12,080
שניתן להוכיח שהיא תמיד מקיימת

211
00:07:13,190 --> 00:07:15,220
את המאפיין המתמטי הזה, הפונקציות תחזרנה תשובה זהה.

212
00:07:16,580 --> 00:07:19,180
טוב, זה היה כנראה הרבה יותר אלגברה ליניארית ממה שצריך לדעת.

213
00:07:19,260 --> 00:07:22,380
ואם לא באמת קלטתם, לא נורא.

214
00:07:22,560 --> 00:07:23,490
כל מה שאתם צריכים לדעת הוא

215
00:07:24,130 --> 00:07:27,840
שזו היא הפונקציה

216
00:07:28,140 --> 00:07:29,690
שאתם צריבים להריץ באוקטבה.

217
00:07:30,080 --> 00:07:30,550
ואם אתם מיישמים את זה

218
00:07:30,710 --> 00:07:32,120
בשפה אחרת מאשר אוקטבה או MATLAB,

219
00:07:32,710 --> 00:07:33,790
אתם צריכים למצוא

220
00:07:34,190 --> 00:07:35,860
ספריית אלגברה ליניארית

221
00:07:36,730 --> 00:07:37,960
שיכולה לחשב

222
00:07:38,230 --> 00:07:40,460
פירוק ערך סינגולרי,

223
00:07:40,970 --> 00:07:42,680
ויש הרבה ספריות כאלה

224
00:07:43,570 --> 00:07:45,060
כנראה לכל שפות התכנות הגדולות.

225
00:07:45,300 --> 00:07:46,920
ואפשר להשתמש בהן

226
00:07:47,050 --> 00:07:48,920
כדי לחשב את המטריצות U,

227
00:07:49,200 --> 00:07:52,770
S ו-V של המטריצה Σ.

228
00:07:53,340 --> 00:07:54,490
אז בואו נוסיף

229
00:07:54,620 --> 00:07:56,090
עוד כמה פרטים,

230
00:07:56,660 --> 00:07:58,080
מטריצת השונות Σ הזו היא

231
00:07:58,250 --> 00:08:01,480
מטריצה n על n.

232
00:08:02,250 --> 00:08:03,240
קל לראות את זה

233
00:08:03,510 --> 00:08:04,220
כי אם נסתכל על ההגדרה שלה,

234
00:08:05,250 --> 00:08:06,280
אז זה וקטור בממד n על 1

235
00:08:06,660 --> 00:08:08,680
וזו היא

236
00:08:08,920 --> 00:08:10,830
המשוחלפת שלה

237
00:08:11,010 --> 00:08:13,260
שהיא 1 על n,

238
00:08:13,380 --> 00:08:14,480
ולכן המכפלה שלהם

239
00:08:15,150 --> 00:08:15,800
תהיה מטריצה n

240
00:08:16,570 --> 00:08:17,530
על n.

241
00:08:19,100 --> 00:08:22,130
1xn כפול 1xn משוחלף,

242
00:08:22,280 --> 00:08:22,840
זו מטריצה nxn

243
00:08:22,910 --> 00:08:23,710
וכאשר אנו מחברים כמה כאלה

244
00:08:23,840 --> 00:08:26,140
יש לנו עדיין מטריצה nxn.

245
00:08:27,600 --> 00:08:29,920
הפונקציה svd מוציאה פלט של

246
00:08:30,500 --> 00:08:32,580
שלוש מטריצות, U, S,

247
00:08:32,830 --> 00:08:35,070
V. מה שמעניין אותנו הוא המטריצה U.

248
00:08:36,230 --> 00:08:40,160
גם U היא מטריצה nxn.

249
00:08:41,510 --> 00:08:42,280
וכשנסתכל על

250
00:08:42,350 --> 00:08:43,260
העמודות של המטריצה U,

251
00:08:43,480 --> 00:08:45,330
נגלה

252
00:08:45,630 --> 00:08:47,210
כי העמודות

253
00:08:48,570 --> 00:08:50,180
הן בדיוק

254
00:08:50,350 --> 00:08:53,860
אותם וקטורים, u1,

255
00:08:54,260 --> 00:08:56,290
u2 וכן הלאה.

256
00:08:57,640 --> 00:08:59,330
אז U היא מטריצה nxn.

257
00:09:00,910 --> 00:09:01,830
ואם אנחנו רוצים להפחית

258
00:09:02,230 --> 00:09:03,200
את הנתונים מ-n ממדים

259
00:09:03,800 --> 00:09:05,380
ל-k ממדים, מה

260
00:09:05,490 --> 00:09:07,950
שאנחנו צריכים לעשות הוא לקחת את k הוקטורים הראשונים של U.

261
00:09:09,800 --> 00:09:12,670
זה נותן לנו u1 עד

262
00:09:12,860 --> 00:09:14,700
uk שהם

263
00:09:14,780 --> 00:09:16,930
k הכיוונים שאליהם

264
00:09:17,200 --> 00:09:19,770
אנחנו רוצים לבצע הטלות של הנתונים.

265
00:09:20,090 --> 00:09:21,640
אז התהליך הוא:

266
00:09:22,410 --> 00:09:24,170
מריצים

267
00:09:24,490 --> 00:09:25,580
את פונקצית svd ומקבלים

268
00:09:25,840 --> 00:09:27,140
את המטריצה U. נקרא

269
00:09:27,530 --> 00:09:29,080
לעמודות האלה u1-un.

270
00:09:30,580 --> 00:09:31,620
שוב, לסכם

271
00:09:31,830 --> 00:09:32,520
את התיאור של

272
00:09:32,540 --> 00:09:34,550
שאר התהליך, מריצים את

273
00:09:35,320 --> 00:09:36,940
פונקצית האלגברה הליניארית svd

274
00:09:37,240 --> 00:09:38,650
ומקבלים מטריצות U, S,

275
00:09:38,830 --> 00:09:41,320
ו-V. נשתמש

276
00:09:41,900 --> 00:09:44,460
ב-k העמודות הראשונות

277
00:09:45,050 --> 00:09:46,310
של המטריצה U ונקבל u1-uk.

278
00:09:48,710 --> 00:09:49,460
אז הדבר השני שאנחנו צריכים

279
00:09:49,700 --> 00:09:53,730
הוא לקחת את

280
00:09:54,110 --> 00:09:55,430
ערכת הנתונים המקוריים x

281
00:09:55,630 --> 00:09:57,080
שהם ב-Rⁿ ולמצוא

282
00:09:57,250 --> 00:09:59,210
ייצוג עם ממד נמוך יותר z

283
00:09:59,420 --> 00:10:01,280
ב-Rk עבור הנתונים האלה.

284
00:10:01,570 --> 00:10:02,800
אז אנחנו

285
00:10:02,900 --> 00:10:03,930
עושים את זה על ידי

286
00:10:04,180 --> 00:10:06,690
לקיחת k העמודות הראשונות של המטריצה U.

287
00:10:08,330 --> 00:10:09,790
בנינו את המטריצה הזו.

288
00:10:11,060 --> 00:10:13,040
העמדנו את u1, u2

289
00:10:14,170 --> 00:10:16,690
וכן הלאה עד uk בעמודות.

290
00:10:17,350 --> 00:10:19,120
בעצם לקחנו

291
00:10:19,280 --> 00:10:20,350
את החלק הזה של המטריצה,

292
00:10:20,530 --> 00:10:22,260
k העמודות הראשונות של המטריצה הזו.

293
00:10:23,420 --> 00:10:25,370
אז זו

294
00:10:25,600 --> 00:10:26,920
מטריצה

295
00:10:27,200 --> 00:10:28,580
n על k.

296
00:10:29,500 --> 00:10:30,690
אני אתן למטריצה הזאת שם.

297
00:10:30,880 --> 00:10:32,200
אני אקרא למטריצה הזו

298
00:10:32,930 --> 00:10:35,760
U סימן תחתון "מופחתת",

299
00:10:36,090 --> 00:10:38,620
מין גרסה מופחתת של המטריצה U.

300
00:10:39,140 --> 00:10:41,250
ואנחנו נשתמש בה כדי להקטין את המימד של הנתונים שלנו.

301
00:10:43,040 --> 00:10:43,950
והדרך שבה נחשב את z היא זו:

302
00:10:44,250 --> 00:10:45,960
z שווה

303
00:10:46,220 --> 00:10:49,570
U מופחתת משוחלפת

304
00:10:50,010 --> 00:10:52,030
כפול x. או לחילופין,

305
00:10:52,510 --> 00:10:53,860
בואו נרשום מה פירוש משוחלפת.

306
00:10:54,630 --> 00:10:55,910
כשמשחלפים את

307
00:10:56,010 --> 00:10:57,920
המטריצה U המופחתת,

308
00:10:58,010 --> 00:11:00,680
מקבלים את וקטורי העמודה האלה כשורות.

309
00:11:00,950 --> 00:11:04,540
אנחנו מקבלים את u1 משוחלף עד uk משוחלף.

310
00:11:07,060 --> 00:11:08,860
מכפילים את זה ב-x,

311
00:11:09,700 --> 00:11:10,740
וככה מקבלים את

312
00:11:10,920 --> 00:11:12,670
הוקטור z. רק

313
00:11:12,740 --> 00:11:14,280
לוודא שהממדים הם מה שרצינו,

314
00:11:15,370 --> 00:11:16,380
המטריצה הזו כאן

315
00:11:16,560 --> 00:11:17,450
היא k על n

316
00:11:18,270 --> 00:11:19,350
ו-x הוא

317
00:11:19,420 --> 00:11:20,530
n על 1

318
00:11:20,750 --> 00:11:21,810
ולכן המכפלה

319
00:11:22,320 --> 00:11:24,330
היא k על 1.

320
00:11:24,820 --> 00:11:27,920
ולכן z הוא

321
00:11:28,790 --> 00:11:29,810
k-ממדי, הוא וקטור

322
00:11:30,010 --> 00:11:31,230
בעל מימד k, וזה בדיוק

323
00:11:32,000 --> 00:11:33,180
מה שרצינו.

324
00:11:33,550 --> 00:11:34,640
וכמובן הx-ים האלה

325
00:11:34,890 --> 00:11:36,010
יכולים להיות דוגמאות

326
00:11:36,100 --> 00:11:36,970
ממערך האימון, או

327
00:11:37,540 --> 00:11:38,750
מסדרת האימות או

328
00:11:38,980 --> 00:11:40,330
מסדרת המבחן.

329
00:11:40,500 --> 00:11:41,590
אז למשל

330
00:11:41,930 --> 00:11:43,830
דוגמת ההדרכה i,

331
00:11:44,260 --> 00:11:45,910
אפשר לכתוב אותה כ-xi,

332
00:11:47,270 --> 00:11:48,430
והתוצאה

333
00:11:48,510 --> 00:11:50,080
היא zi.

334
00:11:50,940 --> 00:11:53,140
לסיכום, הנה

335
00:11:53,460 --> 00:11:54,820
אלגוריתם PCA בשקופית אחת.

336
00:11:56,250 --> 00:11:58,200
לאחר נירמול שמבטיח

337
00:11:58,420 --> 00:11:59,230
שממוצע כל תכונה הוא אפס

338
00:11:59,610 --> 00:12:01,420
ולפעמים גם מישקול

339
00:12:02,280 --> 00:12:03,780
שחייבים לעשות אם

340
00:12:03,890 --> 00:12:05,820
לתכונות יש טווחים שונים מאוד של ערכים.

341
00:12:06,620 --> 00:12:08,610
לאחר העיבוד הזה מראש, אנחנו מחשבים

342
00:12:09,130 --> 00:12:12,010
את מטריצת השונות Σ,

343
00:12:12,240 --> 00:12:14,070
ודרך אגב

344
00:12:14,210 --> 00:12:16,340
אם הנתונים

345
00:12:16,610 --> 00:12:17,780
נמצאים במטריצה,

346
00:12:18,030 --> 00:12:18,960
אם הנתונים

347
00:12:19,230 --> 00:12:22,580
נתונים בשורות כמו כאן,

348
00:12:22,780 --> 00:12:24,370
אם יש לנו מטריצה X

349
00:12:24,960 --> 00:12:26,190
שהיא סדרת האימון שלנו,

350
00:12:27,030 --> 00:12:28,830
שבה השורות הן x1 משוחלפת,

351
00:12:29,210 --> 00:12:30,400
עד xm משוחלפת,

352
00:12:31,530 --> 00:12:32,700
אז לחישוב המטריצה Σ

353
00:12:33,020 --> 00:12:36,040
יש יישום וקטורי פשוט.

354
00:12:37,390 --> 00:12:38,980
היישום באוקטבה,

355
00:12:39,440 --> 00:12:41,130
הוא סיגמא שווה 1

356
00:12:41,670 --> 00:12:45,250
חלקי m, כפול X -

357
00:12:45,550 --> 00:12:46,440
שהיא המטריצה כאן -

358
00:12:47,250 --> 00:12:50,770
משוחלפת, כפול X,

359
00:12:50,980 --> 00:12:53,320
והביטוי הפשוט הזה

360
00:12:53,570 --> 00:12:55,070
הוא היישום הוקטורי

361
00:12:55,220 --> 00:12:56,910
של חישוב המטריצה Σ.

362
00:12:58,020 --> 00:12:59,020
אני לא אוכיח היום

363
00:12:59,160 --> 00:13:00,600
שזה נכון, אם תרצו,

364
00:13:00,740 --> 00:13:02,460
תוכלו לבחון את זה בעצמכם

365
00:13:02,870 --> 00:13:03,900
על ידי כך שתנסו

366
00:13:03,980 --> 00:13:05,100
באוקטבה ותוודאו

367
00:13:05,840 --> 00:13:06,890
ששני היישומים האלה

368
00:13:06,920 --> 00:13:10,050
נותנים אותן תשובות, או אתם יכולים לנסות להוכיח את זה מתמטית.

369
00:13:11,250 --> 00:13:12,330
בכל מקרה, זהו

370
00:13:12,430 --> 00:13:14,580
יישום וקטורי נכון של איך לחשב את Σ.

371
00:13:16,480 --> 00:13:17,570
בשלב הבא, אנו מריצים את פונקצית svd

372
00:13:17,920 --> 00:13:19,050
כדי לקבל את U, S,

373
00:13:19,250 --> 00:13:20,840
ו-V. ואז אנחנו

374
00:13:21,100 --> 00:13:22,720
לוקחים את k

375
00:13:23,050 --> 00:13:24,450
העמודות הראשונות של

376
00:13:24,660 --> 00:13:26,550
המטריצה U, "מפחיתים" אותה,

377
00:13:26,650 --> 00:13:28,540
וזה מגדיר

378
00:13:28,740 --> 00:13:29,980
איך אנחנו מחשבים

379
00:13:30,290 --> 00:13:31,600
מתוך וקטור התכונות x

380
00:13:31,850 --> 00:13:34,340
את הווקטור מופחת הממדים z.

381
00:13:34,540 --> 00:13:35,760
ובדומה לK-מרכזים,

382
00:13:36,090 --> 00:13:37,860
אנחנו מיישמים את PCA

383
00:13:38,030 --> 00:13:40,300
עם וקטורים x שנמצאים ב-Rⁿ.

384
00:13:41,100 --> 00:13:43,990
אנחנו לא משתמשים בקונבנציה של x₀=1.

385
00:13:44,200 --> 00:13:46,080
אז זהו

386
00:13:46,990 --> 00:13:48,680
אלגוריתם PCA.

387
00:13:50,120 --> 00:13:51,380
דבר אחד שלא עשיתי

388
00:13:51,590 --> 00:13:53,190
הוא לתת הוכחה מתמטית

389
00:13:53,520 --> 00:13:54,600
שמה שעשינו באמת נותן

390
00:13:54,970 --> 00:13:56,560
היטל k-מימדי

391
00:13:57,230 --> 00:13:58,730
של הנתונים, על

392
00:13:58,870 --> 00:14:00,620
תת-מרחב k-ממדי שבאמת

393
00:14:02,170 --> 00:14:04,800
ממזער את שגיאת ההיטל הריבועי.

394
00:14:05,110 --> 00:14:07,170
הוכחה של זה היא מעבר להיקף של הקורס הזה.

395
00:14:07,700 --> 00:14:09,110
למרבה המזל אלגוריתם PCA

396
00:14:09,470 --> 00:14:10,940
ניתן ליישום

397
00:14:11,320 --> 00:14:12,510
בלא יותר מדי שורות קוד.

398
00:14:13,190 --> 00:14:14,510
באוקטבה או

399
00:14:14,640 --> 00:14:16,120
ב-MATLAB, תקבלו

400
00:14:16,520 --> 00:14:17,590
אלגוריתם יעיל מאוד

401
00:14:18,110 --> 00:14:19,710
להפחתת מימדים.

402
00:14:22,430 --> 00:14:23,850
אז זה היה אלגוריתם PCA.

403
00:14:25,010 --> 00:14:26,290
דבר אחד שלא עשיתי

404
00:14:26,840 --> 00:14:28,420
הוא לתת הוכחה מתמטית

405
00:14:29,170 --> 00:14:30,360
ש-u1 ו-u2 וכן הלאה

406
00:14:30,720 --> 00:14:31,630
ו-z וכן הלאה

407
00:14:31,770 --> 00:14:32,830
שיוצאים

408
00:14:32,980 --> 00:14:34,330
מהתהליך הזה הם באמת

409
00:14:34,680 --> 00:14:35,870
הבחירות שימזערו

410
00:14:36,500 --> 00:14:37,800
את שגיאת ההיטל בריבוע.

411
00:14:38,140 --> 00:14:39,350
נכון, זכרו שאמרנו

412
00:14:39,610 --> 00:14:40,660
ש-PCA מנסה

413
00:14:40,960 --> 00:14:42,170
למצוא משטח או קו

414
00:14:42,570 --> 00:14:43,690
שעליו לעשות היטל של הנתונים

415
00:14:44,280 --> 00:14:46,340
כך ששגיאת ההיטל המרובע תמוזער.

416
00:14:46,700 --> 00:14:48,610
אז לא הוכחתי כי זה,

417
00:14:49,140 --> 00:14:50,680
וההוכחה המתמטית

418
00:14:50,970 --> 00:14:52,520
הוכחה של זה היא מעבר להיקף של הקורס הזה.

419
00:14:53,170 --> 00:14:55,550
אבל למרבה המזל אלגוריתם PCA ניתן

420
00:14:55,730 --> 00:14:58,890
ליישום בלא יותר מדי שורות קוד באוקטבה.

421
00:14:59,350 --> 00:15:00,740
ואם תיישמו אותו

422
00:15:01,430 --> 00:15:02,560
הוא יעבוד,

423
00:15:02,770 --> 00:15:03,730
יעבוד טוב,

424
00:15:04,710 --> 00:15:05,940
ואם תיישמו את האלגוריתם הזה,

425
00:15:06,500 --> 00:15:09,220
תקבלו אלגוריתם צמצום מימדים יעיל מאוד

426
00:15:09,780 --> 00:15:10,650
שעושה את הדבר הנכון

427
00:15:11,050 --> 00:15:13,460
של מזעור שגיאת ההיטל המרובע הזו.