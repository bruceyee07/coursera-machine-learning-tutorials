בשלב זה, כבר ראינו את כל החלקים העיקריים של אלגוריתם מערכת ההמלצות או אלגוריתם הסינון המשותף. בסרטון הזה אני רוצה רק לשתף אתכם בפרט יישומי אחד אחרון, שהוא נירמול אל הממוצע, שיכול לפעמים לגרום לאלגוריתם לעבוד קצת יותר טוב. כדי להתחיל לדון ברעיון של נירמול לפי הממוצע, הבה נבחן דוגמה שבה יש משתמשים שלא דירגו סרטים. אז בנוסף לארבעת המשתמשים שלנו, אליס, בוב, קרול ודייב, הוספתי משתמשת חמישית, חוה, שלא דירגה סרטים בכלל. בואו נראה מה יעשה אלגוריתם הסינון המשותף שלנו על המשתמשת הזו. נניח ש-n שווה 2 דהיינו אנחנו נלמד שתי תכונות ואנחנו נלמד גם וקטור פרמטרים ⁽θ⁽⁵, שהוא ב-R2, כי כזכור עכשיו הוקטורים שלנו הם ב-Rn ולא ב-Rn+1, נלמד את וקטור הפרמטרים ⁽θ⁽⁵ עבור המשתמשת מספר 5 שלנו, חוה. אז אם נסתכל על הביטוי הראשון של מטרת האופטימיזציה, המשתמשת חוה לא דירגה שום סרט, ולכן אין שום סרט שלגביו (r(i,j שווה 1 עבור המשתמשת חוה ולכן המונח הראשון אינו משחק תפקיד בקביעת ⁽θ⁽⁵ כי אין סרטים שחוה דירגה. אז המונח היחיד שמשפיע על ⁽θ⁽⁵ הוא המונח הזה. אז אנחנו אומרים שאנחנו רוצים לבחור וקטור פרמטרים ⁽θ⁽⁵ כך שמונח ההסדרה האחרון הוא קטן ככל האפשר. במילים אחרות אנחנו רוצים למזער את λ/2 כפול ⁽θ₁⁽⁵ בריבוע ועוד ⁽θ₂⁽⁵ בריבוע, שהוא החלק של ביטוי ההסדרה ששייך למשתמש 5, וכמובן אם המטרה היא למזער את המונח הזה, אז מה שנקבל הוא פשוט ש-⁽θ⁽⁵ שווה 0 0. כי מונח ההסדרה מכוון אותנו להגדיר פרמטרים הקרובים ל-0, ואם אין נתונים שמנסים להרחיק את הפרמטרים מ-0, כי הביטוי הראשון כמו שאמרנו איננו משפיע על ⁽θ⁽⁵, אנחנו פשוט נקבל ⁽θ⁽⁵ שווה לווקטור של אפסים. אז כשננסה לחזות איך משתמש 5 ידרג כל סרט, נקבל ⁽θ⁽⁵⁾ᵀx⁽ⁱ, וזה, עבור כל i, פשוט יהיה שווה לאפס. כי ⁽θ⁽⁵ הוא 0 בלי קשר ל-x, ולכן המכפלה הפנימית תהיה שווה ל-0. ומה שנקבל לפיכך הוא שאנחנו ננבא שחוה תדרג כל סרט וסרט ב-0 כוכבים. אבל זה לא נראה שימושי במיוחד, נכון? אני מתכוון, בואו נסתכל על סרטים שונים, לדוגמא אהבה סופסוף, הסרט הראשון, כמה מהצופים דירגו את זה ב-5 כוכבים. וגם עבור חרבות נגד קראטה, מישהו דירג את זה כ-5 כוכבים. אז אנשים שונים אוהבים סרטים שונים. זה נראה לא שימושי פשוט לחזות שחוה תדרג את כל הסרטים ב-0 כוכבים. ולמעשה אם אנחנו צופים שחוה תדרג כל סרט ב-0 כוכבים, אין לנו בעצם שום דרך טובה להמליץ לה על שום סרט, כי כל הסרטים האלה מקבלים בדיוק אותו דירוג צפוי עבור חוה, אז אין שום סרט מסוים עם דירוג צפוי גבוה יותר שעליו אנחנו יכולים להמליץ לה, אז זה לא הכי טוב. הרעיון של נירמול לפי הממוצע יאפשר לנו לתקן את הבעיה. אז כך זה עובד. הרשו לי כמו קודם לקבץ את כל הדירוגים של כל הסרטים לתוך המטריצה Y, פשוט לקחת את כל הדירוגים ולקבץ אותם לתוך המטריצה Y. והטור הזה כאן שכולו סימני שאלה מתאים לחווה שלא דירגה אף סרט. עכשיו כדי לבצע נירמול לפי הממוצע אנחנו נחשב את הדירוג הממוצע שכל סרט קיבל. ונאחסן את זה בווקטור שנקרא לו μ - מיו. אז הסרט הראשון קיבל פעמיים 5 כוכבים ופעמיים 0 כוכבים, הממוצע של זה הוא דירוג של 2.5 כוכבים. לסרט השני היה ממוצע של 2.5 כוכבים וכן הלאה. לסרט האחרון היו דירוגים של 0, 0, 5, 0. והממוצע של 0, 0, 5, 0, הוא דירוג של 1.25. ועכשיו נסתכל על כל הדירוגים של הסרטים ונחסר מכל אחד את הדירוג הממוצע. אז מהאיבר הראשון, 5, אני מחסר 2.5 וזה נותן לי 2.5. ומהאיבר השני, 5, נחסר 2.5, ונקבל 2.5. ומה-0, 0, נחסר 2.5 ונקבל 2.5-, 2.5-. במילים אחרות, מה שאנחנו עושים הוא לקחת את המטריצה של דירוגי הסרטים, את המטריצה Y, ולחסר מכל שורה את הדירוג הממוצע של הסרט. בקיצור אנחנו פשוט מנרמלים כל סרט כך שיהיה לו דירוג ממוצע של אפס. אז רק דוגמה אחת אחרונה. אם תסתכלו בשורה האחרונה, 0 0 5 0. אנחנו מחסרים 1.25, ולכן מקבלים את הערכים האלה כאן. וכמובן סימני השאלה נשארים סימני שאלה. אז לכל סרט במטריצה החדשה הזו Y יש דירוג ממוצע של 0. ועכשיו אנחנו ניקח את הדירוגים האלה, ובהם נשתמש לאלגוריתם הסינון השיתופי. אנחנו מעמידים פנים שאלה היו הנתונים שקיבלנו מהמשתמשים, מעמידים פנים שאלה הם הדירוגים שקיבלנו למעשה מהמשתמשים, ואנחנו נשתמש בהם כסדרת הקלט שבעזרתה נלמד את הפרמטרים θj ואת התכונות xi - מתוך הדירוגים האלה המנורמלים לפי הממוצע של הסרטים. ועכשיו כאשר אנחנו רוצים לבצע תחזית של דירוג של סרט, הנה מה שעלינו לעשות: עבור המשתמש j על הסרט i, אנחנו נעשה ניבוי של ⁽θ⁽ʲ⁾ᵀx⁽ⁱ כאשר x ו-θ הם הפרמטרים שלמדתי מסדרת הנתונים המנורמלת לפי הממוצע, אבל מכיוון שעל סדרת הנתונים הזו אנחנו הפחתנו את הממוצע, אז עכשיו על מנת לעשות חיזוי על הסרט i, עלינו להוסיף בחזרה את הממוצע, ולכן נחבר בחזרה את μi. אז זו תהיה התחזית שלנו. שוב - מכיוון שחיסרנו את הממוצע מסדרת האימון, לכן כאשר אנו מבצעים תחזיות אנחנו צריכים להוסיף בחזרה את הממוצע עבור הסרט i. אז בפרט, לגבי משתמש 5 שהוא חוה, אותו טיעון עדיין חל כמו בשקופית הקודמת, במובן שחווה לא דירגה שום סרט ולכן הפרמטרים שיילמדו עבור משתמש 5 הם עדיין 0, 0. אז מה שנקבל הוא זה, על סרט מסוים i אנחנו צופים שחוה תדרג אותו כ-⁽θ⁽⁵⁾ᵀx⁽ⁱ פלוס מה שצריך להוסיף חזרה שהוא μi, והמרכיב הראשון שווה לאפס, כי ⁽θ⁽⁵ שווה לאפס. אז על הסרט i, אנחנו נחזה את μi. וזה באמת הגיוני. זה אומר שאת סרט 1 אנחנו צופים שחווה תדרג כ-2.5. את סרט 2 אנחנו צופים שחווה תדרג כ-2.5. את סרט 3 אנחנו צופים שחווה תדרג כ-2 וכן הלאה. זה באמת הגיוני, כי זה אומר שאם חווה לא דירגה סרטים ואנחנו פשוט לא יודעים שום דבר על המשתמשת החדשה הזו חוה, כל מה שאנחנו יכולים לעשות הוא פשוט לחזות עבור כל אחד מהסרטים את הדירוג הממוצע של הסרטים האלה. לבסוף, כהערה צדדית, בסרטון הזה דיברנו על נירמול לפי הממוצע, שבו נירמלנו כל שורה של המטריצה y כך שיהיה לה ממוצע 0. אם יש לנו גם סרטים שאין להם שום דירוג, זה מקביל למשתמש שלא דירג שום דבר, אבל אם יש סרטים ללא דירוגים, אפשר גם לשחק עם גירסאות של האלגוריתם, שבהם מנרמלים את העמודות כך שיהיה להם ממוצע אפס, במקום לנרמל את השורות לאפס, אם כי זה אולי פחות חשוב, כי אם באמת יש סרט ללא דירוג, אולי פשוט לא צריך להמליץ על הסרט לאף אחד ממילא. ולכן טיפול במקרה של משתמש שלא דירג שום דבר עשוי להיות חשוב יותר מאשר לטפל במקרה של סרט שלא קיבל שום דירוג. אז לסיכום, כך אפשר לעשות נורמליזציה לממוצע כמין שלב עיבוד מראש עבור אלגוריתם סינון שיתופי. ובהתאם למערך הנתונים שלנו, הפעולה הזו עשויה לגרום לעיתים לשיפור הביצועים של היישום.