עבור רגרסיה ליניארית, דיברנו כבר על שני אלגוריתמי למידה. האחד מבוסס על ירידה במדרון והשני מבוסס על המשוואה הנורמלית. בסרטון הזה ניקח את שני האלגוריתמים ונכליל אותם למקרה של רגרסיה ליניארית מוסדרת. הנה יעד האופטימיזציה שהגענו אליו בפעם שעברה עבור רגרסיה ליניארית מוסדרת. החלק הראשון הוא המטרה הרגילה שלנו עבור רגרסיה ליניארית. וחוץ מזה יש לנו את מונח ההסדרה הנוסף, שבו למבדה הוא הפרמטר שלנו, והיינו רוצים למצוא את הפרמטרים תטא שממזערים את פונקצית העלות הזו, פונקציית העלות המוסדרת הזו, J של תטא. בעבר, השתמשנו בירידה במדרון עבור פונקציית העלות המקורית ללא מונח ההסדרה. והשתמשנו באלגוריתם הבא, עבור רגרסיה ליניארית רגילה, ללא הסדרה, חזרנו שוב ושוב ועדכנו את הפרמטרים תטא-j כך: עבור j שווה 0, 1, 2, ועד n. תרשו לי לקחת את זה ופשוט לכתוב את המקרה עבור תטא-0 בנפרד. אני פשוט הולך לכתוב את העדכון עבור תטא-0 בנפרד מאשר העדכון עבור הפרמטרים 1, 2, 3, וכן הלאה עד n. וכך זה, אני לא שיניתי כאן שום דבר עדיין, נכון? זה אותו דבר רק שהעדכון עבור תטא-0 כתוב בנפרד מן העדכונים עבור תטא-1, תטא-2, תטא-3, עד תטא-n. והסיבה שאני רוצה לעשות את זה היא כי כפי שאתם אולי זוכרים עבור רגרסיה ליניארית מוסדרת, אנו קונסים את הפרמטרים תטא-1, תטא-2, וכן הלאה עד תטא-n. אבל אנחנו לא קונסים את תטא-0. אז כאשר נשנה את האלגוריתם הזה עבור רגרסיה ליניארית מוסדרת, אנחנו עומדים לטפל בתטא-אפס מעט אחרת. למעשה, אם אנחנו רוצים לקחת את האלגוריתם הזה ולשנות אותו ולהשתמש במטרה המוסדרת, כל מה שאנחנו צריכים לעשות זה לקחת את המונח הזה כאן למטה ולשנות אותו כדלקמן. ניקח את המונח הזה ונוסיף לו "מינוס למבדה חלקי m כפול תטא j". ואם נעשה את זה, אנחנו מקבלים ירידה במדרון שמנסה למזער את פונקצית העלות המוסדרת J של תטא. ובאופן קונקרטי, אני לא הולך לעשות כאן מתמטיקה כדי להוכיח את זה, אבל באופן קונקרטי אם מסתכלים על המונח הזה שכתבתי כאן בסוגריים מרובעים, אם אתה יודע מספיק חשבון דיפרנציאלי אפשר להוכיח כי המונח הזה הוא הנגזרת החלקית ביחס ל-J של תטא על פי ההגדרה החדשה של J של תטא עם מונח ההסדרה. ושימו לב שהמונח הזה כאן למעלה שמסביבו אני מצייר תיבה בטורקיז, זו עדיין הנגזרת החלקית על פי תטא אפס של J של תטא. אם תסתכלו על העדכון עבור תטא j, אפשר להראות משהו מעניין מאוד. מה שקורה הוא שתטא j מתעדכן כתטא j מינוס אלפא כפול המונח האחר הזה כאן שתלוי בתטא j. אז אם נקבץ את כל התנאים התלויים בתטא j, אפשר לראות שהעדכון הזה יכול להיכתב באופן שקול כדלקמן. וכל מה שעשיתי היה להוסיף תטא j כאן, אז תטא j כפול 1. והמונח הזה כאן הוא למבדה חלקי m, יש כאן גם אלפא, אז מה שיוצא בסוף הוא אלפא כפול למבדה חלקי m כפול תטא j. והמונח הזה כאן, 1 פחות אלפא כפול למבדה חלקי m, הוא מונח מעניין למדי. יש לו השפעה די מעניינת. המונח הזה, 1 פחות אלפא כפול למבדה חלקי m, יהיה מספר שהוא בדרך כלל קצת פחות מאחת, כי אלפא כפול למבדה חלקי m הוא חיובי, ובדרך כלל אם שיעור הלמידה אלפא הוא קטן ואם m הוא גדול, הוא בדרך כלל יוצא די קטן. אז המונח הזה כאן יהיה מספר שהוא בדרך כלל קצת קטן מ-1, אז בואו נחשוב עליו כעל משהו כמו 0.99, נניח. ולכן ההשפעה של העדכון שלנו לתטא j היא שאנחנו נאמר משהו כמו שתטא j מקבל ערך של תטא j כפול 0.99, ברור? תטא j כפול 0.99 יש לו את ההשפעה של הקטנה קטנה של תטא j. אז זה עושה את תטא j קצת יותר קטן. זה מקטין קצת את הנורמה הריבועית של תטא - הפרמטרים נעשים יותר קטנים. והמונח השני כאן, הוא ממש אותו מונח של העדכון המקורי של הירידה במדרון שהיה לנו, לפני שהוספנו את כל ענייני ההסדרה. אז אני מקווה שהעדכון הזה נראה הגיוני. כאשר אנו משתמשים ברגרסיה ליניארית מוסדרת, מה שאנו עושים הוא בכל איטרציה, אנחנו מכפילים את תטא j במספר שהוא קצת קטן מ-1, כך שזה מקטין קצת את הפרמטר, ואז אנחנו עושים עדכון דומה למה שעשינו בעבר. כמובן זו רק האינטואיציה מאחורי מה שהעדכון המסוים הזה עושה. מבחינה מתמטית מה שהוא עושה הוא בדיוק ירידה במדרון על פונקציית העלות J של תטא שהגדרנו בשקופית הקודמת, זו המשתמשת במונח ההסדרה. ירידה במדרון הייתה רק אחד משני האלגוריתמים שלנו עבור התאמת מודל רגרסיה לינארית. האלגוריתם השני היה זה המבוסס על המשוואה הנורמלית, כאשר מה שעשינו היה שיצרנו את מטריצת העיצוב X שבה כל שורה מתאימה לדוגמת אימון אחת. ויצרנו וקטור y, וקטור, וקטור m ממדי. שהכיל את התוויות של סדרת האימון. זאת אומרת ש-X הוא מטריצה עם ממדים (m x (n + 1, ואילו y הוא וקטור מממד m. וכדי למזער את פונקצית העלות J, ראינו שאחת מהדרכים לעשות את זה היא להגדיר את תטא להיות שווה לזה. זוכרים, ההופכי של (X משוחלפת כפול X), כפול X משוחלפת כפול y. אני משאיר כאן מקום כדי למלא דברים כמובן. ומה שהערך הזה עבור תטא עושה הוא למזער את פונקצית העלות J של תטא, הפונקציה ללא הסדרה. כעת, כאשר אנו כן משתמשים בהסדרה, אם ננסה לגזור ולמצוא את המינימום, ורק כדי לתת לכם תחושה איך עושים את החישוב הזה, הדרך בה עושים את זה היא לעשות נגזרות חלקיות לגבי כל פרמטר. להשוות אותן לאפס, ואז לעשות קצת מתמטיקה ואפשר להראות שזו נוסחה כמו זו שממזערת את פונקציית העלות. וכפי שנראה, אם כן משתמשים בהסדרה, אז הנוסחה הזו משתנה כדלקמן. בתוך הסוגריים האלה, נכניס מין מטריצה כזאת. 0, 1, 1, 1, וכן הלאה, 1 באלכסון, עד לתחתית. אז הדבר הזה כאן הוא מטריצה שהאיבר השמאלי העליון שלה הוא 0. יש 1-ים על האלכסון, ואפסים בכל המקומות האחרים במטריצה הזו. אני מצייר את זה לא הכי יפה בעולם. אבל לדוגמה, אם n = 2, אז המטריצה הזו תהיה שלוש על שלוש. באופן כללי יותר, המטריצה היא בעלת ממדים (n + 1) על (n + 1). אז אם n = 2, אז המטריצה הזו נהיית משהו שנראה ככה. פה יש 0, וחוץ מזה יש 1 על האלכסונים, ו-0 על שאר המטריצה. ושוב, אני לא הולך להראות את תהליך הגזירה, שהיא קצת ארוכה ומסובכת, אבל אפשר להוכיח שאם אנחנו משתמשים בהגדרה החדשה של J של תטא עם האיבר של ההסדרה, אז הנוסחה החדשה הזו היא זו שנותנת את המינימום הגלובלי של J של תטא. לפני שנסיים אני רוצה רק לתאר במהירות את הנושא של אי-הפיכות. זה חומר מתקדם יחסית, אז תראו את הנושא כאופציונלי. ואל תהססו לדלג על זה, או אם אתם מקשיבים לזה וזה לא נשמע לכם ממש הגיוני, אל תדאגו בקשר לזה. אבל קודם לכן, כשדיברתי על שיטת המשוואה הנורמלית, גם אז היה לנו סרטון אופציונלי בנושא אי ההפיכות. אז זה עוד חלק אופציונלי כזה, סוג של הרחבה לוידאו האופציונלי הקודם בקשר לאי הפיכות. עכשיו, תחשבו על מקרה שבו m, מספר הדוגמאות, קטן או שווה ל- n, שהוא מספר התכונות. אם יש לכם פחות דוגמאות מאשר תכונות, אז המטריצה הזו, X משוחלפת כפול X, תהיה בלתי הפיכה, או סינגולרית. או מונח אחר עבור זה הוא שהמטריצה תהיה מנוונת. ואם תיישמו את זה באוקטבה בכל מקרה ותשתמשו בפונקציה pinv שעושה פסאודו אינוורט, היא בעצם תשתדל לעשות את הדבר הנכון, אבל זה לא ברור שהתשובה הנכונה תיתן לכם פונקצית השערה טובה מאוד, למרות שמספרית פונקציה pinv באוקטבה תיתן תוצאה שהיא די הגיונית. אבל אם הייתם עושים את זה בשפה אחרת, או אם הייתם מנסים למצוא את ההופכי הרגיל, שבאוקטבה נעשה עם הפונקציה inv, כשננסה לקבל את ההופכי הרגיל של X משוחלפת כפול X אז במקרה הזה נגלה ש-X משוחלפת כפול X היא סינגולרית, בלתי הפיכה, ואם תעשו את זה בשפות תכנות שונות באמצעות איזושהי ספריית אלגברה ליניארית ותנסו למצוא את ההופכי של המטריצה הזו, הפונקציה פשוט תיכשל כי המטריצה אינה הפיכה, או סינגולרית. למרבה המזל, ההסדרה מטפלת גם בזה בשבילנו. ולמעשה, כל עוד פרמטר ההסדרה למבדה הוא ממש גדול מ-0, אפשר להוכיח כי המטריצה הזו, X משוחלפת כפול X פלוס למבדה כפול המטריצה הזו, אפשר להוכיח שהמטריצה הזו לא תהיה סינגולרית ושהיא תהיה הפיכה. אז ההסדרה גם מטפלת בסוגיה של אי-ההפיכות של המטריצה X משוחלפת כפול X. אז עכשיו אתם יודעים איך ליישם רגרסיה ליניארית עם הסדרה. באמצעות זה תוכלו להימנע מהתאמת-יתר גם אם יש לכם הרבה תכונות וקבוצת אימון קטנה יחסית. וזה אמור לעזור לכם לגרום לרגרסיה ליניארית לעבוד הרבה יותר טוב עבור בעיות רבות. בסרטון הבא ניקח את רעיון ההסדרה הזה ונשתמש בו לרגרסיה לוגיסטית. כך שתוכלו לגרום לרגרסיה לוגיסטית להימנע מהתאמת-יתר ולהשיג ביצועים הרבה יותר טובים.