1
00:00:00,120 --> 00:00:02,490
בסרטונים קודמים, אמרתי שוב ושוב

2
00:00:02,490 --> 00:00:06,670
שכאשר מפתחים מערכת לימוד מכונה, אחד המשאבים היקרים ביותר

3
00:00:06,670 --> 00:00:11,310
הוא הזמן של המפתח, במונחים של בחירת על מה לעבוד בשלב הבא.

4
00:00:11,310 --> 00:00:13,380
מצד שני, אם יש לכם צוות של מפתחים

5
00:00:13,380 --> 00:00:16,690
או צוות של מהנדסים שעובדים יחד על מערכת למידה חישובית,

6
00:00:16,690 --> 00:00:20,160
גם כאן, אחד המשאבים היקרים ביותר הוא הזמן של המהנדסים או

7
00:00:20,160 --> 00:00:22,450
המפתחים העובדים על המערכת.

8
00:00:22,450 --> 00:00:25,230
ומה שבהחלט רצוי להימנע ממנו הוא שאתה או

9
00:00:25,230 --> 00:00:29,090
עמיתיך וחבריך תשקיעו המון זמן בעבודה על רכיב כלשהו.

10
00:00:29,090 --> 00:00:34,190
רק כדי להבין לאחר שבועות או חודשים של השקעה של זמן, שכל מה שעשיתם

11
00:00:34,190 --> 00:00:39,450
פשוט לא ממש משנה מבחינת הביצועים של המערכת הסופית.

12
00:00:39,450 --> 00:00:43,379
בסרטון הזה אני רוצה לעשות משהו שנקרא ניתוח תקרה.

13
00:00:44,550 --> 00:00:48,750
כאשר אתה או הקבוצה שלך עובדים על מערכת צינור של למידת מכונה,

14
00:00:48,750 --> 00:00:53,550
זה יכול לפעמים לתת לכם אות חזק מאוד, הכוונה חזקה מאוד

15
00:00:53,550 --> 00:00:56,770
לגבי אילו חלקים של הצינור כנראה הם הניצול הטוב ביותר של הזמן שלכם.

16
00:00:59,770 --> 00:01:04,670
כדי לדבר על ניתוח תקרה אני אמשיך להשתמש בדוגמה של

17
00:01:04,670 --> 00:01:06,570
צינור ה-OCR מצילום.

18
00:01:06,570 --> 00:01:10,840
וכל אחת מהתיבות האלה, זיהוי טקסט, הפרדת תווים,

19
00:01:10,840 --> 00:01:12,160
זיהוי תווים,

20
00:01:12,160 --> 00:01:16,870
כל תיבה כזו יכול להיות שאפילו צוות הנדסה קטן עובד על זה.

21
00:01:16,870 --> 00:01:19,660
או אולי המערכת כולה נבנית על ידיך, כך או כך.

22
00:01:19,660 --> 00:01:22,850
אבל השאלה היא איפה כדאי להקצות משאבים?

23
00:01:22,850 --> 00:01:27,502
באילו מהתיבות האלה הכי שווה את המאמץ לנסות

24
00:01:27,502 --> 00:01:29,032
לשפר ביצועים.

25
00:01:29,032 --> 00:01:32,151
כדי להסביר את הרעיון של ניתוח תקרה

26
00:01:32,151 --> 00:01:36,970
אני אמשיך להשתמש בדוגמה של צינור ה-OCR מצילום.

27
00:01:36,970 --> 00:01:40,470
כפי שציינתי קודם לכן, כל אחת מהתיבות כאן, כל אחד מהרכיבים האלה של מכונת למידה חישובית,

28
00:01:40,470 --> 00:01:45,070
יכול להיות עבודה של צוות קטן של מהנדסים,

29
00:01:45,070 --> 00:01:49,050
או שכל המערכת יכולה להיבנות על ידי אדם אחד בלבד.

30
00:01:49,050 --> 00:01:52,090
אבל השאלה היא, איפה כדאי להקצות את המשאבים הנדירים.

31
00:01:52,090 --> 00:01:56,220
כלומר, אילו מהרכיבים האלה, איזה אחד או שניים או אולי כל שלושת המרכיבים האלה

32
00:01:56,220 --> 00:02:01,650
הוא הדבר שהכי שווה להשקיע בו את הזמן כדי לנסות לשפר את ביצועיו.

33
00:02:01,650 --> 00:02:04,070
אז הנה הרעיון של ניתוח התקרה.

34
00:02:04,070 --> 00:02:07,900
כמו בתהליך הפיתוח של מערכות למידת מכונה אחרות, גם כאן,

35
00:02:07,900 --> 00:02:12,560
על מנת לקבל החלטות מה לעשות כדי לפתח את המערכת,

36
00:02:12,560 --> 00:02:17,570
זה יהיה מאוד מועיל אם יש מספר ממשי אחד שישמש כהערכה או מדד

37
00:02:17,570 --> 00:02:18,440
עבור מערכת הלמידה.

38
00:02:18,440 --> 00:02:20,310
אז נניח שאנחנו בוחרים בדיוק ברמת התו.

39
00:02:20,310 --> 00:02:24,920
דהיינו, אם אתה מקבל תמונה מערכת המבחן, מהו האחוז של התווים

40
00:02:24,920 --> 00:02:27,730
בתמונת הבדיקה שאנו מזהים כראוי?

41
00:02:29,040 --> 00:02:32,650
או שאפשר לבחור מדדי הערכה אחרים שהם מספר ממשי, אם אתה רוצה.

42
00:02:32,650 --> 00:02:33,320
אבל נניח

43
00:02:33,320 --> 00:02:36,560
עבור מדד ההערכה שאותו בחרנו,

44
00:02:36,560 --> 00:02:41,990
אנחנו מגלים שלמערכת הכוללת כרגע יש 72% דיוק.

45
00:02:41,990 --> 00:02:44,880
במילים אחרות, יש לנו קבוצה של תמונות של סדרת מבחן.

46
00:02:44,880 --> 00:02:47,880
ועל כל תמונה בסדרה, אנו מפעילים את השלבים של זיהוי טקסט,

47
00:02:47,880 --> 00:02:50,480
והפרדת תווים, ואז זיהוי תווים.

48
00:02:50,480 --> 00:02:54,810
ואנו מוצאים כי על סדרת הבדיקה שלנו, הדיוק הכולל של המערכת כולה

49
00:02:54,810 --> 00:02:56,780
היה 72% במדד ההוא שבחרנו.

50
00:02:58,180 --> 00:03:02,810
עכשיו הנה הרעיון מאחורי ניתוח התקרה, והוא זה. אנחנו נעבור,

51
00:03:02,810 --> 00:03:07,280
נניח, על המודול הראשון של מכונת הלמידה החישובית שלנו, נניח זיהוי טקסט.

52
00:03:07,280 --> 00:03:10,510
ומה שאנחנו הולכים לעשות הוא לשחק עם סדרת הבדיקה.

53
00:03:10,510 --> 00:03:11,509
אנחנו הולכים לסדרת המבחן.

54
00:03:13,290 --> 00:03:18,250
עבור כל דוגמה בדיקה, אנחנו פשוט נספק למודול את הפלט הנכון,

55
00:03:18,250 --> 00:03:23,263
במילים אחרות, אנחנו נעבור על סדרת הבדיקה ופשוט

56
00:03:23,263 --> 00:03:28,480
נספר ידנית לאלגוריתם איפה נמצא הטקסט בכל אחת מדוגמאות הבדיקה.

57
00:03:28,480 --> 00:03:32,650
במילים אחרות אנחנו מדמים מצב שבו יש לנו

58
00:03:32,650 --> 00:03:37,140
מערכת זיהוי טקסט עם דיוק מאה אחוז

59
00:03:37,140 --> 00:03:40,796
לצורך זיהוי טקסט בתמונה.

60
00:03:40,796 --> 00:03:44,280
ובעצם הדרך לעשות את זה היא די פשוטה, נכון?

61
00:03:44,280 --> 00:03:48,220
במקום לתת לאלגוריתם הלמידה לזהות את הטקסט בתמונות.

62
00:03:48,220 --> 00:03:49,870
אתה פשוט הולך לתמונות

63
00:03:49,870 --> 00:03:54,280
ורושם באופן ידני מה המיקום של הטקסט בתמונות הבדיקה.

64
00:03:54,280 --> 00:03:56,180
ואז אתה מוסיף את התוויות הנכונות האלה,

65
00:03:56,180 --> 00:04:00,840
תוויות מדגם האמת של היכן נמצא הטקסט, להיות חלק מסדרת הבדיקה.

66
00:04:00,840 --> 00:04:04,060
ופשוט משתמש בתוויות האמת האלה כקלט

67
00:04:04,060 --> 00:04:07,530
לשלב הבא של הצינור, החלק של הפרדת התווים.

68
00:04:07,530 --> 00:04:09,250
טוב, אז רק נאמר זאת שוב.

69
00:04:09,250 --> 00:04:11,520
כשאני מסמן וי כאן,

70
00:04:11,520 --> 00:04:15,520
מה שאני מתכוון הוא שאני רושם בתוך סדרת המבחן עצמה את התשובות הנכונות.

71
00:04:15,520 --> 00:04:19,230
נותן לה את התוויות הנכונות עבור החלק של זיהוי טקסט בצינור.

72
00:04:19,230 --> 00:04:23,090
אז זה כאילו יש לי מערכת מושלמת לזיהוי טקסט על סדרת הבדיקה.

73
00:04:24,110 --> 00:04:28,400
ואז מה שאנחנו צריכים לעשות הוא להריץ את הנתונים דרך שאר חלקי הצינור.

74
00:04:28,400 --> 00:04:30,920
דרך הפרדת התווים וזיהוי התווים.

75
00:04:30,920 --> 00:04:34,020
ואז להשתמש באותו מדד הערכה כמו קודם,

76
00:04:34,020 --> 00:04:37,800
כדי למדוד מה היה הדיוק הכולל של המערכת כולה.

77
00:04:37,800 --> 00:04:40,750
ועם שיטה מושלמת לזיהוי טקסט, אנחנו מקווים שהביצועים ישתפרו.

78
00:04:40,750 --> 00:04:43,700
ובדוגמה זו, נניח שזה עלה ל-89%.

79
00:04:43,700 --> 00:04:47,760
ואז אנחנו הולכים להמשיך, אז בואו נעשה את השלב הבא בצינור,

80
00:04:47,760 --> 00:04:49,045
הפרדת התווים.

81
00:04:49,045 --> 00:04:53,905
אז שוב אנחנו משנים את ערכת הבדיקה, ונותנים לדוגמאות את התשובות הנכונות

82
00:04:53,905 --> 00:04:57,900
לזיהוי טקסט וגם את התשובות הנכונות של הפרדת התווים.

83
00:04:57,900 --> 00:05:03,170
הולכים לסדרת הבדיקה ומכניסים ידנית את ההפרדה הנכונה של הטקסט

84
00:05:03,170 --> 00:05:06,210
לתווים בודדים, ואז רואים כמה זה עוזר.

85
00:05:06,210 --> 00:05:09,699
ונניח שזה מעלה את הדיוק ל-90% עבור המערכת הכוללת.

86
00:05:09,699 --> 00:05:10,280
נכון?

87
00:05:10,280 --> 00:05:13,930
אז כמו תמיד אנחנו מדברים על הדיוק של המערכת הכוללת.

88
00:05:13,930 --> 00:05:17,620
את הפלט הסופי של מערכת זיהוי התווים.

89
00:05:17,620 --> 00:05:19,880
יהיה מה שיהיה הפלט הסופי של כל הצינור,

90
00:05:19,880 --> 00:05:22,450
זה הדבר שאת הדיוק שלו אנחנו מודדים.

91
00:05:22,450 --> 00:05:25,680
ולבסוף אני הולך למערכת זיהוי התווים ונותן גם לו את

92
00:05:25,680 --> 00:05:29,980
התוויות הנכונות, ואז, כמובן אני אמור לקבל 100% דיוק.

93
00:05:31,440 --> 00:05:36,370
הדבר הנחמד בניתוח הזה הוא שעכשיו אנחנו יכולים להבין מהו

94
00:05:36,370 --> 00:05:41,400
פוטנציאל הרווח של שיפור כל אחד מהמרכיבים האלה.

95
00:05:41,400 --> 00:05:44,960
אז אנחנו רואים שאם נגיע לזיהוי טקסט מושלם,

96
00:05:44,960 --> 00:05:47,920
הביצועים שלנו יעלו מ-72% ל-89%.

97
00:05:47,920 --> 00:05:51,640
אז זה רווח ביצועים של 17%.

98
00:05:51,640 --> 00:05:55,910
אז זה אומר שאם ניקח את המערכת הנוכחית שלנו ונבלה הרבה זמן בשיפור

99
00:05:55,910 --> 00:05:57,240
זיהוי הטקסט,

100
00:05:57,240 --> 00:06:00,930
זה אומר שאנחנו יכולים לשפר את הביצועים של המערכת שלנו ב-17%.

101
00:06:00,930 --> 00:06:03,750
זה נראה כאילו זה ממש שווה את הזמן שלנו.

102
00:06:03,750 --> 00:06:05,350
ולעומת זאת,

103
00:06:05,350 --> 00:06:11,200
כאשר המשכנו הלאה מזיהוי טקסט ועשינו הפרדת תווים מושלמת,

104
00:06:11,200 --> 00:06:15,210
הביצועים עלו רק ב 1%, אז זו הודעה פחות שמחה.

105
00:06:15,210 --> 00:06:19,800
זה אומר שלא משנה כמה זמן נבלה על הפרדת תווים.

106
00:06:19,800 --> 00:06:23,470
אולי פוטנציאל הרווח יהיה די קטן, ואולי לא כדאי

107
00:06:23,470 --> 00:06:26,880
לבזבז צוות גדול של מהנדסים בעבודה על הפרדת תווים.

108
00:06:26,880 --> 00:06:31,168
סוג זה של ניתוח מראה כי אפילו אם תצליח להגיע להפרדת תווים מושלמת,

109
00:06:31,168 --> 00:06:34,750
הביצועים יעלו רק באחוז אחד.

110
00:06:34,750 --> 00:06:39,690
זה עושה הערכה מהי התקרה, או מהו הגבול העליון של כמה אפשר

111
00:06:39,690 --> 00:06:43,260
לשפר את הביצועים של המערכת בעבודה על אחד מהמרכיבים האלה.

112
00:06:44,370 --> 00:06:46,360
ולבסוף, זיהוי תווים,

113
00:06:46,360 --> 00:06:50,300
כאשר השגנו זיהוי תווים מושלם, הביצועים עלו ב-10 אחוזים.

114
00:06:50,300 --> 00:06:55,360
אז עכשיו אתה יכול להחליט לגבי שיפור של עשרה אחוזים, כמה זה שווה את הזמן שלך?

115
00:06:55,360 --> 00:07:00,420
זה אומר לך שאולי עם מאמץ נוסף בשלב האחרון של הצינור,

116
00:07:00,420 --> 00:07:05,590
אתה יכול לשפר את הביצועים של המערכת.

117
00:07:05,590 --> 00:07:06,920
דרך נוספת לחשוב על זה היא

118
00:07:06,920 --> 00:07:10,190
שעל ידי ניתוח מהסוג הזה אתה מנסה להבין

119
00:07:10,190 --> 00:07:14,680
מה פוטנציאל השיפור של כל אחד מהרכיבים האלה.

120
00:07:14,680 --> 00:07:17,490
או כמה אפשר להרוויח אם אחד

121
00:07:17,490 --> 00:07:20,520
מהמרכיבים האלה נעשה לגמרי מושלם.

122
00:07:20,520 --> 00:07:24,260
וזה באמת מציב גבול עליון על הביצועים של המערכת.

123
00:07:24,260 --> 00:07:28,220
אז הרעיון של ניתוח התקרה הוא די חשוב, תנו לי להדגים את הרעיון הזה

124
00:07:28,220 --> 00:07:31,910
שוב אבל עם דוגמה אחרת, דוגמא מורכבת יותר.

125
00:07:31,910 --> 00:07:35,338
נניח שאתה רוצה לעשות זיהוי פנים מתמונות.

126
00:07:35,338 --> 00:07:37,820
אתה רוצה להסתכל על התמונה ולזהות האם

127
00:07:37,820 --> 00:07:41,375
האדם בתמונה הזו הוא חבר מסוים שלך או לא,

128
00:07:41,375 --> 00:07:44,900
לנסות לזהות מיהו האדם המוצג בתמונה הזו.

129
00:07:44,900 --> 00:07:47,100
זוהי דוגמה מלאכותית במקצת,

130
00:07:47,100 --> 00:07:50,360
זה לא ממש איך שזיהוי פנים נעשה בפועל.

131
00:07:50,360 --> 00:07:54,660
אבל אנחנו רוצים להגדיר דוגמה של איך עשוי להיראות צינור,

132
00:07:54,660 --> 00:07:59,140
לתת לכם דוגמה נוספת של איך עשוי להיראות תהליך ניתוח התקרה.

133
00:07:59,140 --> 00:08:04,460
אז יש לנו תמונה ממצלמה, ונניח שאנחנו מתכננים צינור כדלקמן,

134
00:08:04,460 --> 00:08:07,920
הדבר הראשון שנרצה לעשות הוא עיבוד מוקדם של התמונה.

135
00:08:07,920 --> 00:08:10,830
אז בואו ניקח את התמונה הזאת כמו שהיא מוצגת בפינה הימנית העליונה,

136
00:08:10,830 --> 00:08:12,390
ונניח שאנחנו רוצים להסיר את הרקע.

137
00:08:12,390 --> 00:08:16,090
אז עושים עיבוד מקדים והרקע נעלם.

138
00:08:16,090 --> 00:08:19,400
הדבר הבא שאנחנו רוצים הוא למצוא את הפנים של האדם,

139
00:08:19,400 --> 00:08:21,070
זה נעשה בדרך כלל בלמידת מכונה

140
00:08:21,070 --> 00:08:25,740
אז נפעיל מסווג חלונות נעים כדי לצייר מלבן סביב הפנים של האדם.

141
00:08:25,740 --> 00:08:29,240
לאחר שזיהינו את אזור הפנים, מתברר כי כשרוצים לזהות אנשים,

142
00:08:29,240 --> 00:08:32,010
מתברר שהעיניים הם רמז שימושי מאוד.

143
00:08:32,010 --> 00:08:36,550
אנחנו למעשה, במונחים של לזהות את החברים שלנו, מראה העיניים שלהם

144
00:08:36,550 --> 00:08:39,460
הוא למעשה אחד הרמזים החשובים ביותר שאנחנו משתמשים בהם.

145
00:08:39,460 --> 00:08:42,540
אז בואו ונריץ עוד מסווג כדי למצוא את העיניים של האדם.

146
00:08:42,540 --> 00:08:44,690
האזור של העיניים

147
00:08:44,690 --> 00:08:48,660
מכיוון שזה ייתן לנו תכונות שימושיות כדי לזהות את האדם.

148
00:08:48,660 --> 00:08:51,030
ואז חלקים אחרים של הפנים גם הם מעניינים.

149
00:08:51,030 --> 00:08:54,750
אולי נמצא את האף, נמצא את הפה.

150
00:08:54,750 --> 00:08:58,780
ואז לאחר שמצאנו את העיניים, האף והפה, כל אלה מעניקים לנו תכונות

151
00:08:58,780 --> 00:09:02,140
שימושיות כדי להזין אולי מסווג רגרסיה לוגיסטי.

152
00:09:02,140 --> 00:09:05,450
וזה התפקיד של המסווג לתת לנו את התווית הכללית,

153
00:09:05,450 --> 00:09:08,800
למצוא את התווית של מי שהוא חושב שזו הזהות של האדם הזה.

154
00:09:10,180 --> 00:09:13,980
אז זה מין צינור מסובך, הוא בעצם כנראה יותר מסובך

155
00:09:13,980 --> 00:09:18,200
ממה שצריך באמת אם באמת רוצים לזהות אנשים, אבל

156
00:09:18,200 --> 00:09:20,889
זו דוגמה שממחישה איך לחשוב על ניתוח התקרה.

157
00:09:22,140 --> 00:09:25,040
אז איך עושים ניתוח תקרה במקרה של הצינור הזה.

158
00:09:25,040 --> 00:09:27,510
ובכן אנחנו עוברים על החתיכות האלה אחת אחת.

159
00:09:27,510 --> 00:09:30,490
נניח שלמערכת הכוללת יש דיוק של 85%.

160
00:09:30,490 --> 00:09:32,920
הדבר הראשון שנעשה הוא ללכת לסדרת הבדיקה

161
00:09:32,920 --> 00:09:37,190
ובאופן ידני לתת לה את ההפרדה המלאה בין תמונה ורקע.

162
00:09:37,190 --> 00:09:39,150
באופן ידני ללכת לסדרת הבדיקה.

163
00:09:39,150 --> 00:09:43,180
ולהשתמש בפוטושופ או משהו ופשוט למצוא איפה הרקע

164
00:09:43,180 --> 00:09:47,030
ואז להסיר באופן ידני את הרקע מהתמונה, להשאיר תמונה חסרת רקע,

165
00:09:47,030 --> 00:09:49,030
ולראות כמה משתנה הדיוק.

166
00:09:49,030 --> 00:09:52,726
בדוגמה זו הדיוק עלה ב-0.1%.

167
00:09:52,726 --> 00:09:58,000
אז זה רמז ברור שאפילו אם תהיה לנו הפרדת רקע מושלמת,

168
00:09:58,000 --> 00:10:02,350
אפילו עם הסרת רקע מושלמת, הביצועים של המערכת

169
00:10:02,350 --> 00:10:03,890
לא ישתפרו בהרבה.

170
00:10:03,890 --> 00:10:07,410
אז אולי זה לא שווה מאמץ גדול לעבוד על העיבוד המקדים

171
00:10:07,410 --> 00:10:08,210
של הסרת רקע.

172
00:10:09,300 --> 00:10:13,440
ואז נלך לסדרת הבדיקה וניתן לה את זיהוי הפנים הנכון בתמונה

173
00:10:13,440 --> 00:10:15,450
ואז נלך לצעד של זיהוי אזור העיניים האף

174
00:10:15,450 --> 00:10:17,820
והפה באיזשהו סדר, פשוט נבחר סדר מסויים.

175
00:10:17,820 --> 00:10:20,250
פשוט להכניס את המיקום הנכון של העיניים.

176
00:10:20,250 --> 00:10:23,550
המיקום הנכון של האף, המיקום הנכון של הפה,

177
00:10:23,550 --> 00:10:28,510
ואז בשלב האחרון אנחנו פשוט ניתן לו את התווית הכוללת הנכונה - דהיינו השם של האדם - ונקבל 100% דיוק.

178
00:10:28,510 --> 00:10:33,280
וכשעוברים על המערכת ופשוט נותנים ליותר ויותר רכיבים

179
00:10:33,280 --> 00:10:37,560
את התוויות הנכונות בסדרת המבחן, הביצועים של המערכת הכוללת עולים

180
00:10:37,560 --> 00:10:40,570
ואפשר לראות עד כמה עלו הביצועים בשלבים שונים.

181
00:10:40,570 --> 00:10:44,420
אז בשלב שנתנו לאלגוריתם זיהוי פנים מושלם,

182
00:10:44,420 --> 00:10:48,704
זה נראה שהביצועים הכוללים של המערכת עלו ב-5.9%.

183
00:10:48,704 --> 00:10:50,960
אז זו קפיצה די גדולה.

184
00:10:50,960 --> 00:10:55,450
זה אומר שאולי כדאי להשקיע לא מעט מאמץ על זיהוי פנים טוב יותר.

185
00:10:55,450 --> 00:10:57,654
עלה 4% שם, זה עלה 1% שם.

186
00:10:57,654 --> 00:11:01,347
1% שם, 3% שם.

187
00:11:01,347 --> 00:11:05,427
אז זה נראה שהרכיבים ששווים הכי הרבה מאמץ

188
00:11:05,427 --> 00:11:09,507
הם כשעשינו מערכת זיהוי פנים מושלמת

189
00:11:09,507 --> 00:11:14,470
הביצועים עלו ב-5.9%, כאשר בנינו הפרדת עיניים מושלמת קיבלנו ארבעה אחוזים.

190
00:11:14,470 --> 00:11:18,499
ואז המסווג הלוגיסטי הסופי שלנו נתן לנו עוד פער של

191
00:11:18,499 --> 00:11:19,500
אולי שלושה אחוזים.

192
00:11:19,500 --> 00:11:25,620
אז זה אומר לנו מהם הרכיבים שאולי הכי כדאי לעבוד עליהם.

193
00:11:25,620 --> 00:11:28,680
ודרך אגב אני רוצה לספר לכם סיפור אזהרה אמיתי.

194
00:11:28,680 --> 00:11:31,531
הסיבה שאני שם כאן את שלב העיבוד המקדים של הסרת הרקע

195
00:11:31,531 --> 00:11:36,091
היא שאני באמת מכיר סיפור אמיתי שבו היה

196
00:11:36,091 --> 00:11:40,582
צוות המחקר של שני אנשים שבילו כשנה וחצי,

197
00:11:40,582 --> 00:11:44,600
בילו 18 חודשים בעבודה על הסרת רקע טובה יותר.

198
00:11:44,600 --> 00:11:48,865
אני מסתיר את הפרטים מסיבות ברורות, אבל זה היה יישום

199
00:11:48,865 --> 00:11:53,073
של ראייה ממוחשבת שבו צוות של שני מהנדסים, פשוטו כמשמעו במשך

200
00:11:53,073 --> 00:11:56,814
כשנה וחצי עבדו על הסרת רקע טובה יותר, למעשה המציאו

201
00:11:56,814 --> 00:12:01,190
אלגוריתמים מסובכים מאוד ובסופו של דבר גם פרסמו מחקר אחד.

202
00:12:01,190 --> 00:12:04,730
אבל אחרי כל העבודה הם מצאו כי זה פשוט לא שינה בהרבה

203
00:12:04,730 --> 00:12:10,440
את הביצועים הכוללים של היישום בפועל עליו הם עבדו,

204
00:12:10,440 --> 00:12:14,690
ואם מישהו רק היה עושה ניתוח תקרה מקודם

205
00:12:14,690 --> 00:12:16,170
אולי הם היו מבינים את זה.

206
00:12:17,250 --> 00:12:18,680
ואחד מהם אמר לי אחר כך

207
00:12:18,680 --> 00:12:22,780
אם רק היינו עושים את הסוג הזה של ניתוח אולי היינו יכולים להבין את זה

208
00:12:22,780 --> 00:12:24,610
לפני שעבדנו על זה 18 חודשים.

209
00:12:24,610 --> 00:12:28,420
שהם היו צריכים להשקיע את המאמץ ולהתמקד באיזה מרכיב אחר

210
00:12:28,420 --> 00:12:31,510
מאשר פשוטו כמשמעו לבזבז 18 חודשי עבודה על הסרת רקע.

211
00:12:33,940 --> 00:12:35,610
אז לסיכום,

212
00:12:35,610 --> 00:12:39,900
צינורות הם שיטה נפוצה מאוד ביישומים מורכבים ללמידה חישובית.

213
00:12:39,900 --> 00:12:43,624
וכאשר עובדים על יישום גדול בלמידת מכונה,

214
00:12:43,624 --> 00:12:47,280
זמן העבודה של המפתח הוא כל כך רב ערך, שפשוט לא כדאי לבזבז

215
00:12:47,280 --> 00:12:51,160
את הזמן בעבודה על משהו שבסופו של דבר לא ישנה את התוצאה.

216
00:12:51,160 --> 00:12:54,632
בסרטון הזה דיברנו על הרעיון הזה של ניתוח תקרה,

217
00:12:54,632 --> 00:12:58,663
שאני מצאתי שלעתים קרובות הוא כלי ממש טוב לזיהוי הרכיבים

218
00:12:58,663 --> 00:13:02,220
שבהם באמת כדאי להתמקד כדי לעשות שינוי גדול בתוצאה.

219
00:13:02,220 --> 00:13:07,340
הרכיבים שלמעשה תהיה להם השפעה עצומה על הביצועים הכוללים של המערכת הסופית.

220
00:13:07,340 --> 00:13:10,503
במשך השנים שבהם אני עובד בלמידה חישובית, למדתי למעשה

221
00:13:10,503 --> 00:13:13,259
לא לסמוך על תחושת הבטן שלי לגבי אילו על רכיבים לעבוד.

222
00:13:13,259 --> 00:13:17,199
המון פעמים, ואני כבר עוסק בלמידת מכונה במשך זמן רב, לעתים קרובות אני

223
00:13:17,199 --> 00:13:20,839
מסתכל על בעיה בלמידת מכונה, ואני מקבל איזו תחושת בטן לגבי אה,

224
00:13:20,839 --> 00:13:24,160
בואו נקפוץ על הרכיב הזה ופשוט נשקיע בו את כל הזמן.

225
00:13:24,160 --> 00:13:27,640
אבל במשך השנים, למדתי לבטוח בתחושת הבטן שלי

226
00:13:27,640 --> 00:13:29,888
שאומרת שאסור בעצם לסמוך על תחושת בטן.

227
00:13:29,888 --> 00:13:34,090
במקום זה, אם יש לך בעיה של למידה חישובית שבה אפשר

228
00:13:34,090 --> 00:13:37,993
לבנות דברים ולעשות ניתוח תקרה, בדרך כלל זוהי דרך הרבה יותר טובה

229
00:13:37,993 --> 00:13:41,355
ואמינה כדי להחליט איפה כדאי למקד את המאמצים

230
00:13:41,355 --> 00:13:44,560
כדי באמת לשפר את הביצועים של איזשהו רְכִיב.

231
00:13:44,560 --> 00:13:47,470
ולהיות סמוך ובטוח שכאשר אנחנו עושים את זה, תהיה לזה למעשה

232
00:13:47,470 --> 00:13:50,310
השפעה ממש גדולה על הביצועים הסופיים של המערכת הכוללת.