Bu videoda, muhtemelen en yaygın Makine Öğrenme problemi türü olan Denetlenmiş Öğrenmeyi tanımlayacağım. Denetlenmiş Öğrenmeyi daha sonra resmi olarak tanımlayacağım, ama muhtemelen açıklamak veya ne olduğu ile ilgili bir örnekle başlamak en iyisidir, ve daha sonra resmi tanımını yapacağız Konut fiyatlarını tahmin etmek istediğinizi varsayalım. Bir süre önce bir öğrenci Portland şehrinden veri kümesi topladı, ve veri kümesini çizdiğini söyleyelim ve veri kümesi bunun gibi görünür. Burada yatay eksende, farklı evlerin metre cinsinden boyutu, ve dikey eksende, farklı evlerin binlerce dolarlık fiyatı. Bu verilere göre 750 metre kare evi olan bir arkadaşın olduğunu söyleyelim, ve evi satmayı umuyorlar, ve ev için ne kadar alabileceklerini bilmek istiyorlar. Öyleyse, öğrenme algoritması size nasıl yardımcı olabilir? Öğrenme algoritmasının yapmak isteyeceği bir şey veriler üzerine düz bir çizgi koymak, aynı zamanda verilere doğru bir çizgiyi de uydurmaktır. Buna bağlı olarak belki evlerini yaklaşık 150,000 dolara satabilecekler gibi gözüküyor. Ama belki bu kullanabileceğiniz tek öğrenme algoritması değildir, ve belki daha iyi bir öğrenme algoritması vardır. Örneğin, veriye bir düz çizgi uydurmak yerine, belki ikinci dereceden bir fonksiyonu ya da bu verilere ikinci dereceden bir polonim uydurmanın daha iyi olacağına karar veririz. Eğer bunu yaparsan ve bir tahmin yürütürsen, o zaman iyi görünüyor, belki onlar evi 200,000 dolara yakın bir fiyata satabilirler. Daha sonra konuşacağımız şeylerden biri nasıl seçeceğimiz, ve nasıl karar vereceğimizdir , verilere düz bir çizgi uydurmak ister misiniz? ya da verilere ikinci dereceden bir fonksiyon uydurmak ister misiniz? Arkadaşınıza daha iyi bir fiyata ev satma hakkı veren adil bir seçim yoktur. Ama bunlardan her biri Öğrenme Algoritmasının iyi birer örneği olabilirdi. Yani, bu Denetimli Öğrenme Algoritmasının bir örneğidir. Denetimli Öğrenme terimi, algoritmayı verdiğimiz bir veri seti, çağrılan "doğru cevapların" verildiği bir veri seti verdiğimiz gerçeğini ifade eder. Bu veri kümesindeki her örnek için evlerin bir veri kümesini verdik, doğru fiyatın ne olduğunu söyledik. Yani, bu evin satıldığı gerçek fiyat neydi, ve algoritmanın görevi arkadaşınızın satmaya çalıştığı bu yeni ev gibi bu doğru cevapların daha fazlasını üretmek oldu. biraz daha terminoloji tanımlamak için, buna ayrıca gerileme (regresyon) problemi denir. Gerileme problemi ile, sürekli değeri olan bir çıktıyı tahmin etmeye çalışıyoruz. Yani fiyat. Teknik olarak, Sanırım, fiyatlar en yakın sente(1$⁄100) yuvarlanabilir. Yani, belki fiyatlar aslında ayrık değerdir. Ama genellikle, bir evin fiyatını bir gerçek sayı, bir skaler değer gibi düşünürüz, bir sürekli değer sayısı olarak, gerileme terimi, sürekli değerlerin niteliğini tahmin etmeye çalıştığımız gerçeğini ifade eder. İşte başka Denetimli Öğrenme örnekleri. Ben ve bazı arkadaşlar daha önce bunun üzerinde çalışıyorduk. Sağlık kayıtlarına bakmak istediğinizi varsayalım ve bir göğüs kanserinin kötü veya iyi huylu olduğunu tahmin etmeye çalışıyorsun. Eğer birileri bir göğüs kanseri keşfederse, göğüslerinde bir yumru, kötü huylu zararlı ve tehlikeli bir tümördür, ve iyi huylu tümör de zararsızdır. Açıkça, insanlar bunu çok önemsiyorlar. Hadi toplanmış veri kümesine bir bakalım. Veri kümenizde olduğunuzu varsayalım, tümörün boyutunun olduğu bir yatay ekseniniz var ve dikey eksende, 1 ya da 0, evet veya hayır bunların daha önce gördüğümüz kötü huylu tümörlerin bir örneği olup olamadığını, 1 ya da 0 veya kötü huylu ya da iyi huylu olmadığını işaretleyeceğim. Yani, veri kümenizin böyle göründüğünü varsayalım, görüğümüz bu büyüklükte bir tümör iyi huylu çıktı, biri bu boyuttan, biri bu boyuttan, vb. Ne yazık ki birkaç kötü huylu tümör hücresi gördük, biri bu boyuttan, biri bu boyuttan, biri bu boyuttan, vb. Yani bu örnekte,burada gösterilen 5 iyi huylu tümör örneğim var, ve bir tane dikey eksen değeriyle gösterilen 5 kötü huylu tümör örneğim var. Varsayalım, göğüs kanseri olan bir arkadaş var, ve onun göğüs tümörü boyutunun belki de bu değerin etrafında bir yerlerde olduğunu söyleyelim, Makina Öğrenmesi sorusu, "olasılığın ne olduğunu tahmin edebilir misin, bu tümörü iyi ya da kötü huylu olma olasılığı nedir?" Biraz daha terminolojiye girersek, bu bir Sınıflandırma Problemidir. Sınıflandırma terimi şu anlama gelir, bir ayrık değer çıktısının 0 ya da 1, kötü ya da iyi huylu olarak tahmin etmeye çalışıyoruz. Sınıflandırma problemlerinde , bazen çıktı için iki olası değerden daha fazlasına sahip olabileceğiniz ortaya çıkıyor. Somut bir örnek olarak, belki göğüs kanserinin 3 tipi vardır. Yani, belki ayrık değer çıktısını 0,1,2 olarak, veya 3, 0 iyi huylu anlamına gelebilir, iyi huylu tümör, yani kanser yok, 1 belki tip 1 kanser anlamına gelebilir, belki kanserin 3 tipi, ne olursa olsun 1 türü ifade eder ve 2 kanserin ikinci tipi anlamına gelebilir, ve 3 belki kanserin üçüncü tipi anlamına gelebilir. Ama bu ayrıca bir sınıflandırma problemi olacaktır çünkü bu sizin kanser olmadığınıza, tip 1 kanser, tip 2 kanser veya 3 tip kansere karşılık gelen kesikli bir çıkış kümesidir Sınıflandırma problemlerinde, bu verileri çizmenin başka bir yolu vardır. Ne demek istediğimi göstereyim Bu veriyi çizmek için biraz farklı semboller kullanacağım Yani eğer tümörün boyutu kötü huyluyu (malignant) veya iyi huyluyu (benign) <br /> tahmin etmek için kullanacağım özellik olursa, Verimi böyle çizebilirim iyi huylu ve kötü huyluları belirtmek için farklı semboller kullanacağım veya pozitif ve negatif örneklerimi belirtmek için. Yani kabaca çizmek yerine, İyi niyetli(benign) tümörler için O'lar çizeceğim Ve kötü niyetli(malignant) tümörleri belirtmek için de X'ler kullanmaya devam edeceğim. Umarım bu şekil anlamlıdır. Tek yaptığım veri setimi üste aldım, ve bu çizdiğim gerçek çizgiye taşıdım ve farklı semboller kullanmaya başladım yuvarlaklar ve çarpıları malignant ya da benign örneklerini belirtmek için kullandım Şimdi, bu örnekte Sadece bir özellik veya bir nitelik kullanırız yani tümör boyutunu, bir tümörün<br /> iyi huylu veya kötü huylu olduğunu tahmin etmek için kullanırız. Diğer makina öğrenmesi problemlerinde, Birden fazla özelliğe veya birden fazla niteliğe sahip olabiliriz. Buradaki örneğimizde, sadece tümör boyutunu bilmek yerine , hem hastaların yaşını hem de tümör boyutunu biliyoruz. Bu durumda belki veri kümeniz şöyle görünürdü bir grup hasta bu yaşlarda, ve bu tümör boyutu, ve böyle görünen, ve biraz farklı görünen farklı hasta grupları, çarpılarla belirtildiği gibi tümörleri kötü huyluya dönüşenler. Böylece, diyelim ki trajik br şekilde tümörü olan bir arkadaşa sahipsin ve belki de tümör büyüklükleri ve yaşları buralara düşer. Yani, böyle bir veri seti verildiğinde, öğrenme algoritmasının yapabileceği şey, kötü huylu tümörleri iyi huylu tümörlerden ayırmaya çalışmak için verilere doğru düz bir çizgidir ve böylece öğrenme algoritması tümörlerin iki nedenini de ayırmak için böyle bir düz çizgi koymaya karar verebilir. Bununla, arkadaşının tümörünün daha çok Eğer orada bittiyse umuyoruz ki öğrenme algoritman arkadaşının tümörünün iyi huylu tarafa düştüğünü ve bu yüzden muhtemelen kötü huyludansa <br /> daha çok iyi huylu olduğunu söyleyecektir. Bu örnekte, iki özelliğe sahiptik hastanın yaşı ve tümörün büyüklüğü. Diğer Makina Öğrenmesi problemlerinde, genellikle daha fazla özelliğe sahip olacağız. Bu problem üzerinde çalışan arkadaşlarım aslında, <br />bu gibi diğer özellikleri kullandılar; kütle kalınlığı, meme tümörünün kütle kalınlığı, tümörün hücre boyutunun değişmezliği, tümörün hücre şeklinin değişmezliği, ve benzeri ve diğer özellikler de. Bu derste göreceğimiz öğrenme algoritmalarından en ilginç ortaya çıkan, öğrenme algoritmaları sadece iki değil, üç veya beş özellikle değil, sonsuz sayıda özellikle başa çıkabilir. Bu slaytta, toplam 5 farklı özellik listeledim İkisi eksende ve üç tane daha. Fakat bazı öğrenme problemleri için gerçekten üç ya da beş özellik kullanmak istemediğin ama bunun yerine sonsuz sayıda özellik, sonsuz sayıda nitelik kullanmak istediğin ortaya çıkıyor Şöyle ki öğrenme algoritman çok sayıda bu tahminleri yapacak niteliğe, özelliğe veya ipucuna sahip olabilir. Öyleyse, bu kadar sonsuz sayıda özellikle nasıl başa çıkarsın? Hatta nasıl bilgisayardaki sonsuz sayıdaki şeyi saklarsın, bilgisayarının hafızası tükenmek üzereyken? Support Vector Machine (Destek Vektör Makineleri) olarak adlandırılan <br />algoritmadan bahsettiğimizde ortaya çıkıyor ki bilgisayarın sonsuz sayıda özellik ile başa çıkmasına izin veren zeki bir matematiksel hile olacak. Hayal et ki buraya iki özelliği sağdaki üç özelliği yazmadım, ama sonsuz uzunlukta bir liste yazdığımı düşün. Daha fazla özellik yazmaya devam ettim, tıpkı son derece uzun ve sonsuz bir özellik listesi gibi. Bununla başa çıkabilecek bir algoritma ile ortaya çıkacağız Yani sadece tekrar için, bu derste Denetimli Öğrenme'den(Supervised Learning) <br />bahsedeceğiz ve Denetimli Öğrenme(Supervised Learning) fikrinden, veri setimizdeki her örnekte, algoritmaların neredeyse bu örnekte tahmin edildiği gibi, doğru cevabın ne olduğu söylendi. Tıpkı ev fiyatları gibi, veya tümörün iyi huylu veya kötü huylu olup olmadığı gibi. Ayrıca regresyon probleminden bahsettik, ve regresyon ile yani amacımızın sürekli(continuous) değerli bir çıktıyı tahmin etmek olduğundan bahsettik. Amacımızın kesikli(discrete) değerli bir çıktıyı tahmin etmek olan sınıflandırma probleminden bahsettik. Sadece bir soruyla hızlıca özetleyecek olursak; Diyelim ki bir şirketi yönetiyorsunuz ve iki problemi de çözmek için öğrenme algoritmaları geliştirmek istiyorsunuz. İlk problemde, aynı ürünlerden oluşan büyük bir stoka sahipsiniz. Yani, satmak için bazı aynı ürünlerin binlerce kopyasına sahip olduğunuzu hayal edin, ve önümüzdeki üç ay boyunca bu ürünlerden kaç adet satacağınızı tahmin etmek istiyorsunuz. İkinci problemde, yani problem 2'de, bir çok kullanıcıya sahipsiniz ve müşterilerinizin her birinin bireysel hesaplarını incelemek için yazılım yazmak istiyorsunuz yani müşterilerinizin hesaplarının her biri için. Her hesap için, hesabın hacklenmiş olup olmadığına <br /> veya ele geçirilip geçirilmediğine karar ver. Dolayısıyla, her iki problem, Sınıflandırma problemi olarak mı <br /> yoksa regresyon problemi olarak mı ele alınmalı? Video durduğunda, lütfen bu dört cevaptan hangisinin doğru cevap olduğunu düşünüyorsanız, mouse'unuzu bunu seçmek için kullanın. Umuyorum ki bunu anladınız. İşte cevap. Birinci problem için, Bunu bir regresyon problemi olarak ele alırdım,<br /> çünkü eğer ürünün binlercesine sahipsem, muhtemelen bunu sadece gerçek bir değer olarak veya sürekli bir değer olarak ele alırdım. Bu yüzden, sattığım ürünlerin sayısı sürekli bir değer gibi düşünülebilir. İkinci problem için, Bunu bir sınıflandırma problemi olarak ele alırdım, çünkü hesabın hacklenmediğini belirtmek için tahmin etmek istediğim değeri 0 ile ayarlayabilirim, ve hesabın hacklendiğini belirtmek için de değeri 1 ile ayarlayabilirim. Yani tıpkı meme kanserinde iyi huylunun 0, kötü huylunun 1 olduğu gibi. Yani hacklenip hacklenmediğine göre 0 ve 1 değerlerini ayarlayabilirim ve bu iki kesikli değerin her birini tahmin etmeye çalışan bir algoritmaya sahip olabilirim. Çünkü az sayıda kesikli değer var, bu yüzden onu bir sınıflandırma problemi olarak ele alacağım. İşte Denetimli Öğrenme bu kadar. Bir sonraki videoda, öğrenme algoritmalarının bir diğer ana kategorisi olan Denetimsiz Öğrenme'den (Unsupervised Learning) bahsedeceğim.