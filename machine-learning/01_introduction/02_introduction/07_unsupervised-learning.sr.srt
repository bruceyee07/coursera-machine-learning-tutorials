1
00:00:00,000 --> 00:00:02,760
U ovome videu govoriću o drugom glavnom tipu

2
00:00:02,760 --> 00:00:05,880
problema mašinskog učenja 
zvanog nenadgledano učenje.

3
00:00:05,880 --> 00:00:09,095
U poslednjem videu smo 
govorili o nadgledanom učenju.

4
00:00:09,095 --> 00:00:12,675
Tada smo imali skupove podataka kao ovi gde

5
00:00:12,675 --> 00:00:17,440
je svaki primer bio označen kao
 pozitivan ili negativan primer.

6
00:00:17,440 --> 00:00:20,480
Da li je tumor dobroćudan ili zloćudan.

7
00:00:20,480 --> 00:00:22,800
Za svaki primer nadgledanog učenja,

8
00:00:22,800 --> 00:00:24,690
eksplicitno smo rekli šta je

9
00:00:24,690 --> 00:00:28,665
takozvani tačan odgovor, je
 li dobroćudan ili zloćudan.

10
00:00:28,665 --> 00:00:32,580
U nenadgledanom učenju, dati su
 nam podaci koji izgledaju drugačije.

11
00:00:32,580 --> 00:00:34,300
Dati su nam podaci koji izgledaju ovako.

12
00:00:34,300 --> 00:00:38,900
Nemaju nikakvu oznaku ili svi imaju istu oznaku.

13
00:00:38,900 --> 00:00:42,050
Dakle, dat nam je skup podataka i nije

14
00:00:42,050 --> 00:00:45,770
nam rečeno šta da radimo sa time 
niti šta predstavlja svaka tačka,

15
00:00:45,770 --> 00:00:48,180
umesto toga rečeno nam je, "Ovo je skup podataka,

16
00:00:48,180 --> 00:00:51,020
možete li naći neku strukturu u podacima?"

17
00:00:51,020 --> 00:00:54,470
Za dati skup podataka, algoritam 
nenadgledanog učenja bi mogao

18
00:00:54,470 --> 00:00:57,800
da odluči da podaci žive u dve različite grupe.

19
00:00:57,800 --> 00:01:02,210
Znači, imamo jednu grupu i 
evo još jedne drugačije grupe a

20
00:01:02,210 --> 00:01:06,945
algoritam nenadgledanog učenja može da 
razdvoji te podatke u dve različite grupe.

21
00:01:06,945 --> 00:01:09,770
Dakle, ovo se zove algoritam grupisanja,

22
00:01:09,770 --> 00:01:12,345
i mogao bi da se koristi na mnogo slučajeva.

23
00:01:12,345 --> 00:01:16,609
Jedan primer primene je u gugl novostima,

24
00:01:16,609 --> 00:01:18,980
a ako niste ovo videli pre možete da odete

25
00:01:18,980 --> 00:01:22,220
na URL news.google.com da pogledate.

26
00:01:22,220 --> 00:01:26,030
Gugl novosti svaki dan 
pregleda desetine hiljada

27
00:01:26,030 --> 00:01:28,295
ili stotine hiljada novih priča na vebu

28
00:01:28,295 --> 00:01:31,350
i grupiše ih u kohezivne nove priče.

29
00:01:31,350 --> 00:01:33,710
Na primer, pogledajmo ovde,

30
00:01:33,710 --> 00:01:41,630
URL - ovi upućuju na 
različite priče o BP Oil Well priču.

31
00:01:41,630 --> 00:01:45,965
Hajde da kliknemo na jedan 
od ovih URL - ova i kada kliknem,

32
00:01:45,965 --> 00:01:48,255
gde odem je veb stranica poput ove.

33
00:01:48,255 --> 00:01:52,340
Ovo je Vol Strit članak o BP Oil

34
00:01:52,340 --> 00:01:58,115
Vel Spil priče "BP ubija Makondo" 
što je naziv za prosipanje nafte.

35
00:01:58,115 --> 00:02:02,390
Ako kliknete na druge URL - ove te grupe,

36
00:02:02,390 --> 00:02:03,875
možete da dobijete drugačiju priču.

37
00:02:03,875 --> 00:02:07,655
Ovo je CNN priča o BP Oil Spill ponovo,

38
00:02:07,655 --> 00:02:12,310
a ako kliknete na još jedan link 
možete da dobijete drugu priču.

39
00:02:12,310 --> 00:02:17,370
Ovo je Gardijanova priča o BP Oil Spill.

40
00:02:17,370 --> 00:02:21,395
Znači, guglova dominacija je desetine hiljada priča i

41
00:02:21,395 --> 00:02:25,260
automatsko grupisanje tako da su priče

42
00:02:25,260 --> 00:02:29,025
o istim temama grupisane i prikazane zajedno.

43
00:02:29,025 --> 00:02:31,610
Izgleda da algoritmi grupisanja i

44
00:02:31,610 --> 00:02:35,470
algoritmi nenadgledanog učenja se uspešno 
koriste u mnogim drugim problemima.

45
00:02:35,470 --> 00:02:38,810
Evo jednog u vezi sa razumevanjem genoma.

46
00:02:38,810 --> 00:02:42,230
Ovo je primer DNK mikročip podataka.

47
00:02:42,230 --> 00:02:46,355
Ideja je da ako imate grupu različitih individua i za svaku od njih

48
00:02:46,355 --> 00:02:49,975
merite koliko imaju ili nemaju određen gen.

49
00:02:49,975 --> 00:02:53,170
Tehnički, merite koliko je mnogo izražen neki gen.

50
00:02:53,170 --> 00:02:55,130
Tako, ove boje, crvena,

51
00:02:55,130 --> 00:02:57,025
zelena, siva, i tako dalje,

52
00:02:57,025 --> 00:03:02,850
one pokazuju stepen koliko individue 
imaju ili nemaju određeni gen.

53
00:03:02,850 --> 00:03:06,350
Ono što možemo da uradimo je da pokrenemo algoritam grupisanja i

54
00:03:06,350 --> 00:03:10,675
grupišemo individue u različite 
kategorije ili različite tipove ljudi.

55
00:03:10,675 --> 00:03:13,610
I ovo je nenadgledano učenje jer nismo rekli

56
00:03:13,610 --> 00:03:16,990
algoritmu ovo je tip jedan ljudi,

57
00:03:16,990 --> 00:03:18,350
ovo je tip dva ljudi,

58
00:03:18,350 --> 00:03:20,250
ovo su ljudi tipa tri i tako dalje,

59
00:03:20,250 --> 00:03:22,595
a umesto toga kažemo

60
00:03:22,595 --> 00:03:23,930
"Ovo je gomila podataka.

61
00:03:23,930 --> 00:03:25,575
Ne znam šta je u tim podacima.

62
00:03:25,575 --> 00:03:27,125
Ne znam ko je kog tipa.

63
00:03:27,125 --> 00:03:29,300
Stvarno ne znam koji su različiti tipovi ljudi,

64
00:03:29,300 --> 00:03:31,960
ali možeš li automatski da 
nađeš strukturu podataka za mene?

65
00:03:31,960 --> 00:03:33,320
Možeš li automatski da grupišeš

66
00:03:33,320 --> 00:03:36,460
individue u te tipove koje unapred ne znam?"

67
00:03:36,460 --> 00:03:43,010
Zato što nam nije dat algoritam, pravi 
odgovor, za primere u mome skupu podataka,

68
00:03:43,010 --> 00:03:45,260
ovo je nenadgledano učenje.

69
00:03:45,260 --> 00:03:49,695
Nenadgledano učenje ili grupisanje 
se koristi u gomili drugih aplikacija.

70
00:03:49,695 --> 00:03:52,670
Koristi se za organizovanje velikih klastera računara.

71
00:03:52,670 --> 00:03:57,140
Imam nekog prijatelja koji prate velike centre 
podataka a to su velike grupe računara,

72
00:03:57,140 --> 00:04:00,370
i pokušava da razume koje mašine mogu da rade zajedno.

73
00:04:00,370 --> 00:04:02,605
Ako te mašine možete da stavite zajedno,

74
00:04:02,605 --> 00:04:05,915
mogli biste učiniti da vaš centar za obradu podataka radi efikasnije.

75
00:04:05,915 --> 00:04:07,470
Evo druge aplikacije.

76
00:04:07,470 --> 00:04:09,220
Analiza društvene mreže.

77
00:04:09,220 --> 00:04:12,320
Za saznanje kojim prijateljima ste najviše slali mejlove,

78
00:04:12,320 --> 00:04:15,540
ili fejsbuk prijateljima ili vašim gugl plus krugovima,

79
00:04:15,540 --> 00:04:20,060
možemo li automatski identifikovati 
koje su srodne grupe prijatelja,

80
00:04:20,060 --> 00:04:23,505
takođe, koje su grupe ljudi koje se poznaju.

81
00:04:23,505 --> 00:04:25,795
Segmentacija tržišta.

82
00:04:25,795 --> 00:04:29,150
Mnoge kompanije imaju ogromne baze informacija o svojim potrošačima.

83
00:04:29,150 --> 00:04:32,319
Pa, možete li da pogledate skup 
podataka o kupcima i automatski

84
00:04:32,319 --> 00:04:36,325
otkriti delove tržišta i automatski grupisati vaše kupce

85
00:04:36,325 --> 00:04:39,790
u različite delove tržišta i tako

86
00:04:39,790 --> 00:04:42,085
automatski i efikasnije

87
00:04:42,085 --> 00:04:45,510
prodati različitim delovima tržišta zajedno.

88
00:04:45,510 --> 00:04:49,690
Još jednom, i ovo je nenadgledano 
učenje jer imamo podatke o kupcima,

89
00:04:49,690 --> 00:04:51,310
ali ne znamo unapred koji su

90
00:04:51,310 --> 00:04:54,525
delovi tržišta i za kupce u našem skupu podataka,

91
00:04:54,525 --> 00:04:57,310
ne znamo unapred ko je u delu tržišta jedan,

92
00:04:57,310 --> 00:04:59,320
ko je u delu tržišta dva i tako dalje,

93
00:04:59,320 --> 00:05:02,980
ali moramo da pustimo da algoritam 
otkrije sve to a samo na osnovu podataka.

94
00:05:02,980 --> 00:05:07,375
Konačno, izgleda da se nenadgledano učenje takođe koristi

95
00:05:07,375 --> 00:05:10,640
za analizu astronomskih podataka i

96
00:05:10,640 --> 00:05:12,170
ti algoritmi grupisanja daju

97
00:05:12,170 --> 00:05:16,685
iznenađujuće interesantne teorije o 
tome koliko galaksija je formirano.

98
00:05:16,685 --> 00:05:23,090
Sve ovo su primeri grupisanja što je 
samo jedan tip nenadgledanog učenja.

99
00:05:23,090 --> 00:05:24,650
Dozvolite da vam ispričam o još jednoj.

100
00:05:24,650 --> 00:05:27,415
Reći ću vam nešto o problemu koktel zabava.

101
00:05:27,415 --> 00:05:29,900
Dakle, bili ste ranije na koktel zabavama,

102
00:05:29,900 --> 00:05:33,890
možete da zamislite sobu punu ljudi koji sede okolo,

103
00:05:33,890 --> 00:05:35,325
i svi pričaju istovremeno,

104
00:05:35,325 --> 00:05:38,240
tako da se glasovi preklapaju jer svi

105
00:05:38,240 --> 00:05:41,870
pričaju istovremeno i teško je čuti osobu ispred vas.

106
00:05:41,870 --> 00:05:48,110
Možda koktel zabava sa dvoje ljudi koji pričaju

107
00:05:48,110 --> 00:05:49,985
istovremeno i,

108
00:05:49,985 --> 00:05:54,670
neka mala koktel zabava, i 
stavićemo dva mikrofona u sobu.

109
00:05:54,670 --> 00:05:57,650
Dakle, tu su mikrofoni i

110
00:05:57,650 --> 00:06:01,355
oni su na dve različite razdaljine od govornika,

111
00:06:01,355 --> 00:06:07,175
tako da će svaki mikrofon da snimi različitu 
kombinaciju glasova dvaju govornika.

112
00:06:07,175 --> 00:06:09,920
Možda je govornik jedan malo glasniji na mikrofonu

113
00:06:09,920 --> 00:06:12,530
jedan a govornik dva je malo

114
00:06:12,530 --> 00:06:14,540
glasniji na mikrofonu dva jer

115
00:06:14,540 --> 00:06:18,965
su dva mikrofona na različitim 
udaljenostima od govornika,

116
00:06:18,965 --> 00:06:25,110
ali svaki mikrofon snima 
preklopljene glasove oba govornika.

117
00:06:25,110 --> 00:06:31,350
Ovo je stvaran snimak dva 
govornika koji je snimio istraživač.

118
00:06:31,350 --> 00:06:32,480
Evo puštam vam to.

119
00:06:32,480 --> 00:06:34,800
Prvo kako zvuči prvi mikrofon.

120
00:06:34,800 --> 00:06:35,390
[Strani jezik]

121
00:06:35,390 --> 00:06:38,690
Jedan, dva, tri, četiri, pet, šest,

122
00:06:38,690 --> 00:06:42,595
sedam, osam, devet, deset.

123
00:06:42,595 --> 00:06:45,040
U redu, nije baš neka zanimljiva koktel zabava.

124
00:06:45,040 --> 00:06:49,500
Dvoje ljudi broji do deset na dva jezika.

125
00:06:49,500 --> 00:06:52,865
Ono što ste upravo čuli je bio 
snimak sa prvog mikrofona.

126
00:06:52,865 --> 00:06:55,420
Evo drugog snimka.

127
00:06:55,420 --> 00:06:57,275
[Strani jezik]

128
00:06:57,275 --> 00:06:59,420
1, 2, 3, 4, 5, 6,

129
00:06:59,420 --> 00:07:02,585
7, 8, 9, 10.

130
00:07:02,585 --> 00:07:06,950
Ono što možemo da uradimo je da 
uzmemo ta dva snimka i prosledimo ih

131
00:07:06,950 --> 00:07:10,860
algoritmu nenadgledanog učenja 
zvanom algoritam koktel zabave,

132
00:07:10,860 --> 00:07:14,640
i kažemo algoritmu: 
"Pronađi strukturu u tim podacima".

133
00:07:14,640 --> 00:07:20,600
Algoritam će da posluša snimke i reći da zvuči kao

134
00:07:20,600 --> 00:07:23,720
dva audio snimka spojena zajedno ili

135
00:07:23,720 --> 00:07:27,285
su dodana jedan drugome i dobijeno je ono što imamo.

136
00:07:27,285 --> 00:07:32,025
Šta više, algoritam koktel zabave će da razdvoji ova dva

137
00:07:32,025 --> 00:07:36,845
audio izvora koja su dodana ili sumirana 
zajedno da bi činila naše snimke.

138
00:07:36,845 --> 00:07:41,050
A evo prvog izlaza algoritma koktel zabave.

139
00:07:41,050 --> 00:07:44,065
1, 2, 3, 4,

140
00:07:44,065 --> 00:07:48,760
5, 6, 7, 8 , 9, 10.

141
00:07:48,760 --> 00:07:52,060
Dakle, izdvojen engleski glas u jednome

142
00:07:52,060 --> 00:07:55,640
od snimaka a evo drugoga izlaza.

143
00:07:55,640 --> 00:08:03,760
[brojanje na `španskom]

144
00:08:03,760 --> 00:08:06,549
Nije tako loše. Daću vam još jedan primer,

145
00:08:06,549 --> 00:08:11,085
ovo je još jedan snimak slične 
situacije, ovo je prvi mikrofon,

146
00:08:11,085 --> 00:08:13,575
1, 2, 3, 4,

147
00:08:13,575 --> 00:08:17,990
5, 6, 7, 8, 9, 10.

148
00:08:17,990 --> 00:08:21,140
U redu, jadni momak ide kući sa koktel zabave i

149
00:08:21,140 --> 00:08:24,265
sada sedi sam u sobi i priča u radio.

150
00:08:24,265 --> 00:08:26,750
Evo drugog zapisa sa mikrofona.

151
00:08:26,750 --> 00:08:34,525
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

152
00:08:34,525 --> 00:08:37,795
Kada prosledite ova dva snimka istom algoritmu,

153
00:08:37,795 --> 00:08:40,020
ono što radi je da opet kaže

154
00:08:40,020 --> 00:08:43,925
da zvuči kao da postoje dva audio izvora i štaviše,

155
00:08:43,925 --> 00:08:48,595
algoritam kaže evo prvog audio izvora koji sam našao.

156
00:08:48,595 --> 00:08:51,385
1, 2, 3, 4,

157
00:08:51,385 --> 00:08:55,745
5, 6, 7, 8, 9, 10

158
00:08:55,745 --> 00:08:57,665
Dakle, to nije bilo savršeno.

159
00:08:57,665 --> 00:09:01,210
Dobio sam glas ali takođe i malo muzike.

160
00:09:01,210 --> 00:09:04,500
Evo i drugoga izlaza algoritma.

161
00:09:10,580 --> 00:09:13,260
Nije loše. U drugome izlazu,

162
00:09:13,260 --> 00:09:15,950
uspeo je da se potpuno oslobodi glasa i

163
00:09:15,950 --> 00:09:19,780
pročisti muziku i otarasi se brojanja od 1 do 10.

164
00:09:19,780 --> 00:09:23,530
Dakle, možete da algoritam 
nenadgledanog učenja gledate tako

165
00:09:23,530 --> 00:09:26,820
i da se zapitate koliko je komplikovano 
da se to implementira.

166
00:09:26,820 --> 00:09:29,920
Da biste napravili ovu aplikaciju,

167
00:09:29,920 --> 00:09:32,135
da biste napravili audio obradu,

168
00:09:32,135 --> 00:09:34,975
čini se da treba da napišete tonu koda ili da linkujete

169
00:09:34,975 --> 00:09:37,985
hrpu C++ ili Java biblioteka koje obrađuju audio.

170
00:09:37,985 --> 00:09:40,160
Čini se kao stvarno komplikovan program

171
00:09:40,160 --> 00:09:43,440
koji razdvaja jedan audio od drugoga i tako dalje.

172
00:09:43,440 --> 00:09:47,145
U stvari, algoritam koji radi ovo što ste upravo čuli,

173
00:09:47,145 --> 00:09:51,815
može da bude napravljen sa samo 
jednom linijom koda prikazanom ovde.

174
00:09:51,815 --> 00:09:56,020
Istraživačima je trebalo mnogo 
vremena da pronađu ovu liniju koda.

175
00:09:56,020 --> 00:09:58,405
Ne kažem da je to lagan problem,

176
00:09:58,405 --> 00:10:01,460
ali izgleda da ako koristimo pravo programsko okruženje,

177
00:10:01,460 --> 00:10:04,705
mnogi algoritmi učenja mogu da 
budu veoma kratki programi.

178
00:10:04,705 --> 00:10:09,905
Zato ćemo u ovome kursu da 
koristimo Oktava programsko okruženje.

179
00:10:09,905 --> 00:10:12,615
Oktava je besplatan i otvoren softver.

180
00:10:12,615 --> 00:10:15,385
Korištenjem alata kao što su Oktava ili Matlab,

181
00:10:15,385 --> 00:10:19,210
mnogi algoritmi učenja postaju samo par linija koda.

182
00:10:19,210 --> 00:10:23,660
Kasnije u ovome kursu, naučiću 
vas kako da koristite Oktavu i

183
00:10:23,660 --> 00:10:25,305
implementirate neke od ovih algoritama u

184
00:10:25,305 --> 00:10:28,285
Oktavi ili ako imate Matlab, 
takođe možete da ga koristite.

185
00:10:28,285 --> 00:10:31,780
Praksa je da u Silikonskoj dolini za 
mnoge algoritme mašinskog učenja,

186
00:10:31,780 --> 00:10:35,480
prvo napravimo prototip našeg softvera u Oktavi jer

187
00:10:35,480 --> 00:10:39,500
softver u Oktavi čini da se algoritmi 
učenja implementiraju veoma brzo.

188
00:10:39,500 --> 00:10:42,270
Evo, svaka od ovih funkcija, kao na primer,

189
00:10:42,270 --> 00:10:45,875
SVD funkcija, što znači razdvajanje 
na pojedinačne vrednosti,

190
00:10:45,875 --> 00:10:50,820
ali to je rutina linearne algebre koja je ugrađena u Oktavu.

191
00:10:50,820 --> 00:10:53,365
Ako ovo pokušate da uradite u C++ ili Javi,

192
00:10:53,365 --> 00:10:57,960
to bi bilo mnogo linija koda koje linkuju 
složene C++ ili Java biblioteke.

193
00:10:57,960 --> 00:11:01,170
Znači, možete da ovo implementirate
 u C++ ili Javi ili Pajtonu,

194
00:11:01,170 --> 00:11:04,815
ali je to mnogo komplikovanije 
u tim programskim jezicima.

195
00:11:04,815 --> 00:11:07,590
Ono što mogu da vidim nakon 
korištenja mašinskog učenja

196
00:11:07,590 --> 00:11:10,155
tokom decenija je da

197
00:11:10,155 --> 00:11:15,215
učite mnogo brže ako koristite 
Oktavu kao programsko okruženje.

198
00:11:15,215 --> 00:11:20,055
Ako koristite Oktavu kao alat za učenje ili pravljenje prototipa,

199
00:11:20,055 --> 00:11:23,930
to ćete da radite mnogo brže.

200
00:11:23,930 --> 00:11:29,200
U stvari, ono što mnogi rade u velikim 
kompanijama Silikonske doline je da koriste

201
00:11:29,200 --> 00:11:31,580
algoritam kao što je Oktava da napravi prototip

202
00:11:31,580 --> 00:11:34,860
algoritma učenja i tek posle toga,

203
00:11:34,860 --> 00:11:38,220
možete da to migrirate u C++ ili Java ili bilo šta.

204
00:11:38,220 --> 00:11:40,470
Radeći stvari na taj način,

205
00:11:40,470 --> 00:11:42,330
možete da učinite da vaš algoritam radi mnogo

206
00:11:42,330 --> 00:11:45,670
br´že nego kada biste to započinjali u C++.

207
00:11:45,670 --> 00:11:48,195
Svestan sam da kao instruktor

208
00:11:48,195 --> 00:11:52,685
moram da kažem, 
verujte mi, ovo je konačan broj puta,

209
00:11:52,685 --> 00:11:56,980
ali za vas koji nikada ranije niste 
koristili programsko okruženje Oktave,

210
00:11:56,980 --> 00:12:02,520
tražiću od vas da mi verujete o 
ovome i mislim da je vaše vreme,

211
00:12:02,520 --> 00:12:03,850
vaše developersko vreme je jedno

212
00:12:03,850 --> 00:12:08,335
od najvrednijih resursa i mnogo ljudi radi ovo,

213
00:12:08,335 --> 00:12:12,690
mislim da ćete vi kao istraživač mašinskog 
učenja ili developer mašinskog učenja

214
00:12:12,690 --> 00:12:14,650
biti mnogo produktivniji ako naučite ovakve stvari i

215
00:12:14,650 --> 00:12:18,250
prototipove ovih stvari u Oktavi i u nekom drugom jeziku.

216
00:12:18,250 --> 00:12:22,650
Konačno, da zaokružimo priču,

217
00:12:22,650 --> 00:12:25,385
imam jedno brzo pitanje iz lekcije za vas.

218
00:12:25,385 --> 00:12:27,850
Govorili smo o nenadgledanom učenju,

219
00:12:27,850 --> 00:12:30,530
a to je takvo učenje gde dajete algoritmu mnogo

220
00:12:30,530 --> 00:12:34,210
podataka i samo ga pitate da vam nađe strukturu.

221
00:12:34,210 --> 00:12:36,530
Od četiri primera koja slede,

222
00:12:36,530 --> 00:12:39,350
koji od njih po vašem mišljenju su

223
00:12:39,350 --> 00:12:44,380
algoritmi nenadgledanog učenja a što je 
suprotno problemu nadgledanog učenja?

224
00:12:44,380 --> 00:12:47,055
Za svaki od četiri ček boksa na levoj strani,

225
00:12:47,055 --> 00:12:49,875
obeležite one za koje mislite da bi

226
00:12:49,875 --> 00:12:53,020
algoritam nenadgledanog učenja bio odgovarajući i

227
00:12:53,020 --> 00:12:56,020
kliknite na dugme u donjem desnom uglu
 kako biste proverili svoj odgovor.

228
00:12:56,020 --> 00:12:57,540
Kada se video zaustavi,

229
00:12:57,540 --> 00:13:02,355
molim vas odgovorite na pitanje sa slajda.

230
00:13:02,355 --> 00:13:08,290
Nadam se da se sećate problema spam 
foldera ako imate označene podatke,

231
00:13:08,290 --> 00:13:10,300
spam i ne-spam imejl,

232
00:13:10,300 --> 00:13:12,805
smatrali smo ga problemom nadgledanog učenja.

233
00:13:12,805 --> 00:13:15,460
Primer novih priča,

234
00:13:15,460 --> 00:13:18,685
to je baš primer Gugl novosti 
koji smo videli u ovome videu,

235
00:13:18,685 --> 00:13:22,520
videli ste kako možemo da koristimo algoritam 
grupisanja da bismo grupisali nove priče zajedno,

236
00:13:22,520 --> 00:13:24,345
dakle, to je nenadgledano učenje.

237
00:13:24,345 --> 00:13:28,400
Primer segmentacije tržišta o kome 
sam govorio malo ranije,

238
00:13:28,400 --> 00:13:32,310
možete ga rešiti nenadgledanim učenjem jer

239
00:13:32,310 --> 00:13:36,945
mogu da uzmem moje podatke i da tražim 
od algoritma da otkrije segmente tržišta.

240
00:13:36,945 --> 00:13:39,510
Poslednji primer, dijabetes,

241
00:13:39,510 --> 00:13:43,605
isti je kao i naš primer raka dojke iz poslednjeg videa,

242
00:13:43,605 --> 00:13:48,125
umesto dobrog i lošeg tumora 
ili dobroćudnog ili zloćudnog,

243
00:13:48,125 --> 00:13:51,410
imamo dijabetes ili ne.

244
00:13:51,410 --> 00:13:54,930
Dakle, koristićemo ga kao nadgledano, rešićemo ga

245
00:13:54,930 --> 00:13:59,100
kao problem nadgledanog 
učenja kao kod tumora dojke.

246
00:13:59,100 --> 00:14:02,325
Dakle, to je sve za nenadgledano učenje,

247
00:14:02,325 --> 00:14:07,700
a u sledećem videu ćemo da zaronimo 
malo više u određene algoritme učenja i početi

248
00:14:07,700 --> 00:14:13,750
da govorimo o tome kako ti algoritmi rade i kako da ih implementiramo.