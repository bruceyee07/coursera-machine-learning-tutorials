Sada ponešto znate o mašinskom učenju. U ovome videu bih želeo da vas naučim nešto o programskom jeziku Oktav u kojem biste trebali da možete veoma brzo da implementirate algoritme učenja koje smo do sada videli i algoritme učenja koje ćemo da vidimo kasnije na kursu. Nekada sam pokušavao 
da učim mašinsko učenje koristeći veliki broj programskih jezika, uključujući C++, Javu, Pajton, NamPaj a takođe i Oktav a ono šta sam shvatio je da su studenti mogli da najproduktivnije uče, da najbrže uče i da najbrže naprave model vašeg algoritma koristeći jezik relativno visokog nivoa kao što je Oktav. U stvari, ono što često vidim u Silikonskoj dolini je da, iako treba da izgradite, ako želite da izgradite veliki algoritam mašinskog učenja, ono što ljudi često rade je da prave model u Oktav jeziku. A to je sjajan jezik za modelovanje. Dakle, možete da učinite da vaš
 algoritam učenja radi veoma brzo. A ako baš trebate da izgradite veoma veliki sistem, jedino tad utrošite vreme da biste ponovo implementirali algoritam u C++, Java ili nekom sličnom jeziku. Jer sve lekcije koje smo učili troše vreme za razvoj programa. To je vaše vreme. Vreme za mašinsko učenje je veoma vredno. I ako možete da učinite da vaši algoritmi učenja rade brže u Oktav jeziku, tada na kraju imate mnogo ušteđenog vremena, prvo razvijajući algoritam u Oktav jeziku a onda implementirajući ga u, možda C++ ili Javi, 
ako smo sigurni da je ideja ispravna. Najopštiji jezici za modelovanje koje sam video da ljudi koriste za mašinsko učenje su Oktav, Matlab, Pajton, NamPaj i R. Oktav je zgodan jer je besplatan. I Matlab takođe radi odlično ali je skup za mnoge ljude. Ali ako imate pristup kopiji Matlaba možete je takođe koristiti na ovome kursu. Ako poznajete Pajton, NamPaj ili ako znate R, viđam da to neki ljudi koriste, ali ono što vidim je da ljudi dobijaju nešto sporiji razvoj sistema učenja, a, znate, ti jezici, sintaksa Pajtona ili NamPaja je malo nepogodnija od sintakse Oktava. A zbog toga, i zbog toga što kod za početnike objavljujemo u Oktav jeziku, strogo preporučujem da ne pokušavate da uradite sledeće 
vežbe ovoga kursa u NamPaj-u ili R-u. Ali zato preporučujem da umesto toga programske primere za ovaj kurs radite u Oktav jeziku. Ono što ću da uradim u ovome videu je da ću da prođem kroz listu komandi veoma, veoma brzo, a cilj je da vam na brzinu pokažem opseg komandi i opseg stvari 
koje možete da uradite u Oktav jeziku. Veb sajt kursa sadrži prepis svega što radim, i posle gledanja ovoga videa možete da se vratite na prepis postavljen na veb sajtu kursa kada želite da nađete neku komandu. Konkretno, ono što vam preporučujem da uradite je da prvo pogledate video materijal tutorijala i nakon gledanja da instalirate Oktav na vaš računar. I konačno, idite na veb sajt kursa, svucite prepise stvari koje vidite u lekciji i ukucajte koje god komande vam se čine da bi bile zanimljive u Oktav, tako da se to pokreće na vašem računaru, pa tako možete da vidite da to vi pokrećete. A sa time ćemo i da počnemo. Ovo je moj Vindouz desktop 
pa ću da pokrenem Oktav. Sad sam ušao u Oktav. A ovo je moj Oktav komandni prozor. Hajde prvo da vam pokažem elementarne operacije koje možete da izvršite u Oktav jeziku. Dakle, ukucajte 5 + 6. To će da vam da rezultat 11. 3 - 2. 5 * 8, 1 / 2, 2^6 je 64. Dakle, ovo su osnovne matematičke operacije. Takođe možete da izvršite i logičke operacije. Dakle, 1 == 2 Ovo se procenjuje kao netačno. Ovaj znak procenta označava komentar. Dakle, 1 == 2 izračunava kao netačno. A to predstavlja ova nula. Jedan nije jednako dva. Ovo je tačno. Dakle ovo vraća jedinicu. Primetite da znak za nije jednako je predstavljen znakovima tilda i jednako a ne uzvičnik i jednako kako je to predstavljeno u nekim drugim programskim jezicima. Da vidimo, logičke operacije, 1 i 0, koristi se dupli ampersand znak za logičko i. I to nam daje netačno. 1 ili 0 je ili operacija. A to nam daje tačno. A mogu da upotrebim XOR nad 1 i 0, i to nam daje 1. Ovo ovde na levoj strani, octave-324.exe:11 to je podrazumevani Oktav prompt. To nam pokazuje, šta, verziju Oktav - a i tako dalje. Ako ne želite taj prompt, postoji neka vrsta kripto komande PS ' >> i tako dalje, koju možete da koristite 
da biste promenili prompt. Mislim da je string u sredini apostrofa. '>> ' Meni se sviđa da moj prompt izgleda tako. I ako udarim enter. Ups, oprostite. Ovako Ovako, PS1. Sada je moj Oktav prompt promenjen u >> znak. A to, znate, izgleda malo bolje. Sledeće o čemu ćemo da 
pričamo su Oktav promenjive. Mogu da uzmem promenjivu a i dodelim joj vrednost 3. I udarim enter. Sada je a = 3. Želite da dodelite vrednost, 
ali ne želite da odštampate rezultat. Ako stavite tačka zarez, tačka zarez zaustavlja štampanje izlaza. Dakle, uradite to, enter, ništa se ne štampa. Dok a = 3 spaja ih, štampa, za razliku od a = 3; ne štampa ništa. Mogu da uradim i dodeljivanje stringa. b = 'hi'. Sada, ako samo pritisnem enter, odštampaće se promenjiva b. Dakle, b je string hi. c = (3 >=1). Dakle, sada c postaje tačno. Ako želite da odštampate ili da prikažete promenjivu, evo kako to radite. Hajde da postavimo a = pi;. A ako želim da odštampam a, samo ukucam a, ovako, 
i to će da ga odštampa. Za složeniju štampu takođe postoji komanda disp, a to označava displej. disp(a) jednostavno odštampa a, ovako. Takođe možete da štampate i stringove. Dakle, disp(sprintf('2 decimale: % 0.2 f', a)), ovako. A ovo će da odštampa string 2 decimale: 3.14. Ovo je jedna vrsta stare C sintakse. Za vas koji ste ranije programirali u C - u, ovo je osnovna sintaksa kojom se štampa na ekran. Dakle, sprintf generiše string a to je dve decimale: 3.14 string. Ovo %0.2f znači zameni a umesto ovoga, prikazujući dve cifre nakon decimalnog znaka. A disp uzima ovaj string koji je generisan sprintf komandom. sprintf, sprintf komanda. A disp u stvari prikazuje string. Da vam pokažem još jedan primer, sprintf šest decimala %0.6f, a. A ovo bi terbalo da štampa pi na šest decimala. Konačno, postoji nešto kao što je ovo. Postoji prečica za 
štampanje dugačkih formata. Podrazumevani rezultat je string. Prikazuje mnogo više decimalnih mesta. A format kratko je komanda koja vraća podrazumevanu vrednost štampajući manji broj cifara. U redu, tako radite sa promenjivima. Hajde sada da vidimo vektore i matrice. Recimo da želim da dodelim A matrici. Pokazaću vam primer: 1, 2 ; 3, 4; 5, 6. Ovo pravi 3x2 matricu A čiji je prvi red 1, 2, drugi red 3, 4 i treći red 5, 6. Ono što tačka zarez znači je da u osnovi kaže, idi na sledeći red matrice. Postoje i drugi načini da ovo napravimo. Kucajte A = 1, 2; 3, 4; 5, 6, ovako. A to je još jedan način dodeljivanja A vrednosti ove 3x2 matrice. Isto tako možete da dodeljujete i vektore. Dakle, v = 1, 2, 3. Ovo je u stvari vektor kao red, ili 3x1 vektor. A to je debeo y vektor, oprostite, ne, ovo je 1x3 matrica, u redu? Ne 3x1. Ako želim ovo da dodelim vektor koloni, u tom slučaju bih uradio ovo, v = 1; 2; 3. A to će da mi da 3x1. Ovo je 1x3 vektor. Dakle, ovo je vektor kolona. Evo jedne mnogo korisnije oznake. v = 1: 0.1: 2. Ovo će da postavi v da bude mnoštvo elemenata koji počinju od 1, a povećavaju se korakom od 0.1, sve do 2. Dakle, ako ovo uradim, 
v je jednako ovome, znate, vektor red. Ovo je 1x11 matrica. To je 1.1, 1.2, 1.3 i tako dalje, sve dok ne stigne do 2. Takođe mogu da postavim v = 1:6, i to postavlja v da budu ovi brojevi. Od 1 do 6, u redu. Evo još nekih načina da se naprave matrice. ones(2.3) je komanda koja pravi matricu koja je 2x3 matrica i elementi su sve jedinice. Dakle, ako postavim c = 2 puta ones(2, 3) to će da napravi jednu 2x3 matricu koja ima sve dvojke. Ovo možete da smatrate kraćim načinom pisanja ovoga c = 2, 2, 2; 222 što bi vam dalo isti rezultat. Recimo da je w = ones(1, 3), dakle, ovo će da bude jedan vektor red ili jedan red od tri jedinice, i slično, možete takođe da postavite w = zeroes(1, 3) a to će da napravi jednu 1x3 matricu sastavljenu od nula. Evo još par načina za pravljenje matrica. Ako uradim w = rand(1, 3), to će da mi da jednu 1x3 matricu slučajnih brojeva. Ako uradim rand(3, 3), to mi daje jednu 3x3 matricu slučajnih brojeva koji su nastali uniformnom raspodelom između 0 i 1. Svaki put kada ovo uradim, dobijem drugačiji skup slučajnih brojeva ispisanih uniformno između 0 i 1. Za vas koji ste upoznati sa Gausovom slučajnom promenjivom ili za one koji znaju šta je normalna slučajna promenjiva, takođe možete da postavite w = randn(1, 3) a to će da nam da tri vrednosti ispisane po Gausovoj raspodeli sa 0 srednjom vrednosti i varijansom ili standardnom devijacijom 1. A možete da postavite i složenije stvari kao što je w = -6 + kvadratni koren od 10 puta, recimo randn(1, 10000). I staviću tačku zarez na kraj zbog toga što ne želim ovo da odštampam. Šta će ovo da bude, pa, to će da bude jedan vektor od, sa 100,000, oprostite, 10,000 elemenata. Dakle, u stvari, znate šta? Hajde da to odštampamo. Dakle, ovo će da napravi 
matricu kao što je ova. Shvatate? Sa 10,000 elemenata. Dakle, to je w. A ako sada iscrtam histogram od w komandom hist, sada mogu da, a Oktav komandi hist treba, znate, par sekundi da to uradi, ali ovo je histogram moje slučajne promenjive w. To je bilo -6 + koren od 10 puta Gausova slučajna promenjiva. A mogu da iscrtam histogram sa više kantica, ili više korpica, recimo 50. A ovo je moj histogram Gausove raspodele sa sredinom u -6. Zato što imam -6 plus koren od 10 puta ovo. Dakle, varijansa ove Gausove slučajne promenjive je 10 a standardna devijacija je koren od 10 što je oko, šta? 3.1. Konačno, jedna posebna komanda za pravljenje matrica je eye komanda. Dakle, eye znači da je ovo možda igra reči u reči jedinična. Hajde da postavimo eye(4). Ovo je 4x4 jedinična matrica. Dakle, I = eye(4). Ovo mi daje 4x4 jediničnu matricu. A I = eye(6). To mi daje 6x6 jediničnu matricu, a eye(3) je 3x3 jedinična matrica. Na kraju, da zaključimo ovaj video, 
postoji još jedna korisna komanda. To je help komanda. Dakle, možete da unesete help eye a to će da vam da pomoć oko jedinične matrice. Udarite q za izlaz (quit). A takođe možete da unesete help rand. To vam prikazuje dokumentaciju o rand ili funkciji za generisanje slučajnih brojeva. Ili čak help help, što će da vam prikaže, znate, 
pomoć oko funkcije help (pomoć). Dakle, to su osnovne operacije u Oktav programu. A sa time biste trebali da budete u mogućnosti da napravite par matrica, 
množite, sabirate, i da koristite osnovne operacije u Oktav programu. U sledećem videu voleo bih da počnemo da pričamo o komplikovanijim komandama i kako da koristite podatke i 
kako da ih obrađujete u Oktav programu.