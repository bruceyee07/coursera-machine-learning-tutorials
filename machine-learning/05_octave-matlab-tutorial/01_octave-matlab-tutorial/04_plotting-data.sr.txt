Dok razvijate algoritme učenja, veoma često par jednostavnih grafikona mogu da vam daju bolju sliku onoga što vaš algoritam radi i proverava da li sve ide kako treba i da li algoritam radi ono čemu je namenjen. Na primer, u nekom od ranijih videa sam govorio o tome kako crtanje funkcije greške J(teta) može da vam pomogne da se uverite u to da gradijent opadanja konvergira. Često crtanje podataka ili svih izlaza algoritma učenja će takođe da vam da ideje kako da poboljšate vaš algoritam učenja. Srećom, Oktav poseduje veoma jednostavne alate koji generišu mnoštvo različitih grafikona i dok koristim algoritme učenja, uviđam da je crtanje podataka, crtanje algoritma učenja i tako dalje, često važan deo u procesu shvatanja kako da se algoritam poboljša, a u ovome videu bih želeo da vam pokažem neke od tih Oktav alata za crtanje i vizualizaciju vaših podataka. Ovo je moj Oktav prozor. Napravićemo na brzinu neke podatke za crtanje. Dakle, postaviću t da bude, znate, ovaj niz brojeva. Ovo je t, skup brojeva od 0 do 0.98. Postavimo i y1 da je sinus od 2 pi 4 t i ako želim da iscrtam sinusnu funkciju, veoma je lako. Samo ukucam plot(t, y1) i ukucam enter. I pojavljuje se ovaj grafikon gde je vodoravna osa promenjiva t a uspravna je y1, a to je sinus funkcija koju ste videli i koju smo proračunali. Postavimo y2 da bude jednako kosinus od 2 pi 4 t, ovako. I kada iscrtam t, y2, ono što će Oktav da uradi jeste da će da uzme grafikon sinus funkcije i zameniće je kosinus funkcijom i sada imamo kosinus funkciju. A sada, šta ako hoću da imam obe funkcije, sinus i kosinus grafikone zajedno iscrtane? Ono što ću da uradim jeste da ću da ukucam plot(t, y1). Ovo je moja sinus funkcija, a onda ću da koristim funkciju hold on. A ono što hold on funkcija radi jeste da kaže oktavu da iscrta nove grafikone preko staroga i sada ću da ukucam plot(t, y2). Iscrtaću kosinus funkciju drugačijom bojom. Dakle, staviću r tamo, unutar apostrofa, i umesto izmene trenutnog grafikona, iscrtaću kosinus funkciju preko a r označava da želim da koristim crvenu boju. Evo dodatnih komandi, xlabel('time,'), da bismo imenovali X ili vodoravnu osu. A ylabel(value) da bismo imenovali uspravnu osu kao vrednost. A takođe mogu da imenujem dve linije ovom komandom: legend('sin', 'cosin') a ovo će da stavi ovu legendu u gornji desni ćošak, prikazujući šta znače ove dve linije, i konačno title('my_plots') a to je naziv ovoga grafikona. I poslednje, ako želite da sačuvate ovaj grafikon, ukucajte print -dpng 'my_plot' .png Dakle, png jegrafički format fajla, a ako ovo uradite, omogućiće vam da ovo sačuvate kao fajl. Ako to uradim, u stvari ću da promenim direktorijum u, da vidimo, ovako, a onda ću ovo da odštampam. Dakle, potrajaće malo, u zavisnosti od toga kako je postavljena konfiguracija Oktav programa, može da potraje par sekundi, ali promena direktorijuma na moj desktop i Oktav - u sada treba par sekundi da ovo sačuva. Ako odem na moj desktop, hajde da sklonim ove prozore. Ovo je moj my_plot.png koje je Oktav sačuvao, a na njemu je grafikon sačuvan kao png fajl. U Oktav programu fajlove možete da čuvate u hiljadu drugih formata. Dakle, ukucate help plot ako želite da vidite ostale formate fajlova, osim png u kom ste sačuvali prethodne grafikone. I na kraju, ako želite da zatvorite grafikon, komanda close će da ga zatvori. Ovo je grafikon, ukucao sam close i taj grafikon je nestao sa desktopa. Oktav vam takođe omogućava da označite grafikone i brojeve. Kucate figure(1); plot(t, y1) To će da pokrene prvi grafikon i iscrtaće t, y1. Nakon toga, ako želite još jedan grafikon, označite ga drugim brojem. Dakle, figure(2); plot(t, y2), ovako, i sada na mom desktopu imam dva grafikona. Dakle, figure1 i figure2 tako da jedan prikazuje sinus funkciju, drugi kosinus funkciju. Evo još jedne pogodne komande koju često koristim, a to je subplot komanda. Tako, ukucaćemo subplot(1, 2, 1). Ono što radi je da podeli grafikon u mrežu sa 1 vrstom i 2 kolone a to označavaju prva dva parametra, a kreće od pristupa prvom elementu. To označava krajnji parametar 1, u redu? Podeli moj grafikon u dve kolone, a na početku želim da pristupim prvom elementu. Pa tako, ako ovo ukucam rezultat toga je grafikon na levoj strani. A ako iscrtam t, y1, to će da popuni prvi element. A ako sada ukucam subplot(1, 2, 2) počeću da pristupam drugom elementu i onda kucam plot(t, y2). Pa, ovo će da iscrta y2 u desni deo, odnosno, u drugi element. I poslednja komanda, takođe možete da promenite skalu osa, menjamo osu na 1.51 -1 -1 a ovo nam postavlja opseg x vrednosti i opseg y vrednosti za grafikon na desnoj strani. Konkretno, postavlja vodoravne vrednosti na grafikonu na desnoj strani u opseg brojeva od 0.5 do 1, a uspravne vrednosti postavlja u opseg vrednosti od -1 do 1. Ne morate sve ove komande da pamtite. Ako ikada budete trebali da promenite ose ili da znate šta je ovo, postoji axis komanda pa tako možete da dobijete detalje koristeći Oktav help komandu. Konačno, samo još par komandi, CLF čisti grafikon a evo još jednog korisnog trika. Recimo da je A jednako jednoj 5x5 magičnoj matrici. Dakle, A je sada 5x5 matrica i postoji pogodan trik koji ponekada koristim da bih predstavio matricu, a to je, mogu da koristim imagesc(A) a ovo će da iscrta jednu 5x5 matricu, 5x5 mrežu boja. A različite boje odgovaraju različitim vrednostima elemenata matrice A. Konkretno, mogu da koristim colorbar. Koristiću malo komplikovaniju komandu, imagesc(A) colorbar colormap grey. Ovo u stvari pokreće tri komande odjednom. Pokrećem imagesc, onda pokrećem colorbar i tada colormap grey. Ono što dobijam jeste da se postavlja karta boja, dakle siva karta boja, a na desnoj strani takođe postavlja paletu boja. Dakle, ova paleta boja pokazuje čemu odgovaraju različite nijanse boja. Konkretno, gornji levo element matrice A je 17, a to odgovara nekoj vrsti nijansi sive boje mente, dok nasuprot tome, drugi element matrice A, recimo 1 2 element matrice A je 24. U redu, dakle A(1, 2) je 24. Dakle, to odgovara ovome kvadratu ovde, a to je najbliže nijansi bele. A male vrednosti, recimo A, šta je to? A(4, 5), znate, ima vrednost ovo ovde 3, to odgovara, možete videti na paleti boja da to odgovara mnogo tamnijoj nijansi u ovoj slici. Dakle, evo još jednog primera, mogu da iscrtam veći, evo magične matrice od 15 koja vam daje 15x15 magični kvadrat a to mi daje crtež moga 15x15 magičnog kvadrata. I na kraju, da zaključimo ovaj video, ono što ste videli da sam ovde uradio jeste da sam zarezom razdvojio pozive funkcija. Evo kako sam to u stvari uradio. Ako ukucam a = 1, b = 2, c = 3, i udarim enter, to je u stvari pokretanje tri komande u isto vreme. Ili, u stvari, pokretanje tri komande jedne za drugom, a to će da odštampa sva tri rezultata. Ovo mnogo liči na a = 1; b = 2; c = 3, sa razlikom da, ako koristim tačku zarez umesto zareza, neće da se odštampa ništa. Dakle, ovo, znate, ovo ovde zovemo povezivanje komandi zarezom ili povezivanje 
poziva funkcija zarezom. A to je samo još jedan pogodan način u Oktav programu da stavite više komandi kao što su imagesc, colorbar, colormap, da stavite više komandi u istu liniju. Dakle, to je to. Sada znate kako da iscrtate različite grafikone u Oktavu a u sledećem videu sledeći važan deo o čemu bih želeo da vam pričam je kako da kontrolišete iskaze kao što su if, while i for iskazi u oktavu i kako da definišete i koristite funkcije.