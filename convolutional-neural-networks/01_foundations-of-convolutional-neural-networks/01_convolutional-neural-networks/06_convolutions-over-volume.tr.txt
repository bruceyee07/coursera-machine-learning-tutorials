Evrişim işleminin 2 boyutlu görüntüler üzerinde nasıl çalıştığını gördünüz Şimdi, sadece 2 boyutlu görüntüler değil 3 boyutlu görüntüler üzerinde de nasıl çalıştırabileceğimizi bakalım Bir örnekle başlayalım Diyelim ki, sadece gri ölçekli(gray scale) görüntü üzerinde değil de bir RGB görüntüde de özellikleri belirlemek istiyorsunuz RGB görüntü, 6 x 6 bir görüntü yerine 6 x 6 x 3 olabilir Burada ki 3, üç renk kanalına karşılık geliyor Yani bunu 3 tane 6x6 görüntü yığını olarak düşünebilirsiniz Bu resimdeki kenarları veya başka özellikleri belirlemek için bu görüntüyü önceden yaptığımız gibi 3 x 3 filtre ile değil 3 boyutlu filtre ile evirebiliriz(convolve) Bu filtre 3 x 3 x 3 olacak Yani filtrenin kendisi de 3 katmanlı olacak. Bu katmanlar kırmızı, yeşil ve mavi kanallara karşılık geliyor. Bu şeylere isim vermek gerekirse Buradaki ilk 6 görüntünün yüksekliği bu genişliği ve bu üçte kanal sayısı. Benzer bir şekilde filtrenin de yükseliği, genişliği ve kanal sayısı vardır Ve görüntünün kanal sayısı, filtrenin kanal sayısı ile eşleşmek zorundadır Yani bu iki rakam eşit olmak zorunda Bir sonraki slaytta evrişim işleminin nasıl çalıştığını göreceğiz ancak bu işlemin sonucu 4 x 4 bir görüntü olacak ve dikkat edin bu 4 x 4 x 1 sonunda artık 3 yok. Bu işlemin nasıl çalıştığını detaylı olarak inceleyelim, ancak daha güzel çizilmiş bir resim kullanalım İşte bu 6 x 6 x 3'lük bir görüntü ve bu da 3 x 3 x 3'lük filtre ve bu son sayı, 3 boyutlu görüntü ve filtrenin son rakamı eşleşiyor. Bu 3 x 3 x 3'lük filtrenin çizimini basitleştirmek için matris yığınları şeklinde çizmek yerine bazen sadece bunun gibi 3 boyutlu bir küp çizeceğim. Bu evrişim işleminin çıktısını hesaplamak için, bu 3 x 3 x 3'lük filtreyi alıp en üst sol konuma yerleştirin Bu 3 x 3 x 3'lük filtrenin 27 rakamı olduğuna dikkat edin veya 27 parametresi olduğuna Ve şimdi, bu 27 rakamın her birini alın ve bunları görüntünün kırmızı, yeşil ve mavi kanallarındaki karşılık gelen rakamlar ile çarpın. Yani kırmızı kanaldaki ilk 9 rakamı alın daha sonra altındaki yeşil kanalı alın daha sonra da altındaki mavi kanalı alın ve solda gösterilen bu sarı küpün kapsadığı 27 rakam ile çarpın Sonra tüm bu sayıları toplayın ve bu size çıktınızdaki ilk rakamı verecek. Bir sonraki çıktıyı hesaplamak için bu küpü alın ve bir yana kaydırın ve 27 çarpımı tekrardan yapın. 27 sayıyı toplayın ve bu size sonraki çıktıyı veriyor. Bir sonraki sayı için yapın, bir sonraki konum için yapın bu size 3. çıktıyı veriyor ve bu şekilde devam ediyor. Bu size 4. çıktıyı veriyor. Sonra bir satır aşağıya ve bir sonrakine, bir sonrakine, bir sonrakine ve böyle gidiyor, siz fikri anladınız en sonuna kadar gidiyor Son çıktınızı alacağınız konum burası. Peki, bu ne yapmanıza imkan sağlıyor ? İşte bir örnek. Bu filtre 3 x 3 x 3 Eğer görüntünün kırmızı kanalındaki kenarları tespit etmek istiyorsanız ilk fitreniz şöyle olabilir, 1, 1, 1, -1, -1, -1, her zaman olduğu gibi ve yeşil kanalı tamamen 0 yapın ve mavi filtreyi tamamen 0 yapın Eğer 3 x 3 x 3 filtrenizi oluşturmak için bu 3 yığınınız varsa o zaman bu filtre yalnızca kırmızı kanaldaki dikey kenarları tespit eder. Alternatif olarak, dikey kenarın hangi renkte olduğunu umursamıyor iseniz, o zaman bunun gibi bir filtreniz olabilir. her 3 kanalda da 1, 1, 1, - 1, -1, -1 olan Böylece bu ikinci alternatifin parametrelerini ayarlayarak, herhangi bir renkte kenarları tespit eden 3 x 3 x 3'lük bir kenar dedektörü olur. Ve bu parametrelerin farklı seçenekleriyle 3 x 3 x 3 farklı özellik detektörleri elde edebilirsiniz. Bilgisayarlı görüdeki uzlaşıma göre, Belirli bir yükseklikte, belirli bir genişlikte ve belirli sayıda kanalınız olan bir girdiniz olduğunda filtreniz farklı bir yüksekliğe farklı bir genişliğe ancak aynı sayıda kanala sahip olacaktır. Ve teoride sadece kırmızı kanala bakan veya sadece yeşil ve mavi kanala bakan filtreler olabilir. Ve tekrardan, şuna dikkat edin 6 x 6 x 3'lük bir yığını(volume), 3 x 3 x 3'lük ile evriştirdiğinizde(convolving) bu size 4 x 4'lük iki boyutlu bir çıktı veriyor. Artık yığınlar(volumes) üzerinde nasıl evrişim(conv.) yapıldığını biliyorsunuz evrişimsel sinir ağlarını inşa etmek için çok önemli son bir fikir daha var Ya sadece dikey kenarları tespit etmek istemiyorsak ? Ya hem dikey hem de yatay kenarları tespit etmek istersek ? ve belki 45 derecedeki kenarları veya 70 derecedeki kenarları da istersek başka bir deyişle, birden fazla filtreyi aynı zamanda kullanmak istersek ? Burada önceki slayttan aldığımız resim var 6 x 6 x 3'lük bir yığını(volume), 3 x 3 x 3'lük ile evriştirmiştik. 4 x 4'lük çıktı almıştık ve belki bu bir dikey kenar detektörü, veya başka bir özelliği tespit etmeyi öğrenmiş. Şimdi, bu turuncumsu renk ile gösterilen ikinci bir filtre, yatay kenar detektörü olabilir. Belki bu ilk filtre ile evriştirmek(convolving) size bu ilk 4 x 4 çıktıyı veriyor. ve bu ikinci filtre ile evriştirmek farklı bir 4 x 4 çıktı veriyor Ve sonra da bu iki 4 x 4 çıktıyı alıp önce bu birinciyi alıp öne koyun ve ikinci filtrenin çıktısını da alıp, buraya çizeyim, arkasına koyalım Bu ikisini istifleyerek 4 x 4 x 2 bir çıktı yığını(volume) elde ederiz, değil mi ? Ve bu yığını sanki bir kutu düşünebilirsiniz Sanırım böyle gözükür. Yani bu 4 x 4 x 2'lik çıktı, 6 x 6 x 3'lük görüntüye 2 farklı 3 x 3'lük filtre uygulanmasının iki tane 4 x 4 çıktı üretmesi ve bunların istiflenmesiyle oluşturulmuştur. Ve buradaki iki, 2 farklı filtre kullanmamızdan kaynaklanıyor. Hadi boyutları özetleyelim, Eğer n x n x n_c boyutlu görüntünüz var ise örneğin, burada 6 x 6 x 3 var, (n_c kanal sayısını gösteriyor) buna f x f evrişim uygularsak ve tekrardan bu aynı n_c olmalı yani bu 3 x 3 x 3 ve uzlaşıma göre bu ve bu aynı rakam olmak zorunda. Sonra, n-f+1 x n-f+1 n-f+1 x n-f+1 x n_c' aslında bu bir sonraki katmanın kanal sayısı bu kullandığınız filtre sayısı Yani bizim örneğimizde 4 x 4 x 2 olur. 2 adım(stride) kullandığımızı ve dolgulama (padding) kullanmadığımızı varsayarak yazdım. Ancak farklı bir adım(stride) veya dolgulama(padding) kullansaydınız bu n-f+1 önceki videolarda gördüğümüz gibi olağan bir şekilde etkilenecekti. Yani yığın(volume) üzerinde evrişim fikri, çok güçlü olduğu ortaya çıktı. Sadece küçük bir kısmı, doğrudan 3 kanal ile RGB görüntüler üzerinde çalışabilirsiniz. Ancak bundan daha da önemlisi artık dikey ve yatay kenarlar gibi 2 özelliiği tespit edebilirsiniz, veya 10, veya 128 veya belki birkaç yüz tane farklı özellik. Ve çıktının da kanal sayısı tespit ettiğiniz özelliklerin(features) sayısına eşit olacak. Gösterimsel bir not olarak, Kanal sayısını bu son boyutu göstermek için kullanıyorum, literatürde insanlar buna aynı zamanda bu 3 boyutlu yığının(volume) derinliği de diyorlar. İki gösterim de kanallar veya derinlik, literatürde çoğunlukla kullanılıyor. Ancak ben derinliği daha kafa karıştırıcı buluyorum çünkü genellikle sinir ağının deriniliği hakkında da konuşuluyor. Yani bu videolarda kanal terimini bu filtrelerin 3. boyutu olarak kullanacağım. Artık yığınlar(volumes) üzerinde nasıl evrişim(conv.) yapıldığını biliyorsunuz Artık evrişimsel sinir ağlarının(CNN) 1 katmanını oluşturmak için hazırsınız. Bir sonraki videoda bunu nasıl yapacağımızı görelim...