1
00:00:01,000 --> 00:00:05,510
これまで どのように２D画像で畳み込みが働くのを見てきた

2
00:00:05,510 --> 00:00:08,505
ここからは畳み込みを

3
00:00:08,505 --> 00:00:10,190
２D画像だけでなく

4
00:00:10,190 --> 00:00:13,265
3次元ボリュームにも実装していく方法を学習しよう

5
00:00:13,265 --> 00:00:15,610
例から始めよう

6
00:00:15,610 --> 00:00:17,930
特徴検出を行うが

7
00:00:17,930 --> 00:00:20,920
単なるグレースケール画像で ではなく

8
00:00:20,920 --> 00:00:22,550
RGB画像で

9
00:00:22,550 --> 00:00:27,035
そうすると RGB画像は 6 x 6 画像の代わりに

10
00:00:27,035 --> 00:00:29,330
6 x 6 x 3 になるだろう

11
00:00:29,330 --> 00:00:32,980
この３は ３つのカラーチャンネルだ

12
00:00:32,980 --> 00:00:37,575
これは 6 x 6 画像を 3つ重ねたものと 捉えることができる

13
00:00:37,575 --> 00:00:41,925
この画像で エッジや 他の特徴を 検出するため

14
00:00:41,925 --> 00:00:43,490
これを 畳み込むわけだが

15
00:00:43,490 --> 00:00:47,320
前に使ったような

16
00:00:47,320 --> 00:00:49,120
3 x 3 フィルターではなく

17
00:00:49,120 --> 00:00:51,907
3Dフィルターを使う

18
00:00:51,907 --> 00:00:54,865
それは 3 x 3 x 3 フィルターとなる

19
00:00:54,865 --> 00:01:01,960
このフィルター自身 ３つの層を持っている

20
00:01:01,960 --> 00:01:04,897
赤 緑 青 のチャンネルだ

21
00:01:04,897 --> 00:01:07,180
それじゃ これらに名前を付けよう

22
00:01:07,180 --> 00:01:08,980
この最初の６は

23
00:01:08,980 --> 00:01:12,290
画像の "高さ"

24
00:01:12,290 --> 00:01:19,360
これは "幅" そして この３は "チャンネル数"

25
00:01:19,360 --> 00:01:24,075
そして フィルターにも

26
00:01:24,075 --> 00:01:27,995
"高さ" "幅" "チャンネル数" がある

27
00:01:27,995 --> 00:01:31,170
そして 画像のチャンネル数は

28
00:01:31,170 --> 00:01:35,143
フィルターのチャンネル数と合わなくてはならない

29
00:01:35,143 --> 00:01:38,480
つまり この２つの数は同じでなくてはならない

30
00:01:38,480 --> 00:01:42,365
次のスライドでは この畳み込み処理が 実際にどのように働くのかを見るけど

31
00:01:42,365 --> 00:01:46,740
出力は 4 x 4 画像になる

32
00:01:46,740 --> 00:01:49,600
これは 4 x 4 x 1 になることに注意してね

33
00:01:49,600 --> 00:01:53,160
最後は ３ じゃない

34
00:01:53,160 --> 00:02:01,313
これが どのように働くのかの詳細に行くけど
もっと素敵な画像を使おう

35
00:02:01,313 --> 00:02:05,365
これが 6 x 6 x 3 画像

36
00:02:05,365 --> 00:02:10,030
これが 3 x 3 x 3 フィルター

37
00:02:10,030 --> 00:02:11,830
そして この最後の番号が

38
00:02:11,830 --> 00:02:17,395
チャンネル数で 画像とフィルターとで 一致している

39
00:02:17,395 --> 00:02:22,195
この 3 x 3 フィルターを描くのを簡略化するため

40
00:02:22,195 --> 00:02:26,674
行列を重ねるのではなく

41
00:02:26,674 --> 00:02:32,325
このような ３次元の立方体で描くよ

42
00:02:32,325 --> 00:02:37,775
では この畳み込み処理の出力を計算する

43
00:02:37,775 --> 00:02:42,440
やることは 3 x 3 x 3 フィルターを取り

44
00:02:42,440 --> 00:02:45,440
左上のこの場所におく

45
00:02:45,440 --> 00:02:51,026
3 x 3 x 3 フィルターには27個の数字がある

46
00:02:51,026 --> 00:02:53,988
27個のパラメーターを持つ 3次元の立方体だ

47
00:02:53,988 --> 00:02:56,180
それから この27個の数字それぞれを

48
00:02:56,180 --> 00:03:05,695
画像の 対応する赤緑青のチャンネルの数字に

49
00:03:05,695 --> 00:03:07,425
かけ合わせる

50
00:03:07,425 --> 00:03:09,620
赤チャンネルから最初の9つの数を取り

51
00:03:09,620 --> 00:03:12,080
その下の緑チャンネルから３つ(訳注: ９つの言い間違いであろう)

52
00:03:12,080 --> 00:03:13,970
その下の青チャンネルから３つ(訳注: ９つの言い間違いであろう)

53
00:03:13,970 --> 00:03:17,880
そして 左に示した黄色の立方体が覆っている27個の数と

54
00:03:17,880 --> 00:03:22,310
それぞれ 掛け算する

55
00:03:22,310 --> 00:03:28,615
そして これらの数字を足し合わせて 出力の最初の数字を得る

56
00:03:28,615 --> 00:03:34,700
そして 次の出力を計算するのに このの立方体を1つずらし

57
00:03:34,700 --> 00:03:37,190
そして 再び 27回 掛け算をし

58
00:03:37,190 --> 00:03:40,375
27個の数を足し合わせる

59
00:03:40,375 --> 00:03:42,545
これで 二つ目の出力を得る

60
00:03:42,545 --> 00:03:44,465
同じことを次にも行い

61
00:03:44,465 --> 00:03:45,647
次の位置にも行い

62
00:03:45,647 --> 00:03:49,520
3番目の出力を得 次も続け 4番目を得る

63
00:03:49,520 --> 00:03:54,080
それから 行を1つ下げ 次のを行い

64
00:03:54,080 --> 00:03:55,930
そして次 次

65
00:03:55,930 --> 00:03:58,760
以下同様 分かるでしょ

66
00:03:58,760 --> 00:04:02,080
最後にくるまで

67
00:04:02,080 --> 00:04:09,090
ここが最後の出力を得る位置となる

68
00:04:09,090 --> 00:04:10,741
さて ここで行ったことが 何をもたらすのか？

69
00:04:10,741 --> 00:04:12,775
例を挙げよう

70
00:04:12,775 --> 00:04:15,170
このフィルターは 3 x 3 x 3 だ

71
00:04:15,170 --> 00:04:20,455
よって 画像の赤チャンネルのエッジを検出したければ

72
00:04:20,455 --> 00:04:24,990
最初のフィルターを いつも通りに

73
00:04:24,990 --> 00:04:27,840
1 1 1, ..., -1 -1 -1 として

74
00:04:27,840 --> 00:04:31,385
緑のチャンネルはすべて 0 にし

75
00:04:31,385 --> 00:04:35,120
青のチャンネルもすべて 0 にする

76
00:04:35,120 --> 00:04:42,410
そして これら３つを積み重ねて 3 x 3 x 3 フィルターにすれば

77
00:04:42,410 --> 00:04:46,040
そうしたら これは 赤チャンネルにおいてのみ

78
00:04:46,040 --> 00:04:49,720
エッジ検出するフィルターになる

79
00:04:49,720 --> 00:04:54,950
逆に 垂直エッジの色が 何でもいいのであれば

80
00:04:54,950 --> 00:04:58,871
こんなフィルターになるだろう

81
00:04:58,871 --> 00:05:01,520
1 1 1, ...,

82
00:05:01,520 --> 00:05:02,800
-1 -1 -1

83
00:05:02,800 --> 00:05:04,714
全てのチャンネルで

84
00:05:04,714 --> 00:05:08,791
この２番目の例では こんなパラメータをセットして

85
00:05:08,791 --> 00:05:10,980
エッジ検出器を得た

86
00:05:10,980 --> 00:05:12,710
3 x 3 x 3 のエッジ検出器を

87
00:05:12,710 --> 00:05:15,935
それは どんな色のエッジも検出する

88
00:05:15,935 --> 00:05:19,460
そして これらのパラメータの異なる選択により

89
00:05:19,460 --> 00:05:24,280
この 3 x 3 x 3 フィルターから 異なる特徴検出器を得ることができる

90
00:05:24,280 --> 00:05:26,320
なお コンピュータ ビジョンの慣例では

91
00:05:26,320 --> 00:05:31,790
入力が ある高さ ある幅 あるチャンネル数

92
00:05:31,790 --> 00:05:33,440
の時

93
00:05:33,440 --> 00:05:36,200
フィルターは 異なる高さ

94
00:05:36,200 --> 00:05:39,542
異なる幅にし得るが チャンネル数は同じにする

95
00:05:39,542 --> 00:05:44,780
理論的には 赤チャンネルだけを見るフィルターというのも可能だが

96
00:05:44,780 --> 00:05:50,776
もしくは 緑チャンネルだけ 青チャンネルだけ を見るフィルターというのも

97
00:05:50,776 --> 00:05:54,565
また言うけど 気付いているだろうけど ボリュームを畳み込む

98
00:05:54,565 --> 00:06:00,793
6 x 6 x 3 を 3 x 3 x 3 で畳み込むと

99
00:06:00,793 --> 00:06:07,434
4 x 4 の２D出力が得られる

100
00:06:07,434 --> 00:06:10,629
これで ボリュームを畳み込む方法を理解したでしょう

101
00:06:10,629 --> 00:06:17,125
最後に1つ 畳み込みニューラルネットワークを構築するに当たって 重要な考えがある

102
00:06:17,125 --> 00:06:20,550
それは もし 垂直エッジの検出だけをしたいのでは無い場合 どうするか？ というものだ

103
00:06:20,550 --> 00:06:23,550
垂直エッジと水平エッジを検出したい場合 どうするか？

104
00:06:23,550 --> 00:06:27,080
もし 45°エッジと70°エッジも 検出したい場合は？

105
00:06:27,080 --> 00:06:32,189
言い換えれば 同時に複数のフィルターを使いたい場合 どうするか？

106
00:06:32,189 --> 00:06:35,640
ここに 前のスライドから持ってきた絵がある

107
00:06:35,640 --> 00:06:38,380
6 x 6 x 3 を 3 x 3 x 3 で畳み込んで

108
00:06:38,380 --> 00:06:39,717
4 x 4 を得た

109
00:06:39,717 --> 00:06:42,420
そして これは垂直エッジ検出器かもしれないし

110
00:06:42,420 --> 00:06:46,023
他の特徴検出器かもしれない

111
00:06:46,023 --> 00:06:52,950
では ２番目のフィルターをこのオレンジ色で示そう

112
00:06:52,950 --> 00:07:00,563
これは 水平エッジ検出器かもしれない

113
00:07:00,563 --> 00:07:05,657
最初のフィルターで畳み込むと 最初の 4 x 4 出力を得る

114
00:07:05,657 --> 00:07:13,565
２番目のフィルターで畳み込むと 別の 4 x 4 出力を得る

115
00:07:13,565 --> 00:07:16,800
我々ができるのは この２つの 4 x 4 出力を取り

116
00:07:16,800 --> 00:07:20,770
最初のを前に置き

117
00:07:20,770 --> 00:07:25,069
２番目のフィルターの出力を ここに描く

118
00:07:25,069 --> 00:07:27,870
このように 後ろに置こう

119
00:07:27,870 --> 00:07:29,465
こんな風に ２つを一緒に積み重ねると

120
00:07:29,465 --> 00:07:35,970
4 x 4 x 2 出力ボリュームを得る でしょ？

121
00:07:35,970 --> 00:07:39,900
そして このボリュームは ここに描くように 箱と考えることができる

122
00:07:39,900 --> 00:07:41,710
こんな感じになる

123
00:07:41,710 --> 00:07:45,620
これは 4 x 4 x 2 出力ボリュームだ

124
00:07:45,620 --> 00:07:49,740
これは 6 x 6 x 3 画像を

125
00:07:49,740 --> 00:07:54,885
２つの異なる 3 x 3 x 3 で畳み込んだ結果だ

126
00:07:54,885 --> 00:07:57,870
２つの 4 x 4 出力を得て 積み重ね

127
00:07:57,870 --> 00:08:02,093
4 x 4 x 2 ボリュームを作った

128
00:08:02,093 --> 00:08:07,830
そして この２つは ２つの異なるフィルターを使ったことから来ている

129
00:08:07,830 --> 00:08:14,320
それでは 次元数についてまとめよう

130
00:08:14,320 --> 00:08:19,570
n x n x チャンネル数 の入力画像があり

131
00:08:19,570 --> 00:08:22,975
例えば 6 x 6 x 3

132
00:08:22,975 --> 00:08:26,960
ここで 下付き文字 C の n はチャンネル数だ

133
00:08:26,960 --> 00:08:31,675
そして それを f x f x (同じ値となる下付き文字 C の n) で

134
00:08:31,675 --> 00:08:34,645
畳み込む

135
00:08:34,645 --> 00:08:38,360
これは 3 x 3 x 3

136
00:08:38,360 --> 00:08:45,180
そして 慣例では これとこれは 同じ数になる

137
00:08:45,180 --> 00:08:52,150
よって 得られるのは

138
00:08:52,150 --> 00:08:59,970
n - f + 1  x  n - f + 1  x  nC'

139
00:08:59,970 --> 00:09:02,314
これは 実は 次の層のnCだ

140
00:09:02,314 --> 00:09:06,850
とにかく これが 使うフィルターの数だ

141
00:09:06,850 --> 00:09:11,895
そうして この例では これは 4 x 4 x 2 となる

142
00:09:11,895 --> 00:09:16,335
それから これは ストライド１でパディング無しを仮定して書いた

143
00:09:16,335 --> 00:09:19,270
でも 異なるストライドやパディングを使うなら

144
00:09:19,270 --> 00:09:22,855
この n - f + 1 は 前のビデオで見たのと

145
00:09:22,855 --> 00:09:26,245
同じ影響を受ける

146
00:09:26,245 --> 00:09:29,280
さぁ ボリュームを畳み込むという考えは

147
00:09:29,280 --> 00:09:31,519
とても強力だと分かった

148
00:09:31,519 --> 00:09:34,350
その一つは

149
00:09:34,350 --> 00:09:38,080
３チャンネルあるRGB画像を直接処理できることだ

150
00:09:38,080 --> 00:09:40,485
だが より重要なのは

151
00:09:40,485 --> 00:09:43,420
垂直や水平等の２つの特徴

152
00:09:43,420 --> 00:09:46,534
もしくは10個の もしくは128個の

153
00:09:46,534 --> 00:09:49,365
もしくは数百個の異なる特徴を検出できることだ

154
00:09:49,365 --> 00:09:51,390
そして 出力は

155
00:09:51,390 --> 00:09:58,405
検出するフィルター数と同じチャンネル数となる

156
00:09:58,405 --> 00:10:00,995
記法についての注意をする

157
00:10:00,995 --> 00:10:07,125
私は 文献では この最後の次元を チャンネル数と呼んできた

158
00:10:07,125 --> 00:10:14,620
これは ３Dボリュームの深さと呼ばれることもある

159
00:10:14,620 --> 00:10:17,255
チャンネルも深さも 共に 文献で使われる

160
00:10:17,255 --> 00:10:19,375
しかし 深さは より混乱させ易い

161
00:10:19,375 --> 00:10:22,855
なぜなら ニューラルネットワークの深さについて話す場合も良くあるからだ

162
00:10:22,855 --> 00:10:26,885
それで 私は このビデオではチャンネルという用語を使う

163
00:10:26,885 --> 00:10:31,966
このフィルターの３番目の次元を言うのに

164
00:10:31,966 --> 00:10:36,545
さぁ これで ボリューム畳み込みの実装方法が分かっただろう

165
00:10:36,545 --> 00:10:41,595
あなたは 畳み込みニューラルネットワーク層を実装する準備が整った

166
00:10:41,595 --> 00:10:44,000
次のビデオで それをどのように行うか見よう