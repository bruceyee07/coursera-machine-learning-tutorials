1
00:00:01,410 --> 00:00:05,830
Derin öğrenme ağları kurabilmek için temel evrişim işlemine yönelik

2
00:00:05,830 --> 00:00:10,675
yapmanız gereken bir modifikasyon dolgulama'dır.

3
00:00:10,675 --> 00:00:12,232
Nasıl kullanıldığına bakalım.

4
00:00:12,232 --> 00:00:15,190
Önceki videolarda eğer 6 x 6 bir görüntü alırsanız

5
00:00:15,190 --> 00:00:19,385
ve 3 x 3 bir filtre ile evrişim işlemine sokarsanız ,

6
00:00:19,385 --> 00:00:23,585
4 x 4 bir çıktı yani 4 x 4 matriks elde edeceğimizi görmüştük,

7
00:00:23,585 --> 00:00:28,080
bunun sebebi 3 x 3 bir filtrenin 6 x 6 bir matriks ile

8
00:00:28,080 --> 00:00:29,470
oluşturabileceği maksimum pozisyon

9
00:00:29,470 --> 00:00:31,780
sayısının 4 x 4 kadar olmasıdır.

10
00:00:31,780 --> 00:00:37,035
(3 x 3 filtrenin 6 x 6 görüntüde oturabileceği pozisyon sayısı)

11
00:00:37,035 --> 00:00:41,346
ve buna matematiksel açıdan bakarsak; 

12
00:00:41,346 --> 00:00:45,725
n x n bir görüntü ile f x f bir filtreyi evrişim işlemine

13
00:00:45,725 --> 00:00:48,850
sokarsanız bu durumda çıktı matriksinin

14
00:00:48,850 --> 00:00:58,237
boyutu n-f+1 olur.

15
00:00:58,237 --> 00:00:59,665
ve bu örnekte,

16
00:00:59,665 --> 00:01:03,455
6-3+1 , 4 e eşittir ki

17
00:01:03,455 --> 00:01:07,489
bu da neden 4 x 4 lük bir çıktıya sahip olduğunuzun sebebidir.

18
00:01:07,489 --> 00:01:10,400
Burada 2 olumsuzluğa değinmekte fayda var, birincisi;

19
00:01:10,400 --> 00:01:14,790
eğer her seferinde evrişim işlemini uygularsanız görüntünüz küçülür

20
00:01:14,790 --> 00:01:17,595
örneğin bu örnekte 6 x 6 dan 4 x 4 e küçüldü

21
00:01:17,595 --> 00:01:21,716
yani bu işlemi görüntünüz gerçek manada küçülmeden önce sadece birkaç kere yapabilirsiniz

22
00:01:21,716 --> 00:01:23,870
belki 1 x 1 e kadar küçülebilir.

23
00:01:23,870 --> 00:01:26,720
dolayısıyla, kenarları belirlediğiniz veya başka özellikleri

24
00:01:26,720 --> 00:01:29,902
belirlediğiniz her zaman görüntünüzün küçülmesini istemeyeceksiniz

25
00:01:29,902 --> 00:01:31,605
bu bir olumsuz yön,

26
00:01:31,605 --> 00:01:33,590
ikinci olumsuz yön ise,

27
00:01:33,590 --> 00:01:36,665
eğer kenardaki veya köşedeki piksele bakarsanız,

28
00:01:36,665 --> 00:01:40,755
buradaki küçük piksel sadece bir tane çıktıya etki edecektir

29
00:01:40,755 --> 00:01:43,490
çünkü bu sadece buradaki 3 x 3'lük filtrede kullanılır

30
00:01:43,490 --> 00:01:48,905
bunun yanısıra, eğer ortadaki piksele dikkat edersiniz, bu pikselin

31
00:01:48,905 --> 00:01:55,380
birçok bölge ile temas ettiğini görebilirsiniz.

32
00:01:55,380 --> 00:02:01,455
dolayısıyla, kenar veya köşedeki pikseller çıktıda çok daha az kullanırlar.

33
00:02:01,455 --> 00:02:06,390
Dolayısıyla, böyle bir durumda kenardaki veya kenara yakın bölgelerdeki piksellerin birçok bilgilesini kullanamıyoruz

34
00:02:06,390 --> 00:02:08,735
Bu iki problemi de çözmek için,

35
00:02:08,735 --> 00:02:12,829
(hem çıktı boyutunun küçülmesi hem de kenarlardaki piksellerin bilgilerinin az kullanılması)

36
00:02:12,829 --> 00:02:15,485
ve gerçek anlamda derin sinir ağları kurarken,

37
00:02:15,485 --> 00:02:19,685
görüntünüzün her adımda neden küçülmemesi gerektiğini göreceksiniz

38
00:02:19,685 --> 00:02:22,038
belki de 100 katmanlı bir derin ağda,

39
00:02:22,038 --> 00:02:23,710
bu durumda her katmanda boyut küçülür,

40
00:02:23,710 --> 00:02:27,993
ve daha sonra 100 katman sonunda çok küçük bir çıktıya sahip olmuş olursunuz

41
00:02:27,993 --> 00:02:29,085
bu birinci problemdi,

42
00:02:29,085 --> 00:02:38,120
diğer problem ise görüntünün kenarındaki birçok bilgiyi kullanmıyor olmanız.

43
00:02:38,120 --> 00:02:40,740
Dolayısıyla, bu iki problemi de çözebilmek için,

44
00:02:40,740 --> 00:02:44,774
yapabileceğiniz şey evrişim işlemini uygulamadan önce,

45
00:02:44,774 --> 00:02:46,959
görüntüyü dolgulamanızdır

46
00:02:46,959 --> 00:02:56,185
Dolayısıyla bu durumda, diyelim ki görüntünün tamamının kenarlarında

47
00:02:56,185 --> 00:03:00,670
olacak şekilde ek olarak bir sınır ile dolguladığımızı farzedelim,

48
00:03:00,670 --> 00:03:02,635
Eğer bunu yaparsanız,

49
00:03:02,635 --> 00:03:05,517
bu durumda 6 x 6 bir görüntüden ziyade,

50
00:03:05,517 --> 00:03:09,500
şu anda bunu 8 x 8 bir görüntüye dolguladınız ve bu 8 x 8 görüntüyü 3 x 3

51
00:03:09,500 --> 00:03:14,007
görüntü ile evriştirdiğinizde,şu çıktıyı elde edeceksiniz

52
00:03:14,007 --> 00:03:16,960
Daha önce 4 x 4 elde edecekken şu anda 6 x 6 bir görüntü elde ettiniz

53
00:03:16,960 --> 00:03:23,667
dolayısıyla, orjinal boyut olan 6 x 6 yı korumayı başarmış oldunuz.

54
00:03:23,667 --> 00:03:25,350
Dolayısıyla, dolguladığınızda,

55
00:03:25,350 --> 00:03:33,296
sıfırlar ile dolguluyorsunuz ve p ye dolgulama miktarı diyoruz

56
00:03:33,296 --> 00:03:34,575
Bu durumda,

57
00:03:34,575 --> 00:03:36,615
p bire eşittir

58
00:03:36,615 --> 00:03:41,180
çünkü, tüm çevreyi ekstra 1 pikselle dolguluyoruz

59
00:03:41,180 --> 00:03:47,940
bu durumda çıktı,

60
00:03:47,940 --> 00:03:54,360
(n+2p-f+1) x (n+2p-f+1) haline gelir.

61
00:03:54,360 --> 00:04:02,480
Dolayısıyla, bu 6 artı 2 eksi 3 artı 1 ile bunun aynısının evrişimi haline gelir

62
00:04:02,480 --> 00:04:06,475
Dolayısıyla, 6+2-3+1 bu 6 ya eşittir.

63
00:04:06,475 --> 00:04:12,880
Dolayısıyla bu, orjinal girdi boyutu olan 6 x 6 lık bir görüntünün boyutunu koruduğunuz anlamına gelir.

64
00:04:12,880 --> 00:04:16,030
Dolayısıyla, buradaki yeşil piksel aslında çıktıdaki

65
00:04:16,030 --> 00:04:23,330
her hücreyi etkiliyor yani efektif denilebilir,

66
00:04:23,330 --> 00:04:26,700
belki tüm bilgiyi atarak değil de

67
00:04:26,700 --> 00:04:32,715
kenardaki bilgiyi daha az sayarak veya hesaba katarak etkiye sahip

68
00:04:32,715 --> 00:04:34,255
ve burada derin sınırı

69
00:04:34,255 --> 00:04:38,240
sadece 1 pikselle dolgulamanın etkisini göstermiş olduk

70
00:04:38,240 --> 00:04:42,535
Eğer isterseniz, sınırları 2 pikselle de dolgulayabilirsiniz,ki bu durumda ,

71
00:04:42,535 --> 00:04:44,820
bir tane daha sınır çizersiniz,

72
00:04:44,820 --> 00:04:50,125
ve eğer isterseniz, daha fazla pikselle bile dolgulama yapabilirsiniz.

73
00:04:50,125 --> 00:04:52,812
Dolayısıyla, sanırım burada çizdiğim şey,

74
00:04:52,812 --> 00:04:55,438
bu dolgulama açısından p nin 2 ye eşit olduğu durumdur.

75
00:04:55,438 --> 00:05:00,665
ne kadar dolgulayacağınız hakkında ise,

76
00:05:00,665 --> 00:05:04,129
görünecek olan o ki, 2 yaygın seçenek bulunmakta,

77
00:05:04,129 --> 00:05:07,380
geçerli evrişim(valid convolutions) ve aynı evrişim(same convolutions)

78
00:05:07,380 --> 00:05:10,960
çok iyi isimlendirilmeler değiller fakat geçerli evrişimde,

79
00:05:10,960 --> 00:05:15,170
bu temel olarak dolgulama olmadığını gösterir.

80
00:05:15,170 --> 00:05:22,600
ve dolayısıyla, bu durumda, n x n görüntüyü f x f filtre ile

81
00:05:22,600 --> 00:05:25,345
evriştirdiğiniz zaman bu size

82
00:05:25,345 --> 00:05:30,298
(n-f+1) x (n-f+1) 'lık bir çıktı verir.

83
00:05:30,298 --> 00:05:35,060
Dolayısıyla, bu önceki videolarda konuştuğumuza benzer biçimde,

84
00:05:35,060 --> 00:05:37,250
n x n lik bir görüntümüz olduğu ve bunu 3 x 3 lük filtre ile

85
00:05:37,250 --> 00:05:43,095
evriştirdiğimiz ve 4 x 4 lük bir çıktı elde ettiğimiz örnekteki gibidir

86
00:05:43,095 --> 00:05:48,545
diğer yaygın dolgulama seçeneği ise

87
00:05:48,545 --> 00:05:52,660
aynı dolgulama(same convoution) diye adlandırılır ve bu dolguladığınız zaman

88
00:05:52,660 --> 00:05:58,580
çıktınızdaki boyutun girdi boyutu ile aynı olması anlamaına gelmektedir

89
00:05:58,580 --> 00:06:01,795
Dolayısıyla, eğer bu formüle bakarsanız,

90
00:06:01,795 --> 00:06:04,635
p pikselle dolguladığınızda,

91
00:06:04,635 --> 00:06:11,676
bu durumda n , n+2p ye dönüşür ve buradan devam eder

92
00:06:11,676 --> 00:06:15,740
-f +1 şeklinde.

93
00:06:15,740 --> 00:06:22,125
Dolayısıyla, n x n görüntümüz ve onun sınırlarını dolgulayan p pikselimiz mevcut,

94
00:06:22,125 --> 00:06:28,900
bu durumda bu boyutun çıktı büyüklüğü n+2p-f+1 haline gelir

95
00:06:28,900 --> 00:06:36,080
Eğer n + 2p -f + 1 in 1 e eşit olmasını istiyorsanız,

96
00:06:36,080 --> 00:06:38,795
dolayısıyla bu durumda çıktı büyüklüğü girdi büyüklüğüne eşit olur,

97
00:06:38,795 --> 00:06:42,905
eğer bu denklemi alıp çözerseniz,

98
00:06:42,905 --> 00:06:46,664
n iki tarafta birbirini götürür, eğer p için denklemi çözerseniz,

99
00:06:46,664 --> 00:06:53,463
burada p nin (f-1)/2 olduğunu görürsünüz

100
00:06:53,463 --> 00:06:56,181
Dolayısıyla f tek sayı olduğunda,

101
00:06:56,181 --> 00:06:58,990
dolgulama sayısı ile aynı şunun gibi seçerek,

102
00:06:58,990 --> 00:07:01,960
çıktı büyüklüğünün girdi büyüklüğü ile aynı olduğuna emin

103
00:07:01,960 --> 00:07:06,265
olabilirsiniz ve bu yüzden, örneğin,

104
00:07:06,265 --> 00:07:10,795
filtre önceki slayttaki gibi 3 x 3 olduğunda,

105
00:07:10,795 --> 00:07:15,990
girdi büyüklüğü ile çıktı büyüklüğünü aynı yapacak dolgulama miktarı (3-1)/2 dir

106
00:07:15,990 --> 00:07:21,790
ki bu da 1 e eşittir

107
00:07:21,790 --> 00:07:23,415
bir başka örnek daha verelim,

108
00:07:23,415 --> 00:07:28,250
eğer filtre büyüklüğünüz 5 x 5 ise,

109
00:07:28,250 --> 00:07:30,395
bu durumda eğer f 5 e eşitse,

110
00:07:30,395 --> 00:07:35,590
ve eğer bunu denklemde yerine koyarsanız,filtreniz 5 x 5 iken çıktı büyüklüğü ile girdi büyüklüğünün aynı olması için

111
00:07:35,590 --> 00:07:43,154
gereken dolgulama miktarının 2 olduğunu göreceksiniz

112
00:07:43,154 --> 00:07:46,440
ve geleneksel olarak bilgisayarlı görüde,

113
00:07:46,440 --> 00:07:50,435
f genellikle tek sayıdır

114
00:07:50,435 --> 00:07:59,070
Neredeyse her zaman tek sayıdır ve çift sayılı filtreleri

115
00:07:59,070 --> 00:08:02,631
çok nadir görürsünüz

116
00:08:02,631 --> 00:08:05,280
ve bence bunun için iki sebep vardır

117
00:08:05,280 --> 00:08:07,320
birincisi eğer f çift sayı olsaydı,

118
00:08:07,320 --> 00:08:10,155
bu durumda simetrik olmayan olgulama kullanıyor olacaktınız,

119
00:08:10,155 --> 00:08:15,380
dolayısıyla sadece f tek sayı olduğunda buna benzer şekilde aynı evrişim işlemi doğal dolgulama olanağı sunuyor,

120
00:08:15,380 --> 00:08:17,180
-solda veya sağda daha fazla dolgulama yapmak yerine

121
00:08:17,180 --> 00:08:20,290
tüm çevresinde aynı dolgulamaya sahip olmak

122
00:08:20,290 --> 00:08:22,104
ve aynı zamanda simetrik olması için-

123
00:08:22,104 --> 00:08:27,440
ve ikinci sebep ise, tek sayılı boyut filtreniz varsa

124
00:08:27,440 --> 00:08:29,770
örneğin 3 x 3 ya da 5 x 5,

125
00:08:29,770 --> 00:08:32,860
bu durumda merkezi konuma sahip olur ve 

126
00:08:32,860 --> 00:08:36,095
bilgisayarlı görüde bazen ayırıcıya sahip olmak iyidir

127
00:08:36,095 --> 00:08:37,450
yani şöyle bir piksele,

128
00:08:37,450 --> 00:08:43,527
merkezi pikseli çağırabilirsiniz, ve bunu filtrenin konumu hakkında konuşmak olarak düşünebiliriz

129
00:08:43,527 --> 00:08:48,080
evet, belki de bunlar tek sayı f değeri kullanmamamıza yönelik epey önemli sebepler sunuyordur

130
00:08:48,080 --> 00:08:50,310
fakat eğer bilgisayarlı görü literatürüne bakarsanız,

131
00:08:50,310 --> 00:08:53,482
3 x 3 filtrelerin oldukça yaygın olduğunu göreceksiniz

132
00:08:53,482 --> 00:08:56,155
5 x 5 ya da 7 x 7 bile görebilrsiniz

133
00:08:56,155 --> 00:08:58,985
ve aslında daha sonra

134
00:08:58,985 --> 00:09:02,095
1 x 1 filtreler hakkında da konuşacağız ki bunun neden mantıklı olduğunu göreceksiniz

135
00:09:02,095 --> 00:09:04,130
fakat sadece geleneksel olarak,

136
00:09:04,130 --> 00:09:08,335
size tek sayılı filtreler kullanmanız gerektiğini söyleyebilirim.

137
00:09:08,335 --> 00:09:10,385
ve bence eğer f için çift numara seçseniz bile

138
00:09:10,385 --> 00:09:14,180
gayet yeterli performans elde edebilirsiniz

139
00:09:14,180 --> 00:09:18,538
fakat eğer yaygın bilgisayarlı görü geleneğine bağlı kalırsanız,

140
00:09:18,538 --> 00:09:25,865
ben çoğunlukla tek sayı kullanmayı tercih ediyorum

141
00:09:25,865 --> 00:09:28,890
evirişim işleminiz için dolgulama miktarını belirlemek için,

142
00:09:28,890 --> 00:09:31,200
ya p için bir değer belirleyebilirsiniz ya da bunun

143
00:09:31,200 --> 00:09:34,835
geçerli evrişim olduğunu söyleyebilirsiniz,

144
00:09:34,835 --> 00:09:38,595
ki bu da p eşittir 0 dır ya da aynı evrişim işlemi olduğunu söyleyebilirsiniz

145
00:09:38,595 --> 00:09:40,850
ki bu da girdi boyutu ile çıktı boyutunuzun eşit olmasını sağlayacak

146
00:09:40,850 --> 00:09:43,780
kadar dolgulama yapılması anlamına gelir

147
00:09:43,780 --> 00:09:45,181
Böylelikle, dolgulama için bu kadar yeterli.

148
00:09:45,181 --> 00:09:49,220
Bir sonraki videoda, kaydırma adımlı evrişimi nasıl uygulayacağınızı göstereceğim.