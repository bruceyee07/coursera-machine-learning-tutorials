1
00:00:00,000 --> 00:00:02,335
畳み込み層以外に

2
00:00:02,335 --> 00:00:07,130
ConvNet は しばしば プーリング層を使い 表現のサイズを減らす

3
00:00:07,130 --> 00:00:08,510
計算を速くするために

4
00:00:08,510 --> 00:00:12,020
また 検出される特徴量を 少しだけ堅牢にするために

5
00:00:12,020 --> 00:00:16,390
じゃ見てみよう プーリングの例を見よう

6
00:00:16,390 --> 00:00:20,205
そして なぜ これをしたいのかについて 話そう

7
00:00:20,205 --> 00:00:24,300
4 x 4 の入力があったとする

8
00:00:24,300 --> 00:00:28,675
そして プーリングの一種 最大プーリングを適用したいとする

9
00:00:28,675 --> 00:00:30,320
この 最大プーリングの特定の実装からは

10
00:00:30,320 --> 00:00:34,375
2 x 2 の出力が得られる

11
00:00:34,375 --> 00:00:37,270
それを行う方法は 全く単純だ

12
00:00:37,270 --> 00:00:40,310
4 x 4 入力を

13
00:00:40,310 --> 00:00:44,280
異なる領域に分ける このように４つの領域に色を付けよう

14
00:00:44,280 --> 00:00:46,130
そして 出力では

15
00:00:46,130 --> 00:00:47,480
それは 2 x 2 だ

16
00:00:47,480 --> 00:00:53,240
出力のそれぞれは 対応する色付けしたの領域からの最大値だ

17
00:00:53,240 --> 00:00:54,680
例えば 左上なら

18
00:00:54,680 --> 00:00:57,900
この４つの数の最大値 ９ だ

19
00:00:57,900 --> 00:01:01,760
右上では 青い数の最大値は ２

20
00:01:01,760 --> 00:01:04,273
左下では 一番大きな数は ６

21
00:01:04,273 --> 00:01:08,050
右下では 一番大きな数は ３

22
00:01:08,050 --> 00:01:10,737
右にある各数を計算するのに

23
00:01:10,737 --> 00:01:13,400
2 x 2 領域の最大値を取った

24
00:01:13,400 --> 00:01:18,740
そう これは サイズ２のフィルターを適用したようなものだ

25
00:01:18,740 --> 00:01:25,290
なぜなら 2 x 2 領域を取って ２ストライドしているから

26
00:01:25,290 --> 00:01:30,825
これらは 実際には 最大プーリングの

27
00:01:30,825 --> 00:01:36,540
ハイパーパラメータだ
このフィルターサイズから初めたので

28
00:01:36,540 --> 00:01:39,650
それは 2 x 2 領域で ９を与える

29
00:01:39,650 --> 00:01:45,580
それから ２ステップ動かし この領域に来て ２が得られる

30
00:01:45,580 --> 00:01:46,880
それから 次の行では

31
00:01:46,880 --> 00:01:49,580
２ステップ下に行き ６を得る

32
00:01:49,580 --> 00:01:52,570
それから ２ステップ右に行き ３を得る

33
00:01:52,570 --> 00:01:54,620
四角形が 2 x 2 なので

34
00:01:54,620 --> 00:01:58,070
f = 2
そして ２つストライドするので

35
00:01:58,070 --> 00:02:00,210
s = 2

36
00:02:00,210 --> 00:02:09,526
ここに 最大プーリングが行っていることの背後にある考え方を述べておこう

37
00:02:09,526 --> 00:02:15,050
もし この 4 x 4 領域を 何かの特徴量のセットと捉えるなら

38
00:02:15,050 --> 00:02:19,204
ニューラルネットワークの何かの層における活性化だ

39
00:02:19,204 --> 00:02:20,490
それから 大きな数

40
00:02:20,490 --> 00:02:23,670
それは 特定の特徴を検出するであろうことを意味している

41
00:02:23,670 --> 00:02:26,495
左上1/4は この特定の特徴を持ち

42
00:02:26,495 --> 00:02:32,470
それは 垂直エッジかもしれないし 猫を検出するための目やほお髭かもしれない

43
00:02:32,470 --> 00:02:34,820
明らかに その特徴は 左上1/4に存在する

44
00:02:34,820 --> 00:02:40,055
一方 この特徴は 猫の目を検出しないかもしれない

45
00:02:40,055 --> 00:02:43,975
しかし この特徴は 右上1/4には存在しない

46
00:02:43,975 --> 00:02:47,764
つまり 最大値処理が行っているのは 1/4領域内のどこかにある特徴を検出することで

47
00:02:47,764 --> 00:02:53,504
それは 最大プーリングの出力の中に保持される

48
00:02:53,504 --> 00:02:56,265
そう 最大値処理がしていることは 言うならば

49
00:02:56,265 --> 00:02:59,780
特徴が このフィルター内に見つかった場合

50
00:02:59,780 --> 00:03:01,348
高い数を取っておくということだ

51
00:03:01,348 --> 00:03:03,510
しかし もし その特徴が見つからなければ

52
00:03:03,510 --> 00:03:07,690
例えば その特徴が右上の1/4に存在しないかもしれない

53
00:03:07,690 --> 00:03:11,090
その場合は それらの数の最大値は とても小さい

54
00:03:11,090 --> 00:03:15,252
多分 これが 最大プーリングの背後にある洞察だ

55
00:03:15,252 --> 00:03:16,535
しかし 認めなくてはならないことがある

56
00:03:16,535 --> 00:03:19,550
人々が 最大プーリングを使う主な理由は

57
00:03:19,550 --> 00:03:23,627
多くの試行で上手くいくことが分かったからだ

58
00:03:23,627 --> 00:03:25,646
私が述べた洞察は

59
00:03:25,646 --> 00:03:27,375
しばしば 言及されはするが

60
00:03:27,375 --> 00:03:33,020
真の隠れた理由を完全に分かっている人を 私は知らない

61
00:03:33,020 --> 00:03:34,655
私は そんな人を知らない

62
00:03:34,655 --> 00:03:39,930
ConvNet で 最大プーリングが上手くいくことの真の隠れた理由を知る人を

63
00:03:39,930 --> 00:03:43,490
最大プーリングの興味深い特徴の1つが

64
00:03:43,490 --> 00:03:47,770
ハイパーパラメータは持つが 学習するパラメータを持たない というのがある

65
00:03:47,770 --> 00:03:50,293
実際 勾配降下法で学習させるものは 何もない

66
00:03:50,293 --> 00:03:51,780
一度 f と s を決めたら

67
00:03:51,780 --> 00:03:56,876
それは 固定の計算機となり 勾配降下法は何も変えない

68
00:03:56,876 --> 00:04:00,810
いつくか別のハイパーパラメータを持つ例を試してみよう

69
00:04:00,810 --> 00:04:04,675
ここに 5 x 5 の入力がある

70
00:04:04,675 --> 00:04:10,290
そして 3 x 3 のフィルターサイズを持つ 最大プーリングを適用する

71
00:04:10,290 --> 00:04:13,815
f = 3 で ストライドは 1 にする

72
00:04:13,815 --> 00:04:18,190
よって この場合は 出力サイズは 3 x 3 になる

73
00:04:18,190 --> 00:04:20,570
そして 前のビデオで開発した

74
00:04:20,570 --> 00:04:23,945
畳み込み層の出力サイズを決める公式は

75
00:04:23,945 --> 00:04:27,345
それらの公式は 最大プーリングでも機能する

76
00:04:27,345 --> 00:04:34,345
(n + 2p - f) / 2 + 1

77
00:04:34,345 --> 00:04:38,458
この公式は 最大プーリングの出力サイズを決めるのにも使える

78
00:04:38,458 --> 00:04:41,820
でも この例では 3 x 3 出力の個々の要素を計算してみよう

79
00:04:41,820 --> 00:04:45,080
左上の要素は

80
00:04:45,080 --> 00:04:46,670
この領域を見ることになり

81
00:04:46,670 --> 00:04:48,735
お分かりの通り これは 3 x 3 領域だ

82
00:04:48,735 --> 00:04:51,695
なぜなら フィルターサイズが３だから
それで 最大値はこう

83
00:04:51,695 --> 00:04:53,715
それは ９

84
00:04:53,715 --> 00:04:57,920
それから １つだけずらす なぜなら １つだけストライドできるから

85
00:04:57,920 --> 00:05:00,960
それで 青い箱の中の最大値は ９

86
00:05:00,960 --> 00:05:03,695
また ずらして

87
00:05:03,695 --> 00:05:06,235
青い箱の中の最大値は ５

88
00:05:06,235 --> 00:05:09,710
それから 次の行に行く １ストライドで

89
00:05:09,710 --> 00:05:12,465
つまり １ステップだけ下に行く

90
00:05:12,465 --> 00:05:16,520
この領域の最大値は ９ この領域の最大値は ９

91
00:05:16,520 --> 00:05:19,970
この領域の最大値は

92
00:05:19,970 --> 00:05:22,516
今度は ２つの５があり ２つの５の最大値がある

93
00:05:22,516 --> 00:05:26,130
最後は ここの最大値は ８

94
00:05:26,130 --> 00:05:28,965
ここの最大値は ６

95
00:05:28,965 --> 00:05:31,350
ここの最大値は 角にある９

96
00:05:31,350 --> 00:05:35,810
いい？ これが ハイパーパラメータ f = 3, s = 1 のセットが

97
00:05:35,810 --> 00:05:40,007
ここに表示された出力を与えた

98
00:05:40,007 --> 00:05:44,975
ここまでは ２D入力に対しての 最大プーリングを見てきた

99
00:05:44,975 --> 00:05:47,370
３D入力の場合は

100
00:05:47,370 --> 00:05:53,245
出力は 同じ次元数を持つ

101
00:05:53,245 --> 00:05:56,765
例えば 5 x 5 x 2 なら

102
00:05:56,765 --> 00:06:02,360
出力は 3 x 3 x 2 になり

103
00:06:02,360 --> 00:06:05,045
最大プーリングを計算する方法は 

104
00:06:05,045 --> 00:06:08,368
各チャンネル毎に個別に これまでに説明した計算を行うことだ

105
00:06:08,368 --> 00:06:11,960
よって ここに示した 上にある最初のチャンネルは 前と同じで

106
00:06:11,960 --> 00:06:13,790
２番目のチャンネルに対しては

107
00:06:13,790 --> 00:06:15,790
この 下に描いたものだが

108
00:06:15,790 --> 00:06:19,250
この面の値に対して 同じ計算を行い

109
00:06:19,250 --> 00:06:24,365
この２番目の面を得る

110
00:06:24,365 --> 00:06:29,300
より一般的には これが 5 x 5 x チャンネル数 ならば

111
00:06:29,300 --> 00:06:34,395
出力は 3 x 3 x 同じチャンネル数 になる

112
00:06:34,395 --> 00:06:44,541
最大プーリングの計算は これら nC 個のチャンネル個々に対して 独立して行われる

113
00:06:44,541 --> 00:06:46,520
これが 最大プーリングだ

114
00:06:46,520 --> 00:06:49,815
これは そんなに多くは使われない種類のプーリングだ

115
00:06:49,815 --> 00:06:52,870
でも 平均プーリングに簡単に触れておこう

116
00:06:52,870 --> 00:06:56,395
予想しているだろうけど

117
00:06:56,395 --> 00:06:59,080
各フィルターで最大値を取る代わりに

118
00:06:59,080 --> 00:07:02,040
平均値を取るんだ

119
00:07:02,040 --> 00:07:03,250
この例において

120
00:07:03,250 --> 00:07:07,540
紫の平均は 3.75

121
00:07:07,540 --> 00:07:09,940
それから 1.25

122
00:07:09,940 --> 00:07:12,930
そして 4 と 2

123
00:07:12,930 --> 00:07:17,020
これが ハイパーパラメータ f = 2, s = 2 の平均プーリングだ

124
00:07:17,020 --> 00:07:21,795
他のハイパーパラメータを選ぶこともできる

125
00:07:21,795 --> 00:07:24,640
最近は 最大プーリングが大変多く使われてる

126
00:07:24,640 --> 00:07:28,340
平均プーリングよりも頻繁に 1つの例外はあるが

127
00:07:28,340 --> 00:07:32,125
それは 時々 非常に深いニューラルネットワークで

128
00:07:32,125 --> 00:07:36,670
表現を崩すために 平均プーリングを使うかもしれない

129
00:07:36,670 --> 00:07:40,290
つまり 7 x 7 x 1000

130
00:07:40,290 --> 00:07:42,755
この全ての範囲に渡って 平均を取ると

131
00:07:42,755 --> 00:07:45,625
1 x 1 x 1000 となる

132
00:07:45,625 --> 00:07:47,475
この例は 後でみる

133
00:07:47,475 --> 00:07:54,085
ただし 最大プーリングは 平均プーリングよりも 大変多く使われている

134
00:07:54,085 --> 00:07:56,305
まとめると

135
00:07:56,305 --> 00:08:00,100
プーリングのハイパーパラメータは 

136
00:08:00,100 --> 00:08:02,840
フィルターサイズ f と ストライド s

137
00:08:02,840 --> 00:08:07,360
良く使われるパラメータ値は f = 2, s = 2

138
00:08:07,360 --> 00:08:11,045
これは 本当に良く使われていて

139
00:08:11,045 --> 00:08:15,925
高さと幅を 因数となる上の２で縮める効果がある

140
00:08:15,925 --> 00:08:21,150
良く使われるハイパーパラメータは f = 2, s = 2 で

141
00:08:21,150 --> 00:08:23,530
表現の高さと幅を

142
00:08:23,530 --> 00:08:28,440
因数の２で縮める効果がある

143
00:08:28,440 --> 00:08:32,094
f = 3, s = 2 というのも見たことが有る

144
00:08:32,094 --> 00:08:37,150
別のハイパーパラメータは 2進ビットだ つまり

145
00:08:37,150 --> 00:08:40,120
最大プーリングか平均プーリングか だ

146
00:08:40,120 --> 00:08:43,380
もし望むなら 追加のハイパーパラメータも追加できる

147
00:08:43,380 --> 00:08:48,140
パディングだ ただし これは滅多に使われない

148
00:08:48,140 --> 00:08:50,080
最大プーリングをする場合 通常

149
00:08:50,080 --> 00:08:51,685
パディングは使わない

150
00:08:51,685 --> 00:08:55,025
しかし 次週見るように 1つの例外がある

151
00:08:55,025 --> 00:08:57,160
しかし 大抵の最大プーリングでは

152
00:08:57,160 --> 00:08:59,710
通常 いかなるパディングも行わない

153
00:08:59,710 --> 00:09:05,345
よって 最も一般的な p の値は これまでのところ p = 0

154
00:09:05,345 --> 00:09:13,215
最大プーリングの入力が 入力ボリュームのサイズが

155
00:09:13,215 --> 00:09:14,945
nH x nW x nC だと

156
00:09:14,945 --> 00:09:21,265
出力ボリュームサイズは こうなる

157
00:09:21,265 --> 00:09:29,465
パディング無しと仮定すると (nW - f) / s + 1

158
00:09:29,465 --> 00:09:32,015
x nC

159
00:09:32,015 --> 00:09:35,295
入力チャンネル数と出力チャンネル数は等しい

160
00:09:35,295 --> 00:09:40,555
なぜなら プーリングは チャンネル毎に独立して適用されるから

161
00:09:40,555 --> 00:09:47,205
プーリングの特筆すべき点は 学習するパラメータが無いということだ

162
00:09:47,205 --> 00:09:50,470
よって 逆伝播を実装する時に

163
00:09:50,470 --> 00:09:55,645
最大プーリングには 逆伝播を適用する何のパラメータも無いことに気付くだろう

164
00:09:55,645 --> 00:09:58,400
代わりに 一度設定しておくハイパーパラメータだけがある

165
00:09:58,400 --> 00:10:01,485
手でそれらを設定したり 公差検証を使い設定したりするだろう

166
00:10:01,485 --> 00:10:03,710
それが終われば 完了だ

167
00:10:03,710 --> 00:10:07,140
これは ニューラルネットワークが 層の1つで 計算するただの固定の関数だ

168
00:10:07,140 --> 00:10:09,829
そこには 何も学習するものがない

169
00:10:09,829 --> 00:10:11,999
これは ただの固定関数だ

170
00:10:11,999 --> 00:10:13,350
そう これがプーリングだ

171
00:10:13,350 --> 00:10:15,460
どのように畳み込み層とプーリング層を作るか 分かったね

172
00:10:15,460 --> 00:10:18,095
見ての通り、ここある。

173
00:10:18,095 --> 00:10:20,830
ConvNet のもっと複雑な例を見よう

174
00:10:20,830 --> 00:10:25,000
それは 全結合層の導入に繋がるものだ