1
00:00:01,000 --> 00:00:05,510
你们已经了解了卷积在二维图像上是如何工作的

2
00:00:05,510 --> 00:00:08,505
现在，让我们看看如何实现这个卷积算法

3
00:00:08,505 --> 00:00:10,190
但不是对二维图像

4
00:00:10,190 --> 00:00:13,265
而是对三维图像

5
00:00:13,265 --> 00:00:15,610
让我们举个例子

6
00:00:15,610 --> 00:00:17,930
假设你想在这图片中检测特征

7
00:00:17,930 --> 00:00:20,920
不仅仅是是对灰度图像

8
00:00:20,920 --> 00:00:22,550
而是对RGB(红绿蓝)图像

9
00:00:22,550 --> 00:00:27,035
因此，一个RGB（红绿蓝）图像的尺寸不会是六乘六

10
00:00:27,035 --> 00:00:29,330
而会是六乘六乘三

11
00:00:29,330 --> 00:00:32,980
这里的三对应颜色的三通道

12
00:00:32,980 --> 00:00:37,575
因此，你可以将此看作是三张六乘六图像的叠加

13
00:00:37,575 --> 00:00:41,925
为了检测这个图像中的图像边缘或一些图片中的其他特征

14
00:00:41,925 --> 00:00:43,490
你可以跳过这里

15
00:00:43,490 --> 00:00:47,320
不是使用三乘三大小的过滤器

16
00:00:47,320 --> 00:00:49,120
像我们之前那样

17
00:00:49,120 --> 00:00:51,907
只是现在用的是三维过滤器

18
00:00:51,907 --> 00:00:54,865
也就是说过滤器大小是三乘三乘三

19
00:00:54,865 --> 00:01:01,960
因此，过滤器本身将有对应的三层分别是

20
00:01:01,960 --> 00:01:04,897
红、绿、蓝三个通道

21
00:01:04,897 --> 00:01:07,180
给这些命名

22
00:01:07,180 --> 00:01:08,980
这里第一个‘6’

23
00:01:08,980 --> 00:01:12,290
是图像的高度

24
00:01:12,290 --> 00:01:19,360
这是图像的宽度，这里的‘3’是通道数目

25
00:01:19,360 --> 00:01:24,075
并且你的过滤器有着类似的高度

26
00:01:24,075 --> 00:01:27,995
宽度和通道数目

27
00:01:27,995 --> 00:01:31,170
并且图像中的通道数目

28
00:01:31,170 --> 00:01:35,143
必须和过滤器的通道数目相符

29
00:01:35,143 --> 00:01:38,480
因此这两个数必须相等

30
00:01:38,480 --> 00:01:42,365
我们将在下一个幻灯片中看到，卷积运算实际上是如何工作的

31
00:01:42,365 --> 00:01:46,740
然而这里的输出将会是一个四乘四的图像

32
00:01:46,740 --> 00:01:49,600
并且要注意这里是四乘四乘一

33
00:01:49,600 --> 00:01:53,160
在最后不再有‘3’的出现

34
00:01:53,160 --> 00:02:01,313
让我们研究这当中工作的细节，但先用一张清晰的图像来表示

35
00:02:01,313 --> 00:02:05,365
这里是一个六乘六乘三的图像

36
00:02:05,365 --> 00:02:10,030
这里是一个三乘三乘三的过滤器

37
00:02:10,030 --> 00:02:11,830
并且这个最后的数字

38
00:02:11,830 --> 00:02:17,395
通道数目与三维图像和过滤器的层数相符

39
00:02:17,395 --> 00:02:22,195
因此，为了简化三乘三乘三的过滤器

40
00:02:22,195 --> 00:02:26,674
而不是理解成矩阵的叠加

41
00:02:26,674 --> 00:02:32,325
有时我会画成像这样的三维立方体

42
00:02:32,325 --> 00:02:37,775
为了计算这个卷积运算的结果

43
00:02:37,775 --> 00:02:42,440
你所需要做的是采用三乘三乘三的过滤器，然后首先

44
00:02:42,440 --> 00:02:45,440
将它放在最左上角的位置

45
00:02:45,440 --> 00:02:51,026
因此，你会注意到这个三乘三乘三的过滤器有27个数字

46
00:02:51,026 --> 00:02:53,988
或者27个参数，这是3的立方体

47
00:02:53,988 --> 00:02:56,180
接下来，你要做的是用这个立方体中的每一个数字

48
00:02:56,180 --> 00:03:05,695
以及分别与图像的红，绿，蓝三通道

49
00:03:05,695 --> 00:03:07,425
的对应数字相乘

50
00:03:07,425 --> 00:03:09,620
于是从红色通道提取前九个数字

51
00:03:09,620 --> 00:03:12,080
然后提取下面的绿色通道的三个数字

52
00:03:12,080 --> 00:03:13,970
接着提取下面蓝色通道的三个数字

53
00:03:13,970 --> 00:03:17,880
然后与相对应的左边这个黄色方块里

54
00:03:17,880 --> 00:03:22,310
的27个数字相乘。

55
00:03:22,310 --> 00:03:28,615
把所有这些数字相加就能得到你输出中的第一个数字，

56
00:03:28,615 --> 00:03:34,700
为了得到下一个数字你需要把这个方块挪到下一个位置，

57
00:03:34,700 --> 00:03:37,190
然后再一次做27次相乘，

58
00:03:37,190 --> 00:03:40,375
把这27个数字相加，

59
00:03:40,375 --> 00:03:42,545
就得到下一个输出数字了，

60
00:03:42,545 --> 00:03:44,465
完了再做下一个位置的

61
00:03:44,465 --> 00:03:45,647
下一个数字，

62
00:03:45,647 --> 00:03:49,520
就能得到第三个输出值，以此类推。

63
00:03:49,520 --> 00:03:54,080
然后往下一行的下一个数，

64
00:03:54,080 --> 00:03:55,930
然后一个接一个，

65
00:03:55,930 --> 00:03:58,760
你懂了吧，

66
00:03:58,760 --> 00:04:02,080
直到最后，

67
00:04:02,080 --> 00:04:09,090
在这个位置你会得到最后的输出值。

68
00:04:09,090 --> 00:04:10,741
那么你用了这些能做什么呢？

69
00:04:10,741 --> 00:04:12,775
来看一个例子，

70
00:04:12,775 --> 00:04:15,170
这个过滤器是3*3*3的，

71
00:04:15,170 --> 00:04:20,455
所以如果你想要检测图片里红色通道的边缘，

72
00:04:20,455 --> 00:04:24,990
那你可以在第一层过滤器上，

73
00:04:24,990 --> 00:04:27,840
最左一列1，最右一列-1，与之前一样，

74
00:04:27,840 --> 00:04:31,385
然后在绿色通道上全部用0，

75
00:04:31,385 --> 00:04:35,120
在蓝色通道上也全部用0。

76
00:04:35,120 --> 00:04:42,410
如果你用的是这三层相叠加来获得你的3*3*3过滤器，

77
00:04:42,410 --> 00:04:46,040
那么这个过滤器就可以

78
00:04:46,040 --> 00:04:49,720
仅仅检测红色通道的垂直边缘。

79
00:04:49,720 --> 00:04:54,950
或者，如果你并不在意一个垂直边缘属于哪个颜色，

80
00:04:54,950 --> 00:04:58,871
那么你可能会想要一个这样的过滤器，

81
00:04:58,871 --> 00:05:01,520
左边都是一列1，

82
00:05:01,520 --> 00:05:02,800
右边都是一列-1，

83
00:05:02,800 --> 00:05:04,714
同时在三个通道上。

84
00:05:04,714 --> 00:05:08,791
所以，通过这第二种不同的系列，设定参数

85
00:05:08,791 --> 00:05:10,980
你会得到一个边缘检测器

86
00:05:10,980 --> 00:05:12,710
3*3*3的能边缘检测器

87
00:05:12,710 --> 00:05:15,935
能检测任何颜色的边缘

88
00:05:15,935 --> 00:05:19,460
通过使用不同的参数你可以

89
00:05:19,460 --> 00:05:24,280
从这个3*3*3的过滤器中得到不同特征的检测器。

90
00:05:24,280 --> 00:05:26,320
通常在计算机视觉领域

91
00:05:26,320 --> 00:05:31,790
当你的输入有一个固定的高度和宽度，

92
00:05:31,790 --> 00:05:33,440
和一个固定数量的通道，

93
00:05:33,440 --> 00:05:36,200
那么你的过滤器可能会有不同的高度，

94
00:05:36,200 --> 00:05:39,542
和不同的宽度，但有相同数量的通道。

95
00:05:39,542 --> 00:05:44,780
理论上来说，我们可以有一个只负责红色通道的过滤器，

96
00:05:44,780 --> 00:05:50,776
或者一个只负责绿色通道或蓝色通道的过滤器。

97
00:05:50,776 --> 00:05:54,565
那么再一次地，你会注意到做一个体积的卷积时，

98
00:05:54,565 --> 00:06:00,793
用一个3*3*3来卷积6*6*3,

99
00:06:00,793 --> 00:06:07,434
会得到一个4*4的结果，也就是一个二维的输出。

100
00:06:07,434 --> 00:06:10,629
那么你现在知道了如何在体积上做卷积，

101
00:06:10,629 --> 00:06:17,125
最后还有一个对于建立卷积神经网络
非常重要的概念，

102
00:06:17,125 --> 00:06:20,550
那就是，如果我们不仅仅想要检测垂直边缘呢？

103
00:06:20,550 --> 00:06:23,550
如果我们想同时检测垂直边缘和水平边缘，

104
00:06:23,550 --> 00:06:27,080
又或者是45度边缘或者70度边缘，

105
00:06:27,080 --> 00:06:32,189
换句话来说，如果你想要同时应用多个过滤器呢？

106
00:06:32,189 --> 00:06:35,640
那么，这是我们之前那张幻灯片用的图片，

107
00:06:35,640 --> 00:06:38,380
我们用3*3*3来卷积6*6*3,

108
00:06:38,380 --> 00:06:39,717
得到了4*4

109
00:06:39,717 --> 00:06:42,420
这可能是个垂直边缘检测器，

110
00:06:42,420 --> 00:06:46,023
或者这是用来检测其他某个特征。

111
00:06:46,023 --> 00:06:52,950
现在，这里有一个可能是第二个用橙色表示的过滤器，

112
00:06:52,950 --> 00:07:00,563
这可能是个水平边缘检测器。

113
00:07:00,563 --> 00:07:05,657
那么之前通过第一个过滤器来卷积我们已经得到了的第一个4*4输出，

114
00:07:05,657 --> 00:07:13,565
然后用第二个过滤器来卷积就能得到一个不同的4*4输出。

115
00:07:13,565 --> 00:07:16,800
我们可以用这两个4*4输出，

116
00:07:16,800 --> 00:07:20,770
把第一个放在前面，

117
00:07:20,770 --> 00:07:25,069
然后用这第二个过滤器，让我画一下，

118
00:07:25,069 --> 00:07:27,870
按照以下顺序放在后面，

119
00:07:27,870 --> 00:07:29,465
那么将这两个一起叠加，

120
00:07:29,465 --> 00:07:35,970
你会得到一个4*4*2输出体积对吧，

121
00:07:35,970 --> 00:07:39,900
你可以把这个体积理解为，就像我画的这个盒子

122
00:07:39,900 --> 00:07:41,710
可能看着像这样。

123
00:07:41,710 --> 00:07:45,620
那么这就是一个4*4*2的输出立方体，

124
00:07:45,620 --> 00:07:49,740
也就是通过用两个不同的3*3*3过滤器来

125
00:07:49,740 --> 00:07:54,885
卷积或者说应用在6*6*3图片上，

126
00:07:54,885 --> 00:07:57,870
得到了两个4*4输出，然后相叠加

127
00:07:57,870 --> 00:08:02,093
来得到一个4*4*2立方体。

128
00:08:02,093 --> 00:08:07,830
这里的2代表我们用了两个不同的过滤器。

129
00:08:07,830 --> 00:08:14,320
那么让我们来总结一下这里的维度，

130
00:08:14,320 --> 00:08:19,570
如果你有n*n*通道数量的输入图片，

131
00:08:19,570 --> 00:08:22,975
在这个例子中，6*6*3，

132
00:08:22,975 --> 00:08:26,960
这里n的下标c代表通道的数量，

133
00:08:26,960 --> 00:08:31,675
你用它来卷积一个f*f*n下标c

134
00:08:31,675 --> 00:08:34,645
同样的通道数量，

135
00:08:34,645 --> 00:08:38,360
所以结果是3*3*3，

136
00:08:38,360 --> 00:08:45,180
通常来说这两个地方的值必须是相同的。

137
00:08:45,180 --> 00:08:52,150
然后，你会得到一个 n-f+1 乘以

138
00:08:52,150 --> 00:08:59,970
n-f+1乘以这边的nc'，

139
00:08:59,970 --> 00:09:02,314
或者说下一层的nc，

140
00:09:02,314 --> 00:09:06,850
也就是你所用的过滤器的数量。

141
00:09:06,850 --> 00:09:11,895
那么这个例子中就是4*4*2。

142
00:09:11,895 --> 00:09:16,335
我在写这些的时候都是假设你用的都是1，没有别的值。

143
00:09:16,335 --> 00:09:19,270
但假如你使用不同的值，

144
00:09:19,270 --> 00:09:22,855
那么这边的n-f+1将会被影响，

145
00:09:22,855 --> 00:09:26,245
就如我们之前的视频中见到的。

146
00:09:26,245 --> 00:09:29,280
所以这个在立方体上做卷积的概念

147
00:09:29,280 --> 00:09:31,519
实际上非常强大。

148
00:09:31,519 --> 00:09:34,350
其中一小部分的作用在于你现在可以

149
00:09:34,350 --> 00:09:38,080
直接处理拥有3个通道的RGB图片。

150
00:09:38,080 --> 00:09:40,485
但是更重要的是，

151
00:09:40,485 --> 00:09:43,420
你现在可以检测两个特征，比如垂直、水平边缘，

152
00:09:43,420 --> 00:09:46,534
或者10个，128个

153
00:09:46,534 --> 00:09:49,365
甚至几百个不同的特征。

154
00:09:49,365 --> 00:09:51,390
那么这个输出会是通道的数目

155
00:09:51,390 --> 00:09:58,405
等于过滤器的数目

156
00:09:58,405 --> 00:10:00,995
这里有个需要注意的表达法，

157
00:10:00,995 --> 00:10:07,125
我一直在用你的通道数量作为最后一个维度，

158
00:10:07,125 --> 00:10:14,620
而在文献里人们经常称之为3D立方体的深度，

159
00:10:14,620 --> 00:10:17,255
这两种表达法，无论是通道或者是深度，都常出现在文献中。

160
00:10:17,255 --> 00:10:19,375
但有人会觉得‘深度’更难以理解，

161
00:10:19,375 --> 00:10:22,855
因为你通常也会说到神经网络的深度，

162
00:10:22,855 --> 00:10:26,885
所以我将会在这些视频中用‘通道’来表示

163
00:10:26,885 --> 00:10:31,966
这第三个维度的大小。

164
00:10:31,966 --> 00:10:36,545
那么你现在知道了如何在立方体上做卷积，

165
00:10:36,545 --> 00:10:41,595
就该准备好应用卷积神经网络上其中一层了。

166
00:10:41,595 --> 00:10:44,000
在下一个视频中我们来看看那是如何做到的。