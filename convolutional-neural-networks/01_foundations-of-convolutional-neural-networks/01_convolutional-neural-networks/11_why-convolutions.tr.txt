Bu haftanın son videosu için, hadi biraz konvolüsyonların sinir ağlarına eklediğinde ‑ niçin daha kullanışlı olduğundan bahsedelim. Ve son olarak, kısaca bir etiket eğitim setin varken bir konvolüsyonel sinir ağına - hep birlikte nasıl eklendiğini ve nasıl eğitildiğinden bahsedelim. Bence sadece tamamen bağlı katmanların kullanımı- kıvrımsal katmanların üzerinde iki temel avantajı olduğunu düşünüyorum. Avantajları parametre paylaşımı ve bağlantıların seyrekliğidir. Bir örnekle göstermeme izin verin. Diyelim ki, 32x32 bir 3-boyutlu resmin olsun, aslında bu örnek bir önceki videodan geliyor- ama 6 filtre ile 5'e 5 filtre kullanıyorsunuz. Ve böylece, bu size 28 x 28 6-boyutlu çıktı verir. Yani 32x32x3, 3,072'dir, ve bu sayıları çoğaltırsanız, 28x28x6 ise 4,704'tür. Ve böylece, eğer bir katmanda 3,072 birimle bir sinir ağı yaptıysan,- sonraki katmanda 4,074 birimle- ve eğer her bir nöronu birbirine bağlarsanız,- daha sonra ağırlık matrisi- bir ağırlık matrisindeki sayıların parametresi yaklaşık 14 milyon olan- 3,072x4,704 olacaktır. Yani, sadece eğitmek için bu kadar çok parametre var. Ve bugün, 14 milyondan daha fazla parametreyi sinir ağı ile eğitebilirsiniz, ama bunun sadece çok küçük bir resim olduğunu düşünün, bu, bir çok parametreyi eğitmek içindir. Ve tabiiki, eğer resim 1000x1000 olsaydı, o zaman görüntü matrisiniz görünmez büyüklükte olurdu. Ama eğer bu konvolüsyonel katmandaki sayıların parametresine bakarsan, her bir filtre 5x5'tir. Yani, her filtrenin 25 parametresi her bir filtre başına 26 hata parametresi artı bir bayes parametresi, ve 6 filtreniz var, yani toplam parametre sayısı- 156 parametre sayısına eşittir. Ve bu yüzden, sayıların parametresi bu konvolüsyonel katmanda oldukça küçük kalır. Ve bu ünsüzün çalışabilmesi için bu küçük parametrelerin iki nedeni vardır. Bir parametre paylaşımı. Ve parametre paylaşımı, görüntünün bir bölümünde - yararlı olan kenar dedektörü gibi özellikli dedektörün- muhtemelen görüntünün başka bir bölümünde motive ettiği gözlemlenir. Ve bunun anlamı şudur; dikey kenarları tespit etmek için 3x3 dediyseniz,– daha sonra aynı 3x3 filtreyi buraya uygulayabilirsiniz,– ve daha sonra,bir sonraki pozisyon,– ve bir sonraki pozisyon, vb. Ve böylece, bu özellik tespitlerinden her biri, Bu aqua'arın her biri dikey bir kenar veya başka bir özellik- algılamak için aynı parametreleri— giriş resminizde birçok farklı pozisyonda kullanabilir. Ve bunun, kenarlar gibi düşük seviyeli- özelliklerin yanı sıra, belki de— bir yüzün veya bir kedinin ya da bir şeyin olduğunu gösteren gözün algılanması gibi daha yüksek seviyeli özellikler için de geçerli. Ama bu durumda bi payla, Bu aquaların 16'sını hesaplamak için aynı dokuz parametre, parametre sayılarının azaltılmasının yollarından biridir. Ve aynı zamanda bir özellik tespiti sezgisel görünüyor– Dikey kenar dedektörü gibi, görüntünün sol üst köşesi için hesaplar. Aynı özellik muhtemelen yararlı olacak gibi görünüyor– görüntünün sağ alt köşesinde kullanılma şansı var. Yani, belki de resmin sol üst ve sağ alt köşelerini — için ayrı özellik dedektörleri— öğrenmeniz gerekmez. Ve belki de sahip olduğunuz bir veri kümeniz var‑ sol üst köşede ve sağ alt köşede farklı dağılımlar var, yani belki bu yüzden biraz farklılar ama yeterince benzer olabilirler– Görüntü boyunca tüm özellik tespitlerini paylaşıyorlar, gayet iyi çalışıyorlar. Ünsüzler ile kaçmak ikinci yolu– nispeten az sayıda parametre olması seyrek bağlantılara sahip olmaktır. Yani, demek istediğim şey– eğer sıfıra bakarsan– bu 3x3 konvolüsyonla hesaplanır. Ve böylece, sadece bu üç giriş sistem veya hücreye bağlıdır. Yani, sağdaki bu çıkış birimi sadece bağlı– bu 6x6, 36 giriş özelliği. Ve özellikle, bu piksel değerlerin geri kalanı,– Tüm bu piksel değerlerinin diğer çıktılarda herhangi bir etkisi yoktur. Demek istediğim, bağlantıların seyrekliği. Başka bir örnek olarak, bu çıktı sadece bu dokuz giriş özelliklerine bağlıdır. Yani, bu çıktıya sadece dokuz giriş özelliği bağlıysa,– ve diğer pikseller bu çıkışı hiç etkilemez. Ve böylece, bu iki mekanizma aracılığıyla,– Bir sinir ağının buna izin veren çok daha az parametresi vardır– Daha küçük antrenman hücresi ile eğitilmek ve 30 yaşın üzerinde olmaya daha az eğilimlidir. Ve böylece, bazen de duyuyorsunuz– konvolüsyonel sinir ağları, çeviri değişmezliğini yakalamada çok iyi. Ve bu kadar gözlem– Bir kedinin resmi bir çift piksel sağa kaydırdı. hala oldukça açık bir kedi. Ve konvolüsyonel yapı, sinir ağının, bir görüntünün gerçeğini şifrelemesine yardımcı olur– birkaç piksel kaydırılmış olması oldukça benzer özelliklere ve– muhtemelen aynı oval etikete atamalıdır. Ve aynı filtreye uyguladığınız bu durumu– resmin bütün konumlarını bilir. hem erken katmanlarda hem de geç katmanlarda– bir sinir ağının otomatik olarak daha fazla öğrenmesine yardımcı olur– ötelenme değişmezliğinin arzu edilen özelliğini sağlamlaştırmak veya daha iyi yakalamak için. Yani ,belki de bir kaç nedenle– bilgisayar görmesinde, kıvrımlar ya da kıvrımsal sinir ağları çok iyi çalışır. Ve son olarak, hepsini bir araya getirelim ve ve nasıl sinir ağlarının eğitildiğini görelim. Diyelim ki bir kedi dedektörü inşa etmek istiyorsun ve sen– aşağıdaki gibi etiketli eğitim setleri var,– şimdi, X bir görüntüdür. Ve y, ikili etiketler olabilir– ya da K nedenlerinden biri. Ve diyelim ki, bir kıvrımsal sinir ağı yapısı seçtiniz– görüntü eklenebilir ve daha sonra noral kıvrımlı ve çekili katmanlar olabilir– ve daha sonra tamamen bağlı bazı katmanlar– Ardından Y şapka çalışan bir yazılım çıktısı.– Konvolüsyon katmanları ve tamamen bağlı katmanların çeşitli parametreleri olacaktır. aynı şekilde W ve bayes'in B'si. Ve böylece, bu yüzden parametrelerin herhangi bir ayarı– Önceki derslerde gördüklerimize benzer bir maliyet fonksiyonu tanımlamanızı sağlar,– W ve B parametrelerini rastgele başlattığımız yer. J'yi hesaplayabilirsiniz– tüm eğitim setinizde sinir ağları tahminlerinin kaybı toplamı olarak,– belki de M.'ye bölebilir. bu sinir ağını eğitmek için– yapman gereken şey o zaman gradient descents( dereceli alçalma) kullanmak veya bazı– algoritma gibi, gradient descents momenti– veya RSMProp, Adam veya başka bir şey– tüm parametrelerini optimize etmek için– sinir ağı, maliyet fonksiyonunu J azaltmaya çalışacaktır. Ve eğer bunu yaparsan– Çok etkili bir kedi dedektörü veya başka bir dedektör inşa edebilirsiniz. Böylece, bu haftaki videoları bitirdiğiniz için tebrikler. Artık bir konvolüsyonel sinir ağının tüm temel yapı taşlarını gördünüz. ve bunları etkili bir görüntü tanıma sistemine nasıl dahil edecekler.  Bu haftaki program çalışmaları– Bütün bu şeylerin daha somut olacağını düşünüyorum– ve uygulama yapmak için şansınız olacak– bu şeyleri kendiniz görün ve çalışın. Gelecek hafta, konvolüsyonel sinir ağlarına daha derin gitmeye devam edeceğiz. Daha önce bahsettim,sadece bir sürü – konvolüsyon sinir ağlarında hiperparametreler var. Yani, önümüzdeki hafta yapmak istediğim şey,– bazı somut örnekler göstereceğim– en etkili konvolüsyonel sinir ağları, böylece kalıpları tanımaya başlayabilirsiniz– Ne tür ağ mimarileri etkilidir. Ve insanların sık sık yaptığı bir şey sadece mimariyi almak– başka biri buldu ve yayınladı– Bir araştırma makalesi ve sadece uygulamanız için kullanın. Ve önümüzdeki hafta biraz daha somut örnekler görerek,– Bunu daha iyi nasıl yapacağınızı da öğrenirsiniz. Ve bunun ötesinde, gelecek hafta– Aynı zamanda kendinden emin bir şekilde çalışmayı sağlayan şey hakkında sezgiyi de alacağız,– ve sonra dersin geri kalanında– Ayrıca, diğer bilgisayar görme uygulamalarını da göreceğiz– nesne algılama ve sinir deposu aktarımı. Bu algoritma setini kullanarak yeni sanat formlarını nasıl yaratırlar. Yani, bu hafta bitti,– ödevlerinizde iyi şanslar, ve önümüzdeki hafta seni görmeyi umuyorum.