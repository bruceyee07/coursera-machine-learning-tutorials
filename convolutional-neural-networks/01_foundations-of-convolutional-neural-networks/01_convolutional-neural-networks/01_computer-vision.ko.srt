1
00:00:00,000 --> 00:00:03,150
Convolutional Networks (콘볼루션망)에 관한 이 강의에 오신 걸 환영합니다.

2
00:00:03,150 --> 00:00:05,430
컴퓨터 비전은 빠르게 발전해오고 있는 분야 중 하나입니다.

3
00:00:05,430 --> 00:00:08,055
딥러닝 덕분에 말이죠.

4
00:00:08,055 --> 00:00:11,490
컴퓨터 비전 딥러닝은 자율주행 자동차들로 하여금

5
00:00:11,490 --> 00:00:15,320
주변 어디에 다른 자동차나 보행자들이 있는지 찾아 그들을 피할 수 있도록 도와줍니다.

6
00:00:15,320 --> 00:00:18,825
안면 인식이 예전보다도 훨씬 잘 작동하도록 만들어줍니다.

7
00:00:18,825 --> 00:00:21,660
아마도 여러분 중 몇몇은 곧, 혹은 어쩌면 이미,

8
00:00:21,660 --> 00:00:23,360
당신 얼굴만으로 잠긴 핸드폰을 열 수도 있고,

9
00:00:23,360 --> 00:00:25,925
심지어 잠긴 문을 열 수도 있을 것입니다.

10
00:00:25,925 --> 00:00:27,435
여러분의 핸드폰을 살펴보시면,

11
00:00:27,435 --> 00:00:29,680
틀림없이 음식 사진이나 호텔 사진, 혹은 재미있는 풍경사진들을

12
00:00:29,680 --> 00:00:32,790
보여주는 앱들을 많이 가지고 계실 겁니다.

13
00:00:32,790 --> 00:00:34,980
그런 앱들을 만드는 몇몇 회사들은

14
00:00:34,980 --> 00:00:37,890
딥러닝을 사용해서 가장 매력적이고,

15
00:00:37,890 --> 00:00:40,475
가장 아름답거나, 혹은 가장 적절한 사진들을 당신에게 보여주도록 하고 있습니다.

16
00:00:40,475 --> 00:00:45,410
그리고 제 생각엔 딥러닝은 심지어 새로운 유형의 예술을 탄생시키는 것도 가능하게 하고 있습니다.

17
00:00:45,410 --> 00:00:48,420
그래서, 컴퓨터 비전에 대한 딥러닝에 대해서

18
00:00:48,420 --> 00:00:51,690
여러분 또한 흥미로워 할 것이라고 생각하는 두 가지 이유가 있습니다.

19
00:00:51,690 --> 00:00:57,445
첫 째로, 컴퓨터 비전 분야의 빠른 발전이 완전히 새로운 어플리케이션을 볼수 있게 해 줄 것이라는 겁니다.

20
00:00:57,445 --> 00:00:59,990
비록 몇 년 전만해도 불가능했던 것들이지만 말이죠.

21
00:00:59,990 --> 00:01:01,230
그리고 이러한 툴을 배움으로써,

22
00:01:01,230 --> 00:01:06,030
아마 이러한 새로운 제품이나 어플리케이션을 고안해 낼 수 있도록 될 것입니다.

23
00:01:06,030 --> 00:01:09,775
둘 째, 컴퓨터 비전 시스템 자체를 만드는 건 못한다 해도,

24
00:01:09,775 --> 00:01:13,740
컴퓨터 비전을 연구하는 단체가 그 동안

25
00:01:13,740 --> 00:01:15,930
아주 창의적이고 아주 독창적으로

26
00:01:15,930 --> 00:01:18,375
새로운 신경망 구조와 알고리즘을 이용해 일 해왔기 때문에

27
00:01:18,375 --> 00:01:23,010
실제로 다른 분야로도 교차 적용할 수 있도록 북돋워 준다는 것을 알게 되었습니다.

28
00:01:23,010 --> 00:01:25,290
예를 들어, 제가 음성인식 작업중일 때,

29
00:01:25,290 --> 00:01:27,840
때로는 컴퓨터 비전에서 나온 아이디어들로부터 영감을 받기도 하고

30
00:01:27,840 --> 00:01:31,270
그것들을 음성 문헌으로 차용해 사용하기도 했습니다.

31
00:01:31,270 --> 00:01:33,570
결국, 여러분이 컴퓨터 비전 작업을 하지 않는다 해도,

32
00:01:33,570 --> 00:01:37,165
이 강의에서 여러분이 배운 아이디어들이

33
00:01:37,165 --> 00:01:41,244
여러분의 알고리즘과 여러분의 구조들을 만드는데 도움이 되기를 바랍니다.

34
00:01:41,244 --> 00:01:43,290
그럼, 이제 시작해봅시다.

35
00:01:43,290 --> 00:01:48,570
여기 이 과정에서 우리가 공부할 컴퓨터 비전 문제점들의 몇 가지 예시가 있습니다.

36
00:01:48,570 --> 00:01:50,870
여러분은 방금 이미지 분류를 보았죠.

37
00:01:50,870 --> 00:01:52,650
때로는 영상 인식이라고도 불립니다.

38
00:01:52,650 --> 00:01:56,845
64 x 64 사이즈의 이미지로 넣고 해결해봅시다

39
00:01:56,845 --> 00:01:58,615
이건 고양이인가요?

40
00:01:58,615 --> 00:02:02,870
컴퓨터 비전 문제점의 또 다른 예시는 물체 탐색입니다.

41
00:02:02,870 --> 00:02:04,695
자율주행 자동차를 만들고 있다면,

42
00:02:04,695 --> 00:02:08,180
아마도 이 이미지에 다른 자동차들이 있다는 걸 알아야 할 필요는 없습니다.

43
00:02:08,180 --> 00:02:12,640
하지만 대신에, 이 사진에 있는 다른 자동차들의 위치는 알아야 할 필요가 있습니다.

44
00:02:12,640 --> 00:02:14,810
여러분의 자동차가 그것들을 피해야 하니까요.

45
00:02:14,810 --> 00:02:16,680
물체 탐색에서, 통상,

46
00:02:16,680 --> 00:02:20,835
우리는 자동차 같은 이 다른 물체들이 있다는 것 발견하는 것뿐만 아니라

47
00:02:20,835 --> 00:02:23,760
그것들 주변에 네모를 그려야 합니다.

48
00:02:23,760 --> 00:02:29,100
사진 어디에 이런 물체들이 있는지를 알아내는 다른 방법들도 있습니다.

49
00:02:29,100 --> 00:02:30,990
그리고 이 예시에서,

50
00:02:30,990 --> 00:02:34,650
같은 사진 안에 여러 대의 자동차가 있을 수도 있다는 것을 인지해야 합니다.

51
00:02:34,650 --> 00:02:38,515
혹은 이들 모두 여러분의 자동차로부터 일정 거리 안에 있을 수도 있다는 것도 말이죠.

52
00:02:38,515 --> 00:02:42,560
또 하나의 예시가 있습니다. 아마 좀 더 재미있을 텐데요. 신경 스타일 이동입니다.

53
00:02:42,560 --> 00:02:44,089
사진이 한 장 있습니다.

54
00:02:44,089 --> 00:02:49,305
그리고 이 사진을 다른 스타일로 다시 그려지게 하려고 합니다.

55
00:02:49,305 --> 00:02:50,740
그래서 신경 스타일 이동입니다.

56
00:02:50,740 --> 00:02:52,290
컨텐츠 이미지가 있습니다.

57
00:02:52,290 --> 00:02:54,245
그리고 스타일 이미지가 있습니다.

58
00:02:54,245 --> 00:02:56,370
오른쪽 이미지는 사실 피카소의 작품입니다.

59
00:02:56,370 --> 00:02:59,200
그리고 신경망으로 하여금 이미지들을 합치게 해서

60
00:02:59,200 --> 00:03:02,621
왼쪽의 컨텐츠 이미지를 다시 그려지도록 할 수 있습니다.

61
00:03:02,621 --> 00:03:05,605
오른쪽 스타일 이미지 안쪽에 말이죠.

62
00:03:05,605 --> 00:03:08,730
그리고 마침내 아래와 같은 그림을 만들게 됩니다.

63
00:03:08,730 --> 00:03:12,395
그래서, 이런 알고리즘이 새로운 작품 유형들이 탄생하는 것을 가능하게 하고 있죠.

64
00:03:12,395 --> 00:03:15,980
그리고 이 과정에서, 여러분은 어떻게 이것을 직접 하는지도 배우게 될 것입니다.

65
00:03:15,980 --> 00:03:21,185
컴퓨터 비전 문제 과제 중 하나는 입력 정말 큰 얻을 수 있습니다.

66
00:03:21,185 --> 00:03:23,040
예를 들어, 이전 강의들에서,

67
00:03:23,040 --> 00:03:25,185
64 x 64 크기의 이미지로 작업을 했는데요,

68
00:03:25,185 --> 00:03:29,030
3가지 색상 채널이었기 때문에 64 x 64 x 3이라고 할 수 있습니다.

69
00:03:29,030 --> 00:03:32,490
그리고 그것들을 곱셈해보면, 12288이죠.

70
00:03:32,490 --> 00:03:37,115
따라서 입력feature는 12288 의 규모가 됩니다.

71
00:03:37,115 --> 00:03:38,640
그리 나쁜 건 아닙니다.

72
00:03:38,640 --> 00:03:42,105
하지만 64 x 64 는 사실 매우 작은 이미지죠.

73
00:03:42,105 --> 00:03:44,085
만약 더 큰 이미지들로 작업을 하면,

74
00:03:44,085 --> 00:03:48,615
아마 이것은 1000 x 1000 픽셀의 이미지 인 것 같은데요,

75
00:03:48,615 --> 00:03:51,095
사실 백만 픽셀이죠.

76
00:03:51,095 --> 00:03:57,530
하지만 입력feature의 규모는 1000 x 1000 x 3 이 될 겁니다.

77
00:03:57,530 --> 00:03:59,640
왜냐하면 3개의 RGB 채널이 있기 때문이죠.

78
00:03:59,640 --> 00:04:02,382
곧, 300만입니다.

79
00:04:02,382 --> 00:04:04,590
만일 더 작은 화면으로 이것을 보고 있다면,

80
00:04:04,590 --> 00:04:05,790
분명하게 보이진 않을지도 모릅니다.

81
00:04:05,790 --> 00:04:08,440
하지만 이것은 사실 낮은 픽셀의 64 x 64 이미지입니다.

82
00:04:08,440 --> 00:04:11,477
그리고 이것은 더 높은 픽셀의 1000 x 1000 이미지 입니다.

83
00:04:11,477 --> 00:04:14,190
하지만, 300만의 입력feature를 가지고 있다면

84
00:04:14,190 --> 00:04:21,155
이는 곧 300만 차원일 것이라는 것을 의미합니다.

85
00:04:21,155 --> 00:04:27,525
결국, 첫 번째 은닉 층에서 아마도 1000 은닉 층이 있을 것이고

86
00:04:27,525 --> 00:04:36,240
그럼 총 무게가 W1매트릭스라는 것입니다.

87
00:04:36,240 --> 00:04:42,620
만일 여러분이 이 과정 1이나 2에서 다루었던 기본 혹은 연결된 네트워크를 사용한다면,

88
00:04:42,620 --> 00:04:50,365
이 매트릭스는 1000 x 3000000 차원의 매트릭스가 될 것입니다.

89
00:04:50,365 --> 00:04:55,130
왜냐하면 X는 300만을 곱한 R이 되기 때문이죠.

90
00:04:55,130 --> 00:04:57,793
3m, 300만 표시하기 위해 m을 사용하고 있습니다.

91
00:04:57,793 --> 00:05:00,485
이는 곧 이 매트릭스가

92
00:05:00,485 --> 00:05:05,140
매우 매우 거대한 30억 파라미터에 이른다는 것이죠.

93
00:05:05,140 --> 00:05:06,820
그리고 이 많은 파라미터로

94
00:05:06,820 --> 00:05:12,040
신경망 네트워크가 과대 적합을 방지하도록 충분한 데이터를 얻는 것을 어렵습니다.

95
00:05:12,040 --> 00:05:16,100
또한, 30억 파라미터를 가진 신경망을 단련하는 것에 대한

96
00:05:16,100 --> 00:05:20,870
컴퓨터 요구사항과 메모리 요구사항은 실행불가능 합니다.

97
00:05:20,870 --> 00:05:22,732
그러나 컴퓨터 비전 어플리케이션에 있어서는,

98
00:05:22,732 --> 00:05:25,710
작은 이미지들만 한정해서 사용하는 것을 원치 않을 겁니다

99
00:05:25,710 --> 00:05:27,880
큰 이미지들을 사용하고 싶죠.

100
00:05:27,880 --> 00:05:32,020
그렇게 하려면, 더 나은 회선 작업을 구현 해야

101
00:05:32,020 --> 00:05:35,955
컨볼루션 신경망의 근본적 구성 요소 중의 하나이기도 하니까요.

102
00:05:35,955 --> 00:05:37,135
이게 뭘 의미하고

103
00:05:37,135 --> 00:05:39,505
여러분이 어떻게 실행할 수 있을지를 다음 시간 영상에서 보시죠

104
00:05:39,505 --> 00:05:40,915
edge detection의 예시를 통해

105
00:05:40,915 --> 00:05:43,410
edge detection의 예시를 통해 컨볼루션을 설명하도록 하겠습니다.