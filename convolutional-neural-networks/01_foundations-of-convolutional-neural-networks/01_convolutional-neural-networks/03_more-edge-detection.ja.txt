畳み込み処理が どのようにして 垂直エッジ検出器を 実現するのかを見てきた このビデオでは 正のエッジと負のエッジの違いを学ぶ それは 明から暗 と 暗から明 のエッジ遷移の違いだ そして 他の種類のエッジ検出器も見てみる また アルゴリズムがどうやって学ぶのかについても見てみる これまで見てきたハンドコードのエッジ検出器ではないものを では、始めましょう。 ここに 前回のビデオで見た例がある
この画像を見たでしょ 6 x 6  左が明るく 右が暗い そして 垂直エッジ検出フィルターで畳み込むと 垂直エッジが この画像の中央に検出される 色が反転した場合 画像の中で何が起こるか？ 左が暗く 右が明るい場合は？ つまり 画像の右半分が 10 で 左半分が 0 もし 同じエッジ検出フィルターで 畳み込むと 結果は 中央が 30 ではなく 負の30になる 絵を描けるが こんな風になる 影の遷移が逆転しているので 30 もまた 反転している そして 負の 30 は 明から暗への遷移ではなく 暗から明への遷移を示す もし この２つのケースのどちらでも構わない場合は この出力行列の絶対値を取ればよい しかし この特別のフィルターは 明から暗と 暗から明のエッジを 区別する もっと エッジ検出の例を見てみよう この 3 x 3 フィルターは これまで見てきたやつだが 垂直エッジを検出する それほど 驚くことは無いだろうけど この 3 x 3 フィルターは 水平エッジを検出する このフィルターによる垂直エッジは 3 x 3 領域であり ピクセルが 相対的に 左側が明で 右側が暗になっている これを鑑みると 同じように 水平エッジも 3 x 3 領域で ピクセルが 相対的に 上が明るく 下が暗い 行になるだろう もう一つ例を出そう 今度はもっと複雑なやつだ 左上角と右下角が 10 だ よって 画像を描くなら こんな画像になる 0 の場所は暗いので 暗い領域には影を付ける 左上と右下角は明るくなる そして 水平エッジ検出器で畳み込むと こうなる 2~3個 例を取り上げよう ここの 30 は この 3 x 3 領域に対応していて 実際 そこでは 明るいピクセルが上にあり 暗いピクセルが下にある ここにあるものだ そのため 強い正のエッジが見つかる そして ここにある 負の 30 は この領域に対応していて 実際 下が明るく 上が暗い よって この例では これは 負のエッジとなる これは 人工的に作ったもので たった 6 x 6 の相対的に小さな画像を扱ったに過ぎない しかし これらの中間値 例えばこの -10 は(訳注: 映像では正の10を示している)
ここのフィルターが 左の正エッジの一部分と 右の負エッジの一部分を 捉えたことを反映している それらを混ぜ合わせて 中間値となった しかし もし この画像が大変大きかった場合は 例えば 1000 x 1000 画像で チェス盤のような模様があったら そうしたら これら 10 の領域を見ることは無いだろう 中間値の数は 画像のサイズに比べてとても小さいから まとめると 異なるフィルターを使えば 垂直や水平のエッジを見つけることができる 我々が使ってきた 3 x 3 垂直エッジ検出フィルターは 可能な選択肢の1つに過ぎない また コンピュータ ビジョン学においては 歴史的には どんな数の組を使うのが良いのかについての 大量の議論がある 他にも使えるものがある 例えば 1 2 1, 0 0 0, -1 -2 -1 これは ソーベル フィルターと呼ばれる これの利点は 中央の行 中央のピクセル を少しだけ重くしていることである これは 少しだけ堅牢になる しかし コンピュータ ビジョン研究者は 他の数の組み合わせも 同様に使う 1 2 1 の代わりに 3 10 3 にしたり そして -3 -10 -3 にしたりする そして これは シャー フィルターと呼ばれる そして これは また少しだけ異なる性質を持つ これは 単なる垂直エッジ検出のためのものだ これを 90° 動かせば 水平エッジ検出になる ディープラーニングの台頭で 学んだことの1つは 欲しいのは 複雑な画像のエッジを検出することであって コンピュータ ビジョン研究者が手で書いた９つの数字を必要とすることではない 多分 これらは学習することができ この行列の９つの数をパラメータとして扱える それらは 誤差逆伝播で 学習できる ゴールは ９つのパラメータを学習し 画像を得た時 6 x 6 画像を そして 3 x 3 フィルターでそれを畳み込んで 良いエッジ検出を行えるようにすることだ 後のビデオを見るのは これら９つの数をパラメータとして扱い 逆伝播が そのように進むなら 1 1 1, 0 0 0, -1 -1 -1 を学び出すし もしくは ソーベル フィルターを学習したり シャー フィルターを学習したりする もしくは 別の何かを学ぶ それは どの手書きしたフィルターよりも データの統計情報を良く捉えている そして 単なる垂直と水平のエッジではなく それは 45° 70° 73°や どのような向きのエッジでも 学ぶことができるだろう そして これらの数をパラメータとして データから自動的に学習する
ニューラルネットワークは 低レベルの特徴を確かに学ぶことができて エッジ等も学べる そして それは コンピュータ ビジョン研究者が手で作り上げることができるものよりも堅牢なのだ しかし これらの計算の基礎となるは 依然として畳み込み処理だ それにより 誤差逆伝播が どのような 3 x 3 フィルターでも学習可能にする そして 画像全体を通じて それを適用する この位置や この位置や この位置に
そして 検出しようとする特徴がどのようなものであっても 出力する それは 垂直エッジだったり 水平エッジだったり 他の角度のエッジだったり もしくは 英語で名前の無いような他のフィルターだったりするだろう これら９つの数を学習パラメータとして扱えるという考えは コンピュータ ビジョンにおける最も強力な考えの1つとなっている そして このコースの後の方 今週の終わりの方で この考えの詳細について語る 実際にどのように 誤差逆伝播を使って これら９つの数を学ぶのかについて しかし まずは 基本の畳み込み処理についての 他の詳細 他の種類について話しましょう 次の２つのビデオでは 畳み込みに関して
どのように パディングと ストライドを使うのかについて 議論したい この２つは 畳み込み構造の重要なピースとなるでしょう 畳み込みニューラルネットワークの では次のビデオにいきましょう