1
00:00:00,000 --> 00:00:02,335
Konvolüsyon katmanlar dışında

2
00:00:02,335 --> 00:00:07,130
Evrişimsel sinir ağları da boyut küçültmek için kullanılır

3
00:00:07,130 --> 00:00:08,510
daha hızlı hesaplamak için

4
00:00:08,510 --> 00:00:12,020
bu özelliklerin yanı sıra özellikleri daha iyi belirleyen sağlam algoritmalar kullanılır.

5
00:00:12,020 --> 00:00:16,390
Hadi bir bakalım,

6
00:00:16,390 --> 00:00:20,205
sonra neden bunu yapmak istediğimiz hakkında konuşalım.

7
00:00:20,205 --> 00:00:24,300
Farz edelim ki 4x4 boyutunda bir girdimiz var,

8
00:00:24,300 --> 00:00:28,675
bunu filterelemek isterseniz max pooling i kullanabilirsiz.

9
00:00:28,675 --> 00:00:30,320
ve uygulamanın sonucu olarak çıktı

10
00:00:30,320 --> 00:00:34,375
boyut 2x2 ye düşer.

11
00:00:34,375 --> 00:00:37,270
Bunu yapmanın yolu çok kolay.

12
00:00:37,270 --> 00:00:40,310
4x4 lük girdinizi alın ve bölün

13
00:00:40,310 --> 00:00:44,280
gördüğünüz üzere ben boyalı alanlara böldüm.

14
00:00:44,280 --> 00:00:46,130
Sonra, boyutu

15
00:00:46,130 --> 00:00:47,480
2x2 olan çıktıdaki

16
00:00:47,480 --> 00:00:53,240
sayılar önceki alandaki en büyük sayılardır

17
00:00:53,240 --> 00:00:54,680
Bence sol üstte

18
00:00:54,680 --> 00:00:57,900
bu dört sayının en büyüğü 9.

19
00:00:57,900 --> 00:01:01,760
Sağ üstteki en büyük sayı 2

20
00:01:01,760 --> 00:01:04,273
Sol aşağıda, en büyük sayı 6,

21
00:01:04,273 --> 00:01:08,050
sağ aşağıda en büyük sayı 3.

22
00:01:08,050 --> 00:01:10,737
Sağdaki sayıları hesaplamak için,

23
00:01:10,737 --> 00:01:13,400
2x2 lik alandaki en büyük sayıyı aldık.

24
00:01:13,400 --> 00:01:18,740
Filtre boyutu iki olan bir filtre uygulamak isterseniz böyle yaparsınız

25
00:01:18,740 --> 00:01:25,290
Çünkü ikilik bir bölgeye alıyorsunuz ve iki adım ilerliyorsunuz.

26
00:01:25,290 --> 00:01:30,825
Yani, aslında bu filtreleme boyutundan başlayacağımız için

27
00:01:30,825 --> 00:01:36,540
maksimum havuzlamanın üst değişkenleridir(hyperparameters).

28
00:01:36,540 --> 00:01:39,650
Dokuza ikiye bölen iki bölgeye benziyor,

29
00:01:39,650 --> 00:01:45,580
ve sonra bu bölgeye bakmak için iki adımı atıyorsunuz.

30
00:01:45,580 --> 00:01:46,880
ve sonra sıradaki satır için

31
00:01:46,880 --> 00:01:49,580
Altı vermek için iki adım atıyorsun,

32
00:01:49,580 --> 00:01:52,570
ve sonra size üç vermek için sağa doğru iki adımla ilerleyin.

33
00:01:52,570 --> 00:01:54,620
Çünkü kareler ikiye iki olduğundan, f ikiye eşittir,

34
00:01:54,620 --> 00:01:58,070
ve ikiyle devam ettiğiniz için

35
00:01:58,070 --> 00:02:00,210
s ikiye eşittir.

36
00:02:00,210 --> 00:02:09,526
Yani, maksimum havuzlamanın yaptıklarının ardındaki sezgi.

37
00:02:09,526 --> 00:02:15,050
Bu dörtte dört bölge hakkında bir takım özellikler düşünürseniz,

38
00:02:15,050 --> 00:02:19,204
sinir ağının bazı katmanlarındaki aktivasyonlar,

39
00:02:19,204 --> 00:02:20,490
sonra çok sayıda,

40
00:02:20,490 --> 00:02:23,670
Bu, belirli bir özellik tespit edildiğini gösterir.

41
00:02:23,670 --> 00:02:26,495
Dolayısıyla, sol üst kadranın bu özelliği vardır.

42
00:02:26,495 --> 00:02:32,470
[Duyulmuyor] algılamaya çalışıyorsanız belki dikey bir kenar veya belki daha yüksek veya daha çirkin olabilir.

43
00:02:32,470 --> 00:02:34,820
Açıkça, bu özellik sol üst kadranda var.

44
00:02:34,820 --> 00:02:40,055
Oysa bu özellik, belki de kedi gözü dedektörü değil.

45
00:02:40,055 --> 00:02:43,975
Oysa bu özellik, sağ üst kadranda gerçekten mevcut değildir.

46
00:02:43,975 --> 00:02:47,764
Yani maksimum işlemin yaptığı, her yerde tespit edilen birçok özelliktir.

47
00:02:47,764 --> 00:02:53,504
ve bu çeyreklerden biri, daha sonra maksimum havuzlamanın çıktısında korunur.

48
00:02:53,504 --> 00:02:56,265
Yani, maks'in yaptığı şey gerçekten söylemek,

49
00:02:56,265 --> 00:02:59,780
Bu filtre bu filtrede herhangi bir yer tespit ederse,

50
00:02:59,780 --> 00:03:01,348
sonra yüksek bir sayı tutun.

51
00:03:01,348 --> 00:03:03,510
Ancak bu özellik tespit edilmezse,

52
00:03:03,510 --> 00:03:07,690
belki bu özellik sağ üst kadranda mevcut değildir.

53
00:03:07,690 --> 00:03:11,090
Sonra tüm bu sayıların maksimumu hala oldukça küçük.

54
00:03:11,090 --> 00:03:15,252
Yani belki de maksimum havuzlamanın arkasındaki sezgi budur.

55
00:03:15,252 --> 00:03:16,535
Ama itiraf etmeliyim,

56
00:03:16,535 --> 00:03:19,550
İnsanların maksimum havuzu kullanmasının ana sebebi olduğunu düşünüyorum.

57
00:03:19,550 --> 00:03:23,627
iyi çalışmak için çok fazla denemede bulunduğundan

58
00:03:23,627 --> 00:03:25,646
ve anlattığım sezgi,

59
00:03:25,646 --> 00:03:27,375
sık sık alıntı yapılmasına rağmen

60
00:03:27,375 --> 00:03:33,020
Bunun gerçek altta yatan neden olup olmadığını tam olarak bilen birini bilmiyorum.

61
00:03:33,020 --> 00:03:34,655
Eğer var mı bilmiyorum

62
00:03:34,655 --> 00:03:39,930
Max havuzlamanın ConvNets'te iyi çalışmasının altında yatan gerçek sebep.

63
00:03:39,930 --> 00:03:43,490
Max havuzlamanın ilginç bir özelliği de

64
00:03:43,490 --> 00:03:47,770
Bir grup hiperparametrede öğrenilecek parametreler yoktur.

65
00:03:47,770 --> 00:03:50,293
Öğrenmek için gradyan kökenli aslında hiçbir şey yok.

66
00:03:50,293 --> 00:03:51,780
F ve s düzeltdikten sonra,

67
00:03:51,780 --> 00:03:56,876
Bu sadece sabit bir hesaplama ve degrade iniş hiçbir şeyi değiştirmez.

68
00:03:56,876 --> 00:04:00,810
Biraz farklı hipermetrelerle bir örnek verelim.

69
00:04:00,810 --> 00:04:04,675
Burada kullanacağım, beşte beş girişiniz var

70
00:04:04,675 --> 00:04:10,290
ve en fazla üçte bir filtre boyutuyla maksimum havuzlamayı uygulayacağız.

71
00:04:10,290 --> 00:04:13,815
Yani f üçe eşittir ve bir adımı kullanalım.

72
00:04:13,815 --> 00:04:18,190
Yani bu durumda, çıktı boyutu üçte üç olacak.

73
00:04:18,190 --> 00:04:20,570
Ve geliştirdiğimiz formüller

74
00:04:20,570 --> 00:04:23,945
konv katman için çıktı boyutunu bulmak için önceki videolar,

75
00:04:23,945 --> 00:04:27,345
Bu formüller ayrıca maksimum havuzlama için çalışır.

76
00:04:27,345 --> 00:04:34,345
Yani, bu artı 2p eksi f artı artı 1.

77
00:04:34,345 --> 00:04:38,458
Bu formül aynı zamanda maksimum havuzlamanın çıkış boyutunu belirlemek için de çalışır.

78
00:04:38,458 --> 00:04:41,820
Fakat bu örnekte, bu üç öğenin öğelerinin her birini üç çıktı olarak hesaplayalım.

79
00:04:41,820 --> 00:04:45,080
Sol üstteki elemanlar,

80
00:04:45,080 --> 00:04:46,670
Bu bölgeye bakacağız.

81
00:04:46,670 --> 00:04:48,735
Yani üç bu üç bölge olduğunu dikkat edin

82
00:04:48,735 --> 00:04:51,695
çünkü filtre boyutu üç ve orada maks.

83
00:04:51,695 --> 00:04:53,715
Yani, bu dokuz olacak,

84
00:04:53,715 --> 00:04:57,920
ve sonra bir tanesini değiştirdik.

85
00:04:57,920 --> 00:05:00,960
Yani, mavi kutudaki maksimum dokuz.

86
00:05:00,960 --> 00:05:03,695
Bunu tekrar değiştirelim.

87
00:05:03,695 --> 00:05:06,235
Mavi kutunun maksimum beşi.

88
00:05:06,235 --> 00:05:09,710
Ve sonra bir sonraki sıraya geçelim, bir adım daha.

89
00:05:09,710 --> 00:05:12,465
Yani sadece bir adım aşağıya iniyoruz.

90
00:05:12,465 --> 00:05:16,520
Yani o bölgede en fazla dokuz, o bölgede en fazla dokuz,

91
00:05:16,520 --> 00:05:19,970
o bölgede max,

92
00:05:19,970 --> 00:05:22,516
Şimdi iki beşliyle, en fazla beşimiz var.

93
00:05:22,516 --> 00:05:26,130
Ve son olarak, max bu sekiz.

94
00:05:26,130 --> 00:05:28,965
Max bu altı,

95
00:05:28,965 --> 00:05:31,350
ve bunun içinde maksimum, bu değil.[duyulmuyor]

96
00:05:31,350 --> 00:05:35,810
Tamam, bu, bu hiperparametreler kümesinin f'ye eşit olduğunu,

97
00:05:35,810 --> 00:05:40,007
s eşittir bir çıktı çıktı verir [duyulmuyor].

98
00:05:40,007 --> 00:05:44,975
Şimdiye kadar, bir 2D (2 Boyutlu) girişte maksimum havuzlamayı gösterdim.

99
00:05:44,975 --> 00:05:47,370
3D(3 Boyutlu) girişiniz varsa,

100
00:05:47,370 --> 00:05:53,245
daha sonra çıktılar aynı boyuta sahip olacak.

101
00:05:53,245 --> 00:05:56,765
Örneğin, beşte beşe sahipseniz,

102
00:05:56,765 --> 00:06:02,360
daha sonra çıkış üçte üç olacak ve hesapladığınız yol

103
00:06:02,360 --> 00:06:05,045
maksimum havuzlamayı hesapladığınız yöntem,

104
00:06:05,045 --> 00:06:08,368
her bir kanalda tanımladığımız hesaplamayı bağımsız olarak gerçekleştirmektir.

105
00:06:08,368 --> 00:06:11,960
Bu yüzden, yukarıda gösterilen ilk kanal hala aynı,

106
00:06:11,960 --> 00:06:13,790
ve sonra ikinci kanal için sanırım,

107
00:06:13,790 --> 00:06:15,790
az önce çizdiğim bu,

108
00:06:15,790 --> 00:06:19,250
o dilim üzerinde aynı hesaplama yaparsınız

109
00:06:19,250 --> 00:06:24,365
ve bu size ikinci dilimi verir.

110
00:06:24,365 --> 00:06:29,300
Ve daha genel olarak, eğer bu sayı beşe kadar beş kanalsa,

111
00:06:29,300 --> 00:06:34,395
Çıkış aynı sayıda kanal tarafından üçte üç olur.

112
00:06:34,395 --> 00:06:44,541
Ve maksimum havuzlama hesaplaması, bu N_C kanallarının her birinde bağımsız olarak yapılır.

113
00:06:44,541 --> 00:06:46,520
Yani, bu maksimum havuz.

114
00:06:46,520 --> 00:06:49,815
Bu, çok sık kullanılmayan havuzlama türüdür.

115
00:06:49,815 --> 00:06:52,870
ama kısaca, ortalama bir havuz olan bahseteceğim.

116
00:06:52,870 --> 00:06:56,395
Yani, beklediğiniz şeyi hemen hemen yapar,

117
00:06:56,395 --> 00:06:59,080
her filtre içinde maksimumları almak yerine

118
00:06:59,080 --> 00:07:02,040
Ortalamayı sen al.

119
00:07:02,040 --> 00:07:03,250
Bu yüzden bu örnekte,

120
00:07:03,250 --> 00:07:07,540
Mor sayıların ortalaması 3,75,

121
00:07:07,540 --> 00:07:09,940
o zaman 1.25

122
00:07:09,940 --> 00:07:12,930
ve dört ve iki.

123
00:07:12,930 --> 00:07:17,020
Ve böylece, bu hiperparametreler f ile ortalama ikiye eşittir,

124
00:07:17,020 --> 00:07:21,795
s ikiye eşittir, diğer hiperparametreleri de seçebiliriz.

125
00:07:21,795 --> 00:07:24,640
Yani bu günlerde, maksimum havuzlama çok daha fazla kullanılıyor

126
00:07:24,640 --> 00:07:28,340
Genellikle bir istisna ile ortalama havuzlamadan,

127
00:07:28,340 --> 00:07:32,125
bir sinir ağında bazen çok derindir.

128
00:07:32,125 --> 00:07:36,670
Temsilizi çökertmek için ortalama havuzlamayı kullanabilirsiniz.

129
00:07:36,670 --> 00:07:40,290
7 x 7 1.000.

130
00:07:40,290 --> 00:07:42,755
Tüm [duyulmuyor] üzerinde bir ortalama,

131
00:07:42,755 --> 00:07:45,625
1000'e kadar 1 alırsınız.

132
00:07:45,625 --> 00:07:47,475
Bunun bir örneğini daha sonra göreceğiz.

133
00:07:47,475 --> 00:07:54,085
Ama görüyorsunuz, maksimum havuzlama, nöral ağda ortalama havuzdan çok daha fazla şey kullandı.

134
00:07:54,085 --> 00:07:56,305
Yani özetlemek gerekirse,

135
00:07:56,305 --> 00:08:00,100
Havuzlama için hipermetreler f

136
00:08:00,100 --> 00:08:02,840
filtre boyutu ve s, adım,

137
00:08:02,840 --> 00:08:07,360
ve belki de ortak değişkenlerin (parameters) seçimleri f eşittir iki, s eşittir iki.

138
00:08:07,360 --> 00:08:11,045
Bu oldukça sık kullanılır ve bu etkisi vardır

139
00:08:11,045 --> 00:08:15,925
yükseklik ve genişliği yaklaşık ikiye katlayarak kabaca küçültmek,

140
00:08:15,925 --> 00:08:21,150
ve ortak seçilmiş üst değişkenler (hyperparameters) f eşittir iki, s eşittir iki,

141
00:08:21,150 --> 00:08:23,530
ve bu daralmanın etkisine sahiptir

142
00:08:23,530 --> 00:08:28,440
Temsilin yüksekliği ve genişliği, iki faktörle.

143
00:08:28,440 --> 00:08:32,094
Ayrıca eşittir üç eşittir, s eşittir iki kullanılır,

144
00:08:32,094 --> 00:08:37,150
ve sonra diğer üst değişken(hyperparameter), tıpkı ikili bir bit gibi,

145
00:08:37,150 --> 00:08:40,120
maksimum havuz kullanıyorsunuz veya ortalama havuz kullanıyorsunuz.

146
00:08:40,120 --> 00:08:43,380
İsterseniz ekstra bir üst değişken(hyperparameter) ekleyebilirsiniz

147
00:08:43,380 --> 00:08:48,140
Bu çok olmasına rağmen dolgulama(padding) için çok nadiren kullanılır.

148
00:08:48,140 --> 00:08:50,080
Maksimum havuzlama yaptığınızda, genellikle,

149
00:08:50,080 --> 00:08:51,685
herhangi bir dolgulama(padding) kullanmazsınız

150
00:08:51,685 --> 00:08:55,025
Sonraki hafta da göreceğimiz bir istisna olsa da.

151
00:08:55,025 --> 00:08:57,160
Ama maksimum havuzlamanın çoğu kısmı için

152
00:08:57,160 --> 00:08:59,710
genellikle, herhangi bir dolgulama(padding) kullanmazsınız.

153
00:08:59,710 --> 00:09:05,345
Dolayısıyla, p'nin en yaygın değeri p eşittir sıfırdır.

154
00:09:05,345 --> 00:09:13,215
Ve maksimum havuzlamanın girişi, size,

155
00:09:13,215 --> 00:09:14,945
N_H, N_W, N_C tarafından

156
00:09:14,945 --> 00:09:21,265
ve bunun tarafından verilen büyüklükte bir hacim çıkarırdı.

157
00:09:21,265 --> 00:09:29,465
Yani, N_W eksi f'ye göre bir dolgu olmadığı varsayılırsa,

158
00:09:29,465 --> 00:09:32,015
Bu bir N_C tarafından.

159
00:09:32,015 --> 00:09:35,295
Yani giriş kanalı sayısı, çıkış kanallarının sayısına eşittir

160
00:09:35,295 --> 00:09:40,555
Çünkü havuzlama, her bir kanalınıza bağımsız olarak uygulanır.

161
00:09:40,555 --> 00:09:47,205
Havuzlama hakkında dikkat edilmesi gereken bir şey, öğrenilecek parametreler olmamasıdır.

162
00:09:47,205 --> 00:09:50,470
Yani, bu ürünü uygularken,

163
00:09:50,470 --> 00:09:55,645
zeminin maksimum havuzlama yoluyla adapte olacağı hiçbir parametrenin olmadığını görüyorsunuz.

164
00:09:55,645 --> 00:09:58,400
Bunun yerine, sadece bir kez ayarladığınız hyperparameters(üst değişken) var,

165
00:09:58,400 --> 00:10:01,485
belki de bunları elle ayarlayabilir veya çapraz doğrulamayı kullanarak ayarlayabilirsiniz.

166
00:10:01,485 --> 00:10:03,710
Ve bunun ötesinde, işiniz biter.

167
00:10:03,710 --> 00:10:07,140
Sadece sinirsel ağın katmanlarından birinde hesapladığı sabit bir işlevdir.

168
00:10:07,140 --> 00:10:09,829
ve aslında öğrenecek bir şey yok.

169
00:10:09,829 --> 00:10:11,999
Bu sadece sabit bir işlev.

170
00:10:11,999 --> 00:10:13,350
Yani, bu havuz için.

171
00:10:13,350 --> 00:10:15,460
Artık, konvolüsyon katmanları ve havuz katmanları oluşturmayı biliyorsunuz.

172
00:10:15,460 --> 00:10:18,095
Bir sonraki videoda,

173
00:10:18,095 --> 00:10:20,830
ConvNet'in daha karmaşık bir örneğini görelim.

174
00:10:20,830 --> 00:10:25,000
Tamamen birbirine bağlı katmanları tanıtmamıza izin verecek bir tanesi.