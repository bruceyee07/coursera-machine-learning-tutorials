1
00:00:01,000 --> 00:00:05,510
Evrişim işleminin 2 boyutlu görüntüler üzerinde nasıl çalıştığını gördünüz

2
00:00:05,510 --> 00:00:08,505
Şimdi, sadece 2 boyutlu görüntüler değil

3
00:00:08,505 --> 00:00:10,190
3 boyutlu görüntüler üzerinde de

4
00:00:10,190 --> 00:00:13,265
nasıl çalıştırabileceğimizi bakalım

5
00:00:13,265 --> 00:00:15,610
Bir örnekle başlayalım

6
00:00:15,610 --> 00:00:17,930
Diyelim ki, sadece gri ölçekli(gray scale) görüntü üzerinde değil de

7
00:00:17,930 --> 00:00:20,920
bir RGB görüntüde de özellikleri

8
00:00:20,920 --> 00:00:22,550
belirlemek istiyorsunuz

9
00:00:22,550 --> 00:00:27,035
RGB görüntü, 6 x 6 bir görüntü yerine

10
00:00:27,035 --> 00:00:29,330
6 x 6 x 3 olabilir

11
00:00:29,330 --> 00:00:32,980
Burada ki 3, üç renk kanalına karşılık geliyor

12
00:00:32,980 --> 00:00:37,575
Yani bunu 3 tane 6x6 görüntü yığını olarak düşünebilirsiniz

13
00:00:37,575 --> 00:00:41,925
Bu resimdeki kenarları veya başka özellikleri belirlemek için

14
00:00:41,925 --> 00:00:43,490
bu görüntüyü

15
00:00:43,490 --> 00:00:47,320
önceden yaptığımız gibi

16
00:00:47,320 --> 00:00:49,120
3 x 3 filtre ile değil

17
00:00:49,120 --> 00:00:51,907
3 boyutlu filtre ile evirebiliriz(convolve)

18
00:00:51,907 --> 00:00:54,865
Bu filtre 3 x 3 x 3 olacak

19
00:00:54,865 --> 00:01:01,960
Yani filtrenin kendisi de 3 katmanlı olacak. Bu katmanlar kırmızı,

20
00:01:01,960 --> 00:01:04,897
yeşil ve mavi kanallara karşılık geliyor.

21
00:01:04,897 --> 00:01:07,180
Bu şeylere isim vermek gerekirse

22
00:01:07,180 --> 00:01:08,980
Buradaki ilk 6

23
00:01:08,980 --> 00:01:12,290
görüntünün yüksekliği

24
00:01:12,290 --> 00:01:19,360
bu genişliği ve bu üçte kanal sayısı.

25
00:01:19,360 --> 00:01:24,075
Benzer bir şekilde filtrenin de yükseliği,

26
00:01:24,075 --> 00:01:27,995
genişliği ve kanal sayısı vardır

27
00:01:27,995 --> 00:01:31,170
Ve görüntünün kanal sayısı, filtrenin kanal sayısı ile

28
00:01:31,170 --> 00:01:35,143
eşleşmek zorundadır

29
00:01:35,143 --> 00:01:38,480
Yani bu iki rakam eşit olmak zorunda

30
00:01:38,480 --> 00:01:42,365
Bir sonraki slaytta evrişim işleminin nasıl çalıştığını göreceğiz

31
00:01:42,365 --> 00:01:46,740
ancak bu işlemin sonucu 4 x 4 bir görüntü olacak

32
00:01:46,740 --> 00:01:49,600
ve dikkat edin bu 4 x 4 x 1

33
00:01:49,600 --> 00:01:53,160
sonunda artık 3 yok.

34
00:01:53,160 --> 00:02:01,313
Bu işlemin nasıl çalıştığını detaylı olarak inceleyelim, ancak daha güzel çizilmiş bir resim kullanalım

35
00:02:01,313 --> 00:02:05,365
İşte bu 6 x 6 x 3'lük bir görüntü

36
00:02:05,365 --> 00:02:10,030
ve bu da 3 x 3 x 3'lük filtre

37
00:02:10,030 --> 00:02:11,830
ve bu son sayı, 

38
00:02:11,830 --> 00:02:17,395
3 boyutlu görüntü ve filtrenin son rakamı eşleşiyor.

39
00:02:17,395 --> 00:02:22,195
Bu 3 x 3 x 3'lük filtrenin çizimini basitleştirmek için

40
00:02:22,195 --> 00:02:26,674
matris yığınları şeklinde çizmek yerine 

41
00:02:26,674 --> 00:02:32,325
bazen sadece bunun gibi 3 boyutlu bir küp çizeceğim.

42
00:02:32,325 --> 00:02:37,775
Bu evrişim işleminin çıktısını hesaplamak için,

43
00:02:37,775 --> 00:02:42,440
bu 3 x 3 x 3'lük filtreyi alıp

44
00:02:42,440 --> 00:02:45,440
en üst sol konuma yerleştirin

45
00:02:45,440 --> 00:02:51,026
Bu 3 x 3 x 3'lük filtrenin 27 rakamı olduğuna dikkat edin

46
00:02:51,026 --> 00:02:53,988
veya 27 parametresi olduğuna

47
00:02:53,988 --> 00:02:56,180
Ve şimdi, bu 27 rakamın her birini alın

48
00:02:56,180 --> 00:03:05,695
ve bunları görüntünün kırmızı, yeşil ve mavi kanallarındaki

49
00:03:05,695 --> 00:03:07,425
karşılık gelen rakamlar ile çarpın.

50
00:03:07,425 --> 00:03:09,620
Yani kırmızı kanaldaki ilk 9 rakamı alın

51
00:03:09,620 --> 00:03:12,080
daha sonra altındaki yeşil kanalı alın

52
00:03:12,080 --> 00:03:13,970
daha sonra da altındaki mavi kanalı alın

53
00:03:13,970 --> 00:03:17,880
ve solda gösterilen bu sarı küpün kapsadığı 

54
00:03:17,880 --> 00:03:22,310
27 rakam ile çarpın

55
00:03:22,310 --> 00:03:28,615
Sonra tüm bu sayıları toplayın ve bu size çıktınızdaki ilk rakamı verecek.

56
00:03:28,615 --> 00:03:34,700
Bir sonraki çıktıyı hesaplamak için bu küpü alın ve bir yana kaydırın

57
00:03:34,700 --> 00:03:37,190
ve 27 çarpımı tekrardan yapın.

58
00:03:37,190 --> 00:03:40,375
27 sayıyı toplayın

59
00:03:40,375 --> 00:03:42,545
ve bu size sonraki çıktıyı veriyor.

60
00:03:42,545 --> 00:03:44,465
Bir sonraki sayı için yapın,

61
00:03:44,465 --> 00:03:45,647
bir sonraki konum için yapın

62
00:03:45,647 --> 00:03:49,520
bu size 3. çıktıyı veriyor ve bu şekilde devam ediyor. Bu size 4. çıktıyı veriyor.

63
00:03:49,520 --> 00:03:54,080
Sonra bir satır aşağıya ve bir sonrakine,

64
00:03:54,080 --> 00:03:55,930
bir sonrakine, bir sonrakine

65
00:03:55,930 --> 00:03:58,760
ve böyle gidiyor, siz fikri anladınız

66
00:03:58,760 --> 00:04:02,080
en sonuna kadar gidiyor

67
00:04:02,080 --> 00:04:09,090
Son çıktınızı alacağınız konum burası.

68
00:04:09,090 --> 00:04:10,741
Peki, bu ne yapmanıza imkan sağlıyor ?

69
00:04:10,741 --> 00:04:12,775
İşte bir örnek.

70
00:04:12,775 --> 00:04:15,170
Bu filtre 3 x 3 x 3

71
00:04:15,170 --> 00:04:20,455
Eğer görüntünün kırmızı kanalındaki kenarları tespit etmek istiyorsanız

72
00:04:20,455 --> 00:04:24,990
ilk fitreniz şöyle olabilir, 1, 1, 1, 

73
00:04:24,990 --> 00:04:27,840
-1, -1, -1, her zaman olduğu gibi

74
00:04:27,840 --> 00:04:31,385
ve yeşil kanalı tamamen 0 yapın

75
00:04:31,385 --> 00:04:35,120
ve mavi filtreyi tamamen 0 yapın

76
00:04:35,120 --> 00:04:42,410
Eğer 3 x 3 x 3 filtrenizi oluşturmak için bu 3 yığınınız varsa

77
00:04:42,410 --> 00:04:46,040
o zaman bu filtre yalnızca kırmızı kanaldaki

78
00:04:46,040 --> 00:04:49,720
dikey kenarları tespit eder.

79
00:04:49,720 --> 00:04:54,950
Alternatif olarak, dikey kenarın hangi renkte olduğunu umursamıyor iseniz,

80
00:04:54,950 --> 00:04:58,871
o zaman bunun gibi bir filtreniz olabilir.

81
00:04:58,871 --> 00:05:01,520
her 3 kanalda da

82
00:05:01,520 --> 00:05:02,800
1, 1, 1, - 1, -1, -1

83
00:05:02,800 --> 00:05:04,714
olan

84
00:05:04,714 --> 00:05:08,791
Böylece bu ikinci alternatifin parametrelerini ayarlayarak,

85
00:05:08,791 --> 00:05:10,980
herhangi bir renkte kenarları tespit eden

86
00:05:10,980 --> 00:05:12,710
3 x 3 x 3'lük

87
00:05:12,710 --> 00:05:15,935
bir kenar dedektörü olur.

88
00:05:15,935 --> 00:05:19,460
Ve bu parametrelerin farklı seçenekleriyle

89
00:05:19,460 --> 00:05:24,280
3 x 3 x 3 farklı özellik detektörleri elde edebilirsiniz.

90
00:05:24,280 --> 00:05:26,320
Bilgisayarlı görüdeki uzlaşıma göre, 

91
00:05:26,320 --> 00:05:31,790
Belirli bir yükseklikte, belirli bir genişlikte

92
00:05:31,790 --> 00:05:33,440
ve belirli sayıda kanalınız olan bir girdiniz olduğunda

93
00:05:33,440 --> 00:05:36,200
filtreniz farklı bir yüksekliğe

94
00:05:36,200 --> 00:05:39,542
farklı bir genişliğe ancak aynı sayıda kanala sahip olacaktır.

95
00:05:39,542 --> 00:05:44,780
Ve teoride sadece kırmızı kanala bakan

96
00:05:44,780 --> 00:05:50,776
veya sadece yeşil ve mavi kanala bakan filtreler olabilir.

97
00:05:50,776 --> 00:05:54,565
Ve tekrardan, şuna dikkat edin

98
00:05:54,565 --> 00:06:00,793
6 x 6 x 3'lük bir yığını(volume), 3 x 3 x 3'lük ile evriştirdiğinizde(convolving)

99
00:06:00,793 --> 00:06:07,434
bu size 4 x 4'lük iki boyutlu bir çıktı veriyor.

100
00:06:07,434 --> 00:06:10,629
Artık yığınlar(volumes) üzerinde nasıl evrişim(conv.) yapıldığını biliyorsunuz

101
00:06:10,629 --> 00:06:17,125
evrişimsel sinir ağlarını inşa etmek için çok önemli son bir fikir daha var

102
00:06:17,125 --> 00:06:20,550
Ya sadece dikey kenarları tespit etmek istemiyorsak ?

103
00:06:20,550 --> 00:06:23,550
Ya hem dikey hem de yatay kenarları tespit etmek istersek ?

104
00:06:23,550 --> 00:06:27,080
ve belki 45 derecedeki kenarları veya 70 derecedeki kenarları da istersek

105
00:06:27,080 --> 00:06:32,189
başka bir deyişle, birden fazla filtreyi aynı zamanda kullanmak istersek ? 

106
00:06:32,189 --> 00:06:35,640
Burada önceki slayttan aldığımız resim var

107
00:06:35,640 --> 00:06:38,380
6 x 6 x 3'lük bir yığını(volume), 3 x 3 x 3'lük ile evriştirmiştik.

108
00:06:38,380 --> 00:06:39,717
4 x 4'lük çıktı almıştık

109
00:06:39,717 --> 00:06:42,420
ve belki bu bir dikey kenar detektörü,

110
00:06:42,420 --> 00:06:46,023
veya başka bir özelliği tespit etmeyi öğrenmiş.

111
00:06:46,023 --> 00:06:52,950
Şimdi, bu turuncumsu renk ile gösterilen ikinci bir filtre, 

112
00:06:52,950 --> 00:07:00,563
yatay kenar detektörü olabilir.

113
00:07:00,563 --> 00:07:05,657
Belki bu ilk filtre ile evriştirmek(convolving) size bu ilk 4 x 4 çıktıyı veriyor.

114
00:07:05,657 --> 00:07:13,565
ve bu ikinci filtre ile evriştirmek farklı bir 4 x 4 çıktı veriyor

115
00:07:13,565 --> 00:07:16,800
Ve sonra da bu iki 4 x 4 çıktıyı alıp

116
00:07:16,800 --> 00:07:20,770
önce bu birinciyi alıp öne koyun

117
00:07:20,770 --> 00:07:25,069
ve ikinci filtrenin çıktısını da alıp, buraya çizeyim,

118
00:07:25,069 --> 00:07:27,870
arkasına koyalım

119
00:07:27,870 --> 00:07:29,465
Bu ikisini istifleyerek

120
00:07:29,465 --> 00:07:35,970
4 x 4 x 2 bir çıktı yığını(volume) elde ederiz, değil mi ?

121
00:07:35,970 --> 00:07:39,900
Ve bu yığını sanki bir kutu düşünebilirsiniz

122
00:07:39,900 --> 00:07:41,710
Sanırım böyle gözükür.

123
00:07:41,710 --> 00:07:45,620
Yani bu 4 x 4 x 2'lik çıktı,

124
00:07:45,620 --> 00:07:49,740
6 x 6 x 3'lük görüntüye

125
00:07:49,740 --> 00:07:54,885
2 farklı 3 x 3'lük filtre uygulanmasının

126
00:07:54,885 --> 00:07:57,870
iki tane 4 x 4 çıktı üretmesi ve bunların istiflenmesiyle

127
00:07:57,870 --> 00:08:02,093
oluşturulmuştur.

128
00:08:02,093 --> 00:08:07,830
Ve buradaki iki, 2 farklı filtre kullanmamızdan kaynaklanıyor.

129
00:08:07,830 --> 00:08:14,320
Hadi boyutları özetleyelim, 

130
00:08:14,320 --> 00:08:19,570
Eğer n x n x n_c boyutlu görüntünüz var ise

131
00:08:19,570 --> 00:08:22,975
örneğin, burada 6 x 6 x 3 var,

132
00:08:22,975 --> 00:08:26,960
(n_c kanal sayısını gösteriyor)

133
00:08:26,960 --> 00:08:31,675
buna f x f evrişim uygularsak ve tekrardan

134
00:08:31,675 --> 00:08:34,645
bu aynı n_c olmalı yani bu

135
00:08:34,645 --> 00:08:38,360
3 x 3 x 3

136
00:08:38,360 --> 00:08:45,180
ve uzlaşıma göre bu ve bu aynı rakam olmak zorunda.

137
00:08:45,180 --> 00:08:52,150
Sonra, n-f+1 x n-f+1

138
00:08:52,150 --> 00:08:59,970
n-f+1 x n-f+1 x n_c' 

139
00:08:59,970 --> 00:09:02,314
aslında bu bir sonraki katmanın kanal sayısı

140
00:09:02,314 --> 00:09:06,850
bu kullandığınız filtre sayısı

141
00:09:06,850 --> 00:09:11,895
Yani bizim örneğimizde 4 x 4 x 2 olur.

142
00:09:11,895 --> 00:09:16,335
2 adım(stride) kullandığımızı ve dolgulama (padding) kullanmadığımızı varsayarak yazdım.

143
00:09:16,335 --> 00:09:19,270
Ancak farklı bir adım(stride) veya dolgulama(padding) kullansaydınız

144
00:09:19,270 --> 00:09:22,855
bu n-f+1 önceki videolarda gördüğümüz gibi

145
00:09:22,855 --> 00:09:26,245
olağan bir şekilde etkilenecekti.

146
00:09:26,245 --> 00:09:29,280
Yani yığın(volume) üzerinde evrişim fikri,

147
00:09:29,280 --> 00:09:31,519
çok güçlü olduğu ortaya çıktı.

148
00:09:31,519 --> 00:09:34,350
Sadece küçük bir kısmı, 

149
00:09:34,350 --> 00:09:38,080
doğrudan 3 kanal ile RGB görüntüler üzerinde çalışabilirsiniz.

150
00:09:38,080 --> 00:09:40,485
Ancak bundan daha da önemlisi

151
00:09:40,485 --> 00:09:43,420
artık dikey ve yatay kenarlar gibi 2 özelliiği tespit edebilirsiniz,

152
00:09:43,420 --> 00:09:46,534
veya 10, veya 128

153
00:09:46,534 --> 00:09:49,365
veya belki birkaç yüz tane farklı özellik.

154
00:09:49,365 --> 00:09:51,390
Ve çıktının da kanal sayısı

155
00:09:51,390 --> 00:09:58,405
tespit ettiğiniz özelliklerin(features) sayısına eşit olacak.

156
00:09:58,405 --> 00:10:00,995
Gösterimsel bir not olarak, 

157
00:10:00,995 --> 00:10:07,125
Kanal sayısını bu son boyutu göstermek için kullanıyorum, literatürde

158
00:10:07,125 --> 00:10:14,620
insanlar buna aynı zamanda bu 3 boyutlu yığının(volume) derinliği de diyorlar. İki gösterim de

159
00:10:14,620 --> 00:10:17,255
kanallar veya derinlik, literatürde çoğunlukla kullanılıyor.

160
00:10:17,255 --> 00:10:19,375
Ancak ben derinliği daha kafa karıştırıcı buluyorum

161
00:10:19,375 --> 00:10:22,855
çünkü genellikle sinir ağının deriniliği hakkında da konuşuluyor.

162
00:10:22,855 --> 00:10:26,885
Yani bu videolarda kanal terimini

163
00:10:26,885 --> 00:10:31,966
bu filtrelerin 3. boyutu olarak kullanacağım.

164
00:10:31,966 --> 00:10:36,545
Artık yığınlar(volumes) üzerinde nasıl evrişim(conv.) yapıldığını biliyorsunuz

165
00:10:36,545 --> 00:10:41,595
Artık evrişimsel sinir ağlarının(CNN) 1 katmanını oluşturmak için hazırsınız.

166
00:10:41,595 --> 00:10:44,000
Bir sonraki videoda bunu nasıl yapacağımızı görelim...