1
00:00:00,000 --> 00:00:03,150
畳み込みネットワークについてのコースへようこそ

2
00:00:03,150 --> 00:00:05,430
コンピュータ ビジョンは ディープ ラーニングのおかげで

3
00:00:05,430 --> 00:00:08,055
急激に発達した分野の1つだ

4
00:00:08,055 --> 00:00:11,490
ディープ ラーニング コンピュータ ビジョンは 現在 車の自動運において

5
00:00:11,490 --> 00:00:15,320
他の車や歩行者を見つけ それらを避けるのに役立っている

6
00:00:15,320 --> 00:00:18,825
顔認識は 以前に比べ大幅に良くなり

7
00:00:18,825 --> 00:00:21,660
多分 あなた方の何人かは もう直ぐ もしくは既に

8
00:00:21,660 --> 00:00:23,360
自分の顔を使って 電話のロックを解除できたり

9
00:00:23,360 --> 00:00:25,925
ドアをロック解除できたりするだろう

10
00:00:25,925 --> 00:00:27,435
そして あなたの携帯電話を見れば

11
00:00:27,435 --> 00:00:29,680
あなたに 食べ物やホテルの写真 もしくは 素敵な風景写真を

12
00:00:29,680 --> 00:00:32,790
見せてくれる多くのアプリがあるでしょ

13
00:00:32,790 --> 00:00:34,980
そして そのようなアプリを作っている会社の中には

14
00:00:34,980 --> 00:00:37,890
最も魅力的で 最も美しい写真や 最も価値のある写真を

15
00:00:37,890 --> 00:00:40,475
見せるのに ディープラーニングを使っている所がある

16
00:00:40,475 --> 00:00:45,410
そして 私は ディープラーニングが 新しい種類の芸術を想像することさえ可能にする と考えている

17
00:00:45,410 --> 00:00:48,420
私が コンピュータ ビジョン用のディープラーニングにわくわくし

18
00:00:48,420 --> 00:00:51,690
そして あなたも そうなるだろうと思う理由が２つある

19
00:00:51,690 --> 00:00:57,445
1つ目は コンピュータ ビジョンにおける急激な進歩が

20
00:00:57,445 --> 00:00:59,990
数年前には不可能であった 画像に対する 全く新しいアプリケーションを可能にするからだ

21
00:00:59,990 --> 00:01:01,230
そして これらのツールを学ぶことで 多分

22
00:01:01,230 --> 00:01:06,030
あなたは そのような新しい製品やアプリを発明できるようになる

23
00:01:06,030 --> 00:01:09,775
2つ目は あなたが コンピュータ ビジョン システムそれ自身を作ることがないとしても

24
00:01:09,775 --> 00:01:13,740
私が見てきた コンピュータ ビジョン研究コミュニティは

25
00:01:13,740 --> 00:01:15,930
新しく出てきたニューラルネットワークの構造やアルゴリズムを使うのに

26
00:01:15,930 --> 00:01:18,375
想像的かつ発明的で

27
00:01:18,375 --> 00:01:23,010
他の分野と相互交流をすることを望んでいる

28
00:01:23,010 --> 00:01:25,290
例えば 私が 音声認識に取り組んでいた時

29
00:01:25,290 --> 00:01:27,840
時々 コンピュータ ビジョンのアイディアからひらめきを得

30
00:01:27,840 --> 00:01:31,270
それらを 音声語文に活かした

31
00:01:31,270 --> 00:01:33,570
あなたが コンピュータ ビジョンに取り組むことが無くても

32
00:01:33,570 --> 00:01:37,165
このコースで学ぶ いくつかのアイデアは 

33
00:01:37,165 --> 00:01:41,244
アルゴリズムや構造の助けになるだろう

34
00:01:41,244 --> 00:01:43,290
では始めましょう。

35
00:01:43,290 --> 00:01:48,570
これが このコースで学ぶコンピュータ ビジョン問題の例だ

36
00:01:48,570 --> 00:01:50,870
画像分類で 既に見てきたように

37
00:01:50,870 --> 00:01:52,650
それは 画像認識とも呼ばれるが

38
00:01:52,650 --> 00:01:56,845
入力を64×64画像のような形で受け取り それを識別する

39
00:01:56,845 --> 00:01:58,615
それは ネコか？

40
00:01:58,615 --> 00:02:02,870
もう1つのコンピュータ ビジョン問題の例は 物体検出だ

41
00:02:02,870 --> 00:02:04,695
もし 自動運転車を作っているなら

42
00:02:04,695 --> 00:02:08,180
恐らく この画像の中で 他の車の存在を認識するだけでは不十分だ

43
00:02:08,180 --> 00:02:12,640
そうではなく この画像中で 他の車の位置を認識する必要がある

44
00:02:12,640 --> 00:02:14,810
そして あなたの車が それらを避けられるようにする

45
00:02:14,810 --> 00:02:16,680
物体検出では 通常

46
00:02:16,680 --> 00:02:20,835
このような他の物体 つまり画像中の車 を識別するだけでなく

47
00:02:20,835 --> 00:02:23,760
それらの周りを箱で括る必要がある

48
00:02:23,760 --> 00:02:29,100
画像のどこに これらの物体があるかを検出するために いくつかの手段がある

49
00:02:29,100 --> 00:02:30,990
そして 分かるだろうけど この例では

50
00:02:30,990 --> 00:02:34,650
それらが 同一画像中に 複数の車があるということが有り得る

51
00:02:34,650 --> 00:02:38,515
また それぞれが あなたの車と それぞれの距離にある

52
00:02:38,515 --> 00:02:42,560
別の例をだそう。ニューラル スタイル変換は より楽しいだろう

53
00:02:42,560 --> 00:02:44,089
一枚の写真があるとしよう

54
00:02:44,089 --> 00:02:49,305
そして この写真を異なるスタイルで描き直したいとする

55
00:02:49,305 --> 00:02:50,740
そこで ニューラル スタイル変換だ

56
00:02:50,740 --> 00:02:52,290
あなたは 内容画像と

57
00:02:52,290 --> 00:02:54,245
スタイル画像を持っている

58
00:02:54,245 --> 00:02:56,370
右側の画像は 確かにピカソだ

59
00:02:56,370 --> 00:02:59,200
あるニューラル ネットワークは これらを一緒にして 画像を描き直す

60
00:02:59,200 --> 00:03:02,621
左側の内容画像を

61
00:03:02,621 --> 00:03:05,605
右側の画像のスタイルで だ

62
00:03:05,605 --> 00:03:08,730
そして 下にある画像を得る

63
00:03:08,730 --> 00:03:12,395
このようなアルゴリズムは 新しい種類の芸術創造を可能にしている

64
00:03:12,395 --> 00:03:15,980
このコースでは 同様のことを 自身で行うための方法を学ぶ

65
00:03:15,980 --> 00:03:21,185
コンピュータ ビジョン問題の挑戦の1つに 入力がとても大きくなり得る ということがある

66
00:03:21,185 --> 00:03:23,040
例えば 前のコースで

67
00:03:23,040 --> 00:03:25,185
64×64の画像を処理した

68
00:03:25,185 --> 00:03:29,030
つまり 64×64×3だ。3つの色チャンネルがあるから

69
00:03:29,030 --> 00:03:32,490
これを 掛け合わせると 12288だ

70
00:03:32,490 --> 00:03:37,115
つまり 入力特徴量xは 12288次元を持つ

71
00:03:37,115 --> 00:03:38,640
これは それほど悪くはない

72
00:03:38,640 --> 00:03:42,105
しかし 64×64は 実際には 非常に小さな画像だ

73
00:03:42,105 --> 00:03:44,085
もし もっと大きな画像を扱うとしたら

74
00:03:44,085 --> 00:03:48,615
多分 それは 1000ピクセル×1000ピクセル画像で

75
00:03:48,615 --> 00:03:51,095
ちょうど １メガ ピクセルだ

76
00:03:51,095 --> 00:03:57,530
ただし 入力特徴量の次元は 1000×1000×3

77
00:03:57,530 --> 00:03:59,640
なぜなら ３つのRGBチャンネルがあるから

78
00:03:59,640 --> 00:04:02,382
よって 次元数は300万となる

79
00:04:02,382 --> 00:04:04,590
小さいスクリーンを使っていたら

80
00:04:04,590 --> 00:04:05,790
良く分からないかもしれないが

81
00:04:05,790 --> 00:04:08,440
これは 低解像度の64×64画像で

82
00:04:08,440 --> 00:04:11,477
これは 高解像度の1000×1000画像だ

83
00:04:11,477 --> 00:04:14,190
しかし もし300万個の入力特徴量があると

84
00:04:14,190 --> 00:04:21,155
ここのXは 300万次元ということになる

85
00:04:21,155 --> 00:04:27,525
そして 最初の隠れ層に1000ユニットあるとしたら

86
00:04:27,525 --> 00:04:36,240
行列W[1]の重みの総数は

87
00:04:36,240 --> 00:04:42,620
コース１や２で扱った 標準的な全結合ネットワークを使う場合

88
00:04:42,620 --> 00:04:50,365
この行列は 1000×300万 行列になる

89
00:04:50,365 --> 00:04:55,130
なぜなら Xが300万次元の実数(R)だから

90
00:04:55,130 --> 00:04:57,793
3Mは 300万を表す

91
00:04:57,793 --> 00:05:00,485
これは この行列が30億個のパラメータを持つことを意味する

92
00:05:00,485 --> 00:05:05,140
それは とても とても 大きい

93
00:05:05,140 --> 00:05:06,820
そして そんな多くのパラメータでは

94
00:05:06,820 --> 00:05:12,040
ニューラル ネットワークを 過学習から防ぐのに 充分なデータを得るのが難しい

95
00:05:12,040 --> 00:05:16,100
そして また 30億パラメータのニューラル ネットワークを学習させるのに必要な

96
00:05:16,100 --> 00:05:20,870
計算やメモリへの要求は 満たすことができない

97
00:05:20,870 --> 00:05:22,732
しかし コンピュータ ビジョン アプリケーションに対し

98
00:05:22,732 --> 00:05:25,710
僅かな量の画像しか使えなくて 立ち往生したくはない

99
00:05:25,710 --> 00:05:27,880
大量の画像を使いたい

100
00:05:27,880 --> 00:05:32,020
そうするために 畳み込み処理を実装する必要がある

101
00:05:32,020 --> 00:05:35,955
それは 畳み込みニューラルネットワークの基本構成要素だ

102
00:05:35,955 --> 00:05:37,135
どういうことか 見ていこう

103
00:05:37,135 --> 00:05:39,505
そして 次のビデオで どうやって実装するかをみよう

104
00:05:39,505 --> 00:05:40,915
そして 例を使い

105
00:05:40,915 --> 00:05:43,410
畳み込みを説明しよう