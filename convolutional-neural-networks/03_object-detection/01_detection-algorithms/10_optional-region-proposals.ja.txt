物体検出の文献を見れば 領域候補と呼ばれる一連のアイデアが見つかる それは コンピュータビジョンにも 大きな影響を与えてきた このビデオをオプションにしたかったのは 私が 領域候補のアルゴリズムを あまり多くは 使わないからだ しかし それにも関わらず ずっと影響力を持ち続けていて あなた自身の仕事で 出会うアイデアかもしれないからだ 見てみよう スライディング ウィンドウのアイデアを思い出せば 訓練を 一斉射撃で行うだろう これら異なるウィンドウ全てに跨り 検出器を走らせ 車 歩行者 もしくは バイクがあるかを調べる そして アルゴリズムを畳み込んで 動かすことができた ただし このアルゴリズムの欠点は 明らかに物体が存在しない沢山の領域をも一斉射撃することだ この下の四角は ほとんど空っぽだ ここには 明らかに 分類すべきものが無い この四角で走らせても そうだ そこには 何も興味を引くものは無いようだ Russ Girshik, Jeff Donahue, Trevor Darrell, そして Jitendra Malik が 論文で 提供したのは このスライドの下に引用先を示したけど R-CNN と呼ばれるアルゴリズムだ それは "Regions with Convolution Networks" もしくは "Regions with CNNs" を表している それは 一斉射撃を行う意味のある 少数の領域を抽出しようとするものだ つまり 全てのウィンドウで 実行するのではなく 代わりに 少数のウィンドウを選んで 少数のウィンドウでのみ 盛大に一斉射撃を行う 候補領域を 出すには セグメンテーション アルゴリズムと呼ばれるアルゴリズムを実行する そうすると 右のような出力が得られる これにより 物体で有り得る部分を識別する 例えば セグメンテーション アルゴリズムは ここで模様を見つける そうしたら その境界箱を選んで こう言うんだ "この模様に一斉射撃を行おう" ここに小さい緑があるようだ ここに模様が見つかるので この四角形に一斉射撃を行えば 興味を引くものがあるかどうか分かる この例では この青い模様 これに一斉射撃を行うと 上手くいけば 歩行者が見つかる それから この薄いシアンの模様で行なえば 車が 見つかるかもしれないし 見つからないかもしれない これの詳細は セグメンテーション アルゴリズムと呼ばれているが 実行すると 多分2000個くらいの模様を見つけけるかもしれない その2000個に境界箱を置き その2000の模様にだけ 一斉射撃を行うんだ これで 場所の数は とても少なくなるだろう 大規模一斉射撃を行う場所の数がね 画像全体を通した 全ての位置で 行うのよりもね これは特別なケースだ 一斉射撃を行うのは 正方形の領域でだけではない 歩行者を見つけるのに 背の高い痩せた領域で行なったり 車を見つけるのに 幅広の太った領域で行なったり
同様に様々な大きさで行なったりする これが R-CNN もしくは "Region with CNN" だ "Region with CNN" が持つアイデアだ さて R-CNN アルゴリズムは とても遅いことが分かる このアルゴリズムを速くするために 一連の仕事が為されてきた 基本のR-CNN アルゴリズムは 候補領域を 何らかのアルゴリズムで選んで それから 候補領域に１度に１つずつ射撃を行う そして 各領域それぞれに ラベルを出力する 車が有るかか？ 歩行者が居るか？ そこに バイクはあるか？ それから さらに 境界箱も出力する もし その領域に 物体が実際にあるなら 正確な境界箱を得られる 明らかにしておくと R-CNN アルゴリズムは 所与の境界箱には頼らないんだ それ自身 境界箱を出力する bx by bh bw より正確な境界箱を得るには 画像セグメンテーション アルゴリズムで得られる模様は どんな大きさにでも囲える それは とても正確な境界箱になるだろう R-CNN アルゴリズムの欠点は 実際には とても遅いということだ 何年間も R-CNN アルゴリズムは ちょっとずつ改良されてきた Russ Girshik は Fast R-CNN アルゴリズムを提案した それは 基本的には R-CNN アルゴリズムだけど スライディング ウィンドウの畳み込み処理を行う 元の実装では 領域の分類を １度に１つ行っていた Fast R-CNN では スライディング ウィンドウの畳み込み処理を使う それは 今週の４番目のビデオで見たアイデアと 大体同じだ それで R-CNN をかなり速くする Fast R-CNN アルゴリズムにも １つ問題があった 候補領域を集約するステップが まだ とても遅いことだ そこで 別のグループ Shaoqing Ren, Kaiming He, Ross Girshick, そして Jian Son が Faster R-CNN アルゴリズムを提案した それは 畳み込みニューラルネットワークを 候補領域の模様を取り出すための伝統的なセグメンテーション アルゴリズムの代わりに使った それにより Fast R-CNN アルゴリズムよりも もっと速くなった ただし 私が思うに Faster R-CNN アルゴリズムは 殆どの実装が YOLO アルゴリズムよりも かなり遅いままだ 領域候補のアイデアは コンピュータ ビジョンにおいて 多くの影響を及ぼしてきた これらのアイデアを知っておいてほしい
なぜなら 他の人が これらのアイデアを使っているのを見るからね 私の場合は 個人な意見だけど コンピュータ ビジョン研究コミュニティ全体としての意見ではないけど 領域候補は 興味深いアイデアだけど ２つのステップが無いと思う 最初は 領域候補 そして 一斉射撃 それらを 全て同時に行えるということを YOLO "You Only Look Once" アルゴリズムと同じようにね それは 長期的に見た場合 より有望に思える ただし これは 私の個人的な見解で 必ずしも コンピュータ ビジョン研究コミュニティ全体の意見じゃない だから そのまま鵜呑みには しないでね でも R-CNN のアイデアは 他の人が 使っているのに出くわすことがあるだろう だから 他の人のアルゴリズムを理解するには 学んでおく価値のあるものだ さーて 物体検出についての 今週の教材は これで終わり 今週のプログラミング演習での作業を楽しんでほしい 次週 会えるのを楽しみにしているよ