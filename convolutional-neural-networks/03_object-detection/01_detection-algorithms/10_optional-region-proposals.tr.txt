nesne tespit literatürüne bakıldığında bölge önerileri olarak adlandırılan, bilgisayarlı görü alanında da etkili olmuş birtakım fikirlerle karşılaşıyoruz. bu videoyu seçmeli yapmayı tercih ettim çünkü bölge öneri algoritmalarını sıklıkla kullanmıyorum, ama yine de etkili çalışmaların yapıldığı bir alan ve kendi çalışmalarınızda karşınıza çıkabilecek fikirler barındırıyor. pencere kaydırma fikrimizi hatırlayacak olursanız, eğitilmiş bir sınıflandırıcıyı alıp, tüm farklı pencerelerde çalıştırıp;araba, yaya, ya da motorsiklet olup olmadığını tespit etmeye çalışıyorduk. algoritmayı evrişimsel olarak çalıştırabilirsiniz fakat aşağı tarafta algoritma açıkça hiç obje olmayan bölgeleri sınıflandırmaya çalışıyor. bu aşağıdaki dikdörtgen neredeyse bomboş açıkça görüyoruz ki sınıflandırmaya değer bir şey yok ve belki aynı zamanda algortima şu dikdörtgende de çalışıyor ki yine kayda değer bir obje yok. Russ Girshik,Jeff Donahue,Trevor Darrell ve Jitendra Malik' in aşağıda kaynak gösterilen makalede önerdiği fikir, ve Jitendra Malik' in aşağıda kaynak gösterilen makalede önerdiği fikir, R-CNN diye adlandırdığımız "bölgelesel-evrişimsel yapay sinir ağı" na karşılık gelen algoritma, R-CNN diye adlandırdığımız "bölgelesel-evrişimsel yapay sinir ağı" na karşılık gelen algoritma, ve yapmaya çalıştığı şey de convNet(evrişimsel YSA) sınıflandırıcısını eğitmek için uygun bölgeleri seçmek. Yani, kayan pencereler ile her bölgeyi taramak yerine sadece bir kaç bölge seçiyorsunuz ve sınıflandırıcınızı o bölgelerde çalıştırıyorsunuz. sadece bir kaç bölge seçiyorsunuz ve sınıflandırıcınızı o bölgelerde çalıştırıyorsunuz. bölgesel önerilerin uygulanış şekli, bölütleme algoritmasını verdiğimiz -sağda da çıktısını görüyorsunuz- algoritmaları kullanarak neler obje olabilir onu tespit etmek. Misal,bölütleme algortimamız burada bir leke buluyor. Siz de bu sınırları belli dörtgeni alıp "sınıflandırıcıyı bu bölgede çalıştıralım" diyebilirsiniz. Şu yeşil kısım da bi leke görüntüsü veriyor bu bölgede de sınıflandırıcımızı kayda değer bi obje olup olmadığını görmek için çalıştırabiliriz Ve bu durumda bu mavi leke, eğer sınıflandırıcıyı çalıştırırsanız, bir yaya tespit edeceksiniz veya şu açık mavi kısımda çalıştırırsanız, belki bi araba tespit edebilirsiniz,emin değilim. detaylara inecek olursak, bunu bölütleme algoritması olarak adlandırıyoruz ve yaptığı şey sizin için yaklaşık ikibin leke bulup, bu lekeleri sınırlayan dörtgenler çizmek ve sınıflandırıcıyı sadece bu iki bin dörtgenin üstünde çalıştırmak, tüm resim boyunca çalıştırmanız gereken convNet sınıflandırıcınızın üzerinde çalışacağı alan sayısı bu sayede çok daha az olabilir. tüm resim boyunca çalıştırmanız gereken convNet sınıflandırıcınızın üzerinde çalışacağı alan sayısı bu sayede çok daha az olabilir. tüm resim boyunca çalıştırmanız gereken convNet sınıflandırıcınızın üzerinde çalışacağı alan sayısı bu sayede çok daha az olabilir. Özellikle de convNet'inizi sadece kare şeklindeki bölgelerde değil de yaya tespit etmek için ince uzun dörtgenler üzerinde ya da araba tespit etmek için ksıa kalın bölgeler üzerinde ve diğer bir çok ölçekte çalıştırıyorsanız. R-CNN ya da bölgesel CNN böyle bir şey. R-CNN ya da bölgesel CNN böyle bir şey. Görüldü ki R-CNN algoritması bu şekliyle bir hayli yavaş, bunun üzerine nasıl hızlandırılabileceği üzerine bir takım çalışmalar yapıldı. Temel bir RCNN algoritması bölgeler önerir ve ardından o bölgeleri birer birer sınıflandırır. Temel bir RCNN algoritması bölgeler önerir ve ardından o bölgeleri birer birer sınıflandırır. ve her bölge için bir çıktı verir. ve her bölge için bir çıktı verir. araba var mı, yaya var mı? ordaki bir motorsiklet mi? ve aynı zamanda çıktı olarak bir de sınırlayıcı bir dörtgen veriyor. bu şekilde daha doğru leke sınırlayıcı dörtgenler elde ediyoruz, daha da net ifade edecek olursak R-CNN algoritması verilen sınırlayıcı dörtgene hemen güvenmiyor, aynı zamanda bi sınırlayıcı dörtgen sonucu da veriyor, -B X B Y B H B W- daha doğru sınırlayıcı dörtgenler ve bölütleme algoritmasının verdiği lekeyi sınırlayan bi şekil elde etmek için. dolayısıyla gayet doğru sınırlayıcı dörtgenler elde edebiliyoruz. R-CNN algortitmasının bir dezavantajı oldukça yavaş olmasıydı, geçen süre zarfında R-CNN algoritmasında bir kaç ilerleme kaydedildi Russ Gieshik "hızlı R-CNN" algoritmasını öne attı, bu temelde,pencere kaydırma fikrinin evrişimsel olarak uygulandığı bir RCNN algoritmasıydı. bu temelde,pencere kaydırma fikrinin evrişimsel olarak uygulandığı bir RCNN algoritmasıydı. asıl uygulamada birim zamanda bir bölge sınıflandırılıyordu. Yani Hızlı R-CNN algoritmasında  kayan pencerelerin evrişimsel uygulamasını kullanılıyor. ve bu da kabaca bu haftanın dördüncü videosunda gördüğümüz fikre benzer. ve bu R-CNN imizi biraz da olsa hızlandırıyor. "Hızlı RCNN" ile ilgili bir problem vardı ki o da bölge önermek için yapılan kümeleme adımı hala yavaştı ve farklı bi grup, Shaoqing Ren, Kaiming He, Ross Girshick ve Jian Son, "daha hızlı RCNN" algoritmasını öne sürdüler. Bölgelerdeki lekeyi tespit etmek için geleneksel bölütleme yöntemleri yerine evrişimsel yapay sinir ağlarını kullanıyorlardı. bu algoritmanın biraz daha hızlı hale gelmesine sebep oldu, çoğu uygulaması genellikle YOLO'dan daha yavaş olsa da. çoğu uygulaması genellikle YOLO'dan daha yavaş olsa da. bölgesel öneri fikri ,şimdiye kadar kadar bilgisayarlı görü alanında ciddi bir etki yarattı. ve benim bu fikirleri öğretmek istememin sebebi, hala bu yöntemlerin uygulandığını görecek olmanız. kendi adıma konuşacak olursam,şahsi fikrim, ,bilgisayarlı görü alanında araştırma yapan insanlarının tamamının fikrini yansıtmayacaktır, bence bölgesel öneri ilginç bir fikir fakat iki adımdan oluşmayan -ilk önce bölgeyi bul sonra da sınıflandır- daha fazlasını aynı anda yapabilecek fikir YOLO'ya benzer bir şekilde bu bana uzun vadede daha umut verici bir doğrultu gibi gözüküyor fakat dediğim gibi bu benim kişisel fikrim, bilgisayarlı görü alanındaki araştırmacıların tamamını kapsamıyor,şüpheyle yaklaşmakta özgürsünüz. bilgisayarlı görü alanındaki araştırmacıların tamamını kapsamıyor,şüpheyle yaklaşmakta özgürsünüz. ama bence RCNN fikrini kullanan insanlara rastlayabilirsiniz. ama bence RCNN fikrini kullanan insanlara rastlayabilirsiniz. Öğrenmeye değerdi,bu şekilde başka algoritmaları daha iyi anlayabilirsiniz. Şu an nesne tespitinde bu haftanın materyalini bitirmiş olduk umarım bu haftanın sorularında uğraşırken keyif almışsınızdır. bir sonraki haftayı iple çekiyorum.