1
00:00:00,000 --> 00:00:05,040
那么该如何判断你的判断目标检测算法<br />是否有效

2
00:00:05,040 --> 00:00:10,234
这个视频里 你会学到一个函数<br />叫做交并比(Intersection Over Union)

3
00:00:10,234 --> 00:00:14,115
它既可以用来评价你的目标检测算法

4
00:00:14,115 --> 00:00:16,485
也可以用于，下个视频会说到的

5
00:00:16,485 --> 00:00:20,625
往目标检测算法中加入其他特征部分

6
00:00:20,625 --> 00:00:22,610
来进一步改善它

7
00:00:22,610 --> 00:00:25,495
让我们开始吧 在建立目标检测时

8
00:00:25,495 --> 00:00:28,920
你希望也能定位目标

9
00:00:28,920 --> 00:00:31,870
如果这是真实的边界框

10
00:00:31,870 --> 00:00:35,890
而你的算法输出的是紫色的这个边界框

11
00:00:35,890 --> 00:00:38,900
这个结果是好是坏呢

12
00:00:38,900 --> 00:00:44,610
交并比或者说是IoU函数做的就是

13
00:00:44,610 --> 00:00:53,650
它计算了这两个边界框的<br />交集除以并集的比率

14
00:00:53,650 --> 00:00:59,195
这两个边界框的并集是这块区域

15
00:00:59,195 --> 00:01:06,090
实际上就是这两个边界框<br />包含的所有区域

16
00:01:06,090 --> 00:01:11,580
而交集是这一小块区域

17
00:01:11,580 --> 00:01:18,850
交并比是指<br />先计算交集的大小

18
00:01:18,850 --> 00:01:22,598
也就是橙色区域的面积

19
00:01:22,598 --> 00:01:27,520
然后除以并集的面积

20
00:01:27,520 --> 00:01:30,430
也就是这个绿色区域

21
00:01:30,430 --> 00:01:34,195
按惯例 或者说计算机视觉领域的原则

22
00:01:34,195 --> 00:01:39,355
如果IoU大于0.5<br />你的结果就会被判断为正确的

23
00:01:39,355 --> 00:01:45,310
如果预测的和真实的边界框完美重合了

24
00:01:45,310 --> 00:01:47,054
IoU就会是1

25
00:01:47,054 --> 00:01:50,105
因为交集和并集是相同的

26
00:01:50,105 --> 00:01:55,195
但一般来说 只要IoU大于等于0.5

27
00:01:55,195 --> 00:01:59,685
结果就可以了<br />或者说看上去不错了

28
00:01:59,685 --> 00:02:03,880
而按照惯例<br />0.5很经常作为一个临界值

29
00:02:03,880 --> 00:02:10,130
来判断预测的边界框是否准确

30
00:02:10,130 --> 00:02:11,650
这只是一个常规值

31
00:02:11,650 --> 00:02:12,975
如果你想更严格一些

32
00:02:12,975 --> 00:02:14,790
你可以把准确的标准提高到

33
00:02:14,790 --> 00:02:19,845
仅当IoU大于等于0.6<br />或者别的数值

34
00:02:19,845 --> 00:02:21,570
IoU越高

35
00:02:21,570 --> 00:02:24,425
边界框就越准确

36
00:02:24,425 --> 00:02:27,625
因此 有一个衡量定位准确度的方法

37
00:02:27,625 --> 00:02:32,560
只需要数出算法准确检测<br />并定位一个目标的次数

38
00:02:32,560 --> 00:02:37,815
可以用这个来定义

39
00:02:37,815 --> 00:02:42,410
目标是否被准确地定位

40
00:02:42,410 --> 00:02:46,515
再重复一下<br />0.5只是人为选择的惯例

41
00:02:46,515 --> 00:02:49,535
背后并没有更深的理论依据

42
00:02:49,535 --> 00:02:54,640
你也可以选择其他的临界值<br />比如0.6 如果你想严格一些

43
00:02:54,640 --> 00:03:00,070
我有时还见过别人用更严的标准<br />像0.6甚至0.7

44
00:03:00,070 --> 00:03:04,100
几乎不会见到低于0.5的临界值

45
00:03:04,100 --> 00:03:08,065
那么 什么是IoU创立的初衷

46
00:03:08,065 --> 00:03:10,540
作为一个评估的方法

47
00:03:10,540 --> 00:03:14,080
来判断你的目标定位算法是否准确

48
00:03:14,080 --> 00:03:20,340
但更普遍地说 IoU是<br />两个边界框重叠程度的一个度量值

49
00:03:20,340 --> 00:03:22,430
当你有两个框时

50
00:03:22,430 --> 00:03:23,980
你可以计算交集

51
00:03:23,980 --> 00:03:29,040
计算并集 然后求两个面积的比值

52
00:03:29,040 --> 00:03:34,985
因此这也是一个方法<br />来衡量两个框的相近程度

53
00:03:34,985 --> 00:03:37,535
我们会再一次看到这个方法

54
00:03:37,535 --> 00:03:40,225
在下个视频中，当我们讨论非最大值抑制<br />(non-max suppression)时

55
00:03:40,225 --> 00:03:46,170
这就是IoU或者说是交并比

56
00:03:46,170 --> 00:03:50,720
别把IoU和欠条（I owe you）混淆了

57
00:03:50,720 --> 00:03:53,610
如果你借钱给某人<br />他们会给你写个欠条 上面写着

58
00:03:53,610 --> 00:03:55,940
我欠你(I owe U)多少钱<br />这也读作IoU 

59
00:03:55,940 --> 00:03:58,110
这是完全不同的概念

60
00:03:58,110 --> 00:04:03,111
但挺好玩的<br />这两个东西有相似的名字

61
00:04:03,111 --> 00:04:07,730
那么现在<br />了解了IoU或者说交并比的定义之后

62
00:04:07,730 --> 00:04:09,055
这里这个

63
00:04:09,055 --> 00:04:12,045
我会和你们讨论非最大值抑制（non-max suppression）

64
00:04:12,045 --> 00:04:16,770
这个工具可以用来<br />让YOLO的结果变得更理想

65
00:04:16,770 --> 00:04:18,470
让我们继续下一期教程