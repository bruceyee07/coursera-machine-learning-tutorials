1
00:00:00,000 --> 00:00:04,790
これまでに学んできた物体検出の 問題点の１つは

2
00:00:04,790 --> 00:00:08,870
それぞれの格子セルが たった１つの物体しか検出できないことだ

3
00:00:08,870 --> 00:00:12,500
１つの格子セルに 複数の物体を検出させたい場合はどうするのか？

4
00:00:12,500 --> 00:00:14,050
こうすることができる

5
00:00:14,050 --> 00:00:16,700
アンカーボックス というアイデアを使うことができる

6
00:00:16,700 --> 00:00:17,920
例を見る事から始めよう。

7
00:00:17,920 --> 00:00:20,990
このような画像があるとする

8
00:00:20,990 --> 00:00:22,460
そして この例では

9
00:00:22,460 --> 00:00:26,160
3 x 3 格子を使っていく

10
00:00:26,160 --> 00:00:31,190
歩行者の中心と 車の中心は

11
00:00:31,190 --> 00:00:37,340
ほぼ同じ場所にあって 両者は 同じ格子セルに紐付くだろう

12
00:00:37,340 --> 00:00:38,590
この格子セルは

13
00:00:38,590 --> 00:00:44,559
y 出力のこのベクトルでは ３つのクラスを検出するけど

14
00:00:44,559 --> 00:00:48,105
歩行者 車 バイクの３つを

15
00:00:48,105 --> 00:00:51,530
２つの検出は 出力できない

16
00:00:51,530 --> 00:00:55,545
だから 出力に ２つの内の１つを選ばなくてはならない

17
00:00:55,545 --> 00:00:57,297
アンカーボックスのアイデアを使って

18
00:00:57,297 --> 00:00:59,170
こんなことを行う

19
00:00:59,170 --> 00:01:03,129
アンカーボックス もしくは アンカーボックス形 と呼ばれる２つの異なる形を定義する

20
00:01:03,129 --> 00:01:08,015
それから 次に行うのは

21
00:01:08,015 --> 00:01:13,085
２つの予測を ２つのアンカーボックスに紐つけることができる

22
00:01:13,085 --> 00:01:15,585
一般的には もっと多くのアンカーボックスを使うだろう

23
00:01:15,585 --> 00:01:17,660
５つとか それ以上を

24
00:01:17,660 --> 00:01:20,060
でも このビデオでは

25
00:01:20,060 --> 00:01:23,660
説明を簡単にするため ２つのアンカーボックスを使う

26
00:01:23,660 --> 00:01:27,680
それから 分類ラベルを定義する

27
00:01:27,680 --> 00:01:30,190
左のこのベクトルの代わりに

28
00:01:30,190 --> 00:01:33,170
これを２回繰り返す

29
00:01:33,170 --> 00:01:35,120
よって Pc

30
00:01:35,120 --> 00:01:39,610
bx by bh bw

31
00:01:39,610 --> 00:01:46,047
c1 c2 c3
これらは アンカーボックス１に紐付く８つの出力だ

32
00:01:46,047 --> 00:01:50,355
それから これを繰り返す

33
00:01:50,355 --> 00:01:51,905
Pc bx から続けて

34
00:01:51,905 --> 00:01:59,490
c1 c2 c3
アンカーボックス２に紐付く 別の８つの出力だ

35
00:01:59,490 --> 00:02:01,820
歩行者の形は

36
00:02:01,820 --> 00:02:06,012
アンカーボックス２の形よりも アンカーボックス１のに より似ているので

37
00:02:06,012 --> 00:02:13,730
この８つの数を使って Pcが１の時のことを 表現できる

38
00:02:13,730 --> 00:02:15,020
そう 歩行者がいる

39
00:02:15,020 --> 00:02:20,739
これらを使って 歩行者の周りの 境界箱を示し

40
00:02:20,739 --> 00:02:26,300
それから これらを使って その物体が歩行者であることを示す

41
00:02:26,300 --> 00:02:29,240
それから 車は

42
00:02:29,240 --> 00:02:32,516
車の周りの箱は アンカーボックス１より アンカーボックス２の形に より似ているので

43
00:02:32,516 --> 00:02:40,021
これを使って ２番目の物体が車であることを示せて

44
00:02:40,021 --> 00:02:42,830
境界箱など

45
00:02:42,830 --> 00:02:45,984
検出した車に関する全てのパラメータを示せる

46
00:02:45,984 --> 00:02:50,459
では まとめると 前に

47
00:02:50,459 --> 00:02:51,693
アンカーボックスを使う前は

48
00:02:51,693 --> 00:02:53,505
次のようにしていた

49
00:02:53,505 --> 00:02:57,665
学習セット 学習セットの画像にある各物体について

50
00:02:57,665 --> 00:03:03,580
その中心がある格子セルを 物体に紐つけた

51
00:03:03,580 --> 00:03:11,298
つまり 出力 y は 3 x 3 x 8 だった
なぜなら 3 x 3 格子だから

52
00:03:11,298 --> 00:03:13,400
そして 各格子の位置に

53
00:03:13,400 --> 00:03:17,080
出力ベクトルを持っていた
それは Pc と 境界箱 と

54
00:03:17,080 --> 00:03:18,892
それに c1 c2 c3 だ

55
00:03:18,892 --> 00:03:21,877
アンカーボックスを使うと 今度はこうなる

56
00:03:21,877 --> 00:03:27,553
今度は 各物体は 前と同じく 同じ格子セルに紐付く

57
00:03:27,553 --> 00:03:29,860
物体の中心点がある格子セルと紐付く

58
00:03:29,860 --> 00:03:33,488
しかし 物体は 格子セルに紐付くと共に

59
00:03:33,488 --> 00:03:41,020
物体の形と 最も IoU の高いアンカーボックスにも紐付く

60
00:03:41,020 --> 00:03:43,070
よって ２つのアンカーボックスを持つ

61
00:03:43,070 --> 00:03:45,845
物体を見て

62
00:03:45,845 --> 00:03:50,060
もし この形の物体があれば

63
00:03:50,060 --> 00:03:53,270
２つのアンカーボックスで

64
00:03:53,270 --> 00:03:55,286
１つのアンカーボックスは このアンカーボックス１の形で

65
00:03:55,286 --> 00:03:58,325
アンカーボックス２はこの形で

66
00:03:58,325 --> 00:04:01,940
それから ２つのアンカーボックスのどちらが 真の境界箱と

67
00:04:01,940 --> 00:04:04,500
より高い IoU を持っているか見る

68
00:04:04,500 --> 00:04:05,810
それが どちらであるにせよ

69
00:04:05,810 --> 00:04:11,055
その物体は 格子セルにだけでなく １つのペアに紐つけられる

70
00:04:11,055 --> 00:04:18,905
それは (格子セル , アンカーボックス) ペアに紐つけられる

71
00:04:18,905 --> 00:04:22,985
このようにして 物体が 目的ラベルの中に表される

72
00:04:22,985 --> 00:04:31,505
それから 今度の出力 y は 3 x 3 x 16 だ

73
00:04:31,505 --> 00:04:34,120
なぜなら 前のスライドで見たように

74
00:04:34,120 --> 00:04:36,610
y は 今度は 16次元だからだ

75
00:04:36,610 --> 00:04:37,788
もし望むなら

76
00:04:37,788 --> 00:04:42,565
これを 3 x 3 x 2 x 8 で表すこともできる

77
00:04:42,565 --> 00:04:48,675
なぜなら ２つのアンカーボックスがあり y は ８次元だからだ

78
00:04:48,675 --> 00:04:54,516
y の次元が８なのは ３つの物体があるからだ

79
00:04:54,516 --> 00:05:01,070
もし もっと多くの物体があれば y の次元は もっと高くなる

80
00:05:01,070 --> 00:05:04,890
じゃあ 完全な例を見てみよう

81
00:05:04,890 --> 00:05:09,040
この格子セルで

82
00:05:09,040 --> 00:05:12,070
y がどうなるか示そう

83
00:05:12,070 --> 00:05:21,075
歩行者は アンカーボックス１に より似ているから

84
00:05:21,075 --> 00:05:22,280
歩行者に対しては

85
00:05:22,280 --> 00:05:25,620
このベクトルの上半分を割り当てよう

86
00:05:25,620 --> 00:05:27,235
そう ここには物体がある

87
00:05:27,235 --> 00:05:31,150
歩行者に対応した境界箱がある

88
00:05:31,150 --> 00:05:33,734
歩行者を クラス１だとすると

89
00:05:33,734 --> 00:05:36,665
C1 は 1 そして 0 0

90
00:05:36,665 --> 00:05:41,420
そして 車の形は アンカーボックス２に より似ている

91
00:05:41,420 --> 00:05:43,430
よって このベクトル残りは

92
00:05:43,430 --> 00:05:47,960
1 そして 車に対応した境界箱

93
00:05:47,960 --> 00:05:51,330
そして 車は C2

94
00:05:51,330 --> 00:05:53,170
よって 0 1 0

95
00:05:53,170 --> 00:05:56,715
結局 これが

96
00:05:56,715 --> 00:06:02,685
この矢印が指している 下中央の格子セルのラベル y だ

97
00:06:02,685 --> 00:06:09,760
さて もし この格子セルに 車しか無くて 歩行者がいなかったら どうなるだろう？

98
00:06:09,760 --> 00:06:11,410
車しか無ければ

99
00:06:11,410 --> 00:06:14,300
車の周りの境界箱の形は

100
00:06:14,300 --> 00:06:18,460
やはり アンカーボックス２に より似ている

101
00:06:18,460 --> 00:06:20,410
よって 目的ラベル y は

102
00:06:20,410 --> 00:06:24,325
もし 車しか無くて 歩行者が無くなれば

103
00:06:24,325 --> 00:06:30,271
アンカーボックス２については 同じままで

104
00:06:30,271 --> 00:06:37,530
アンカーボックス２に対応するのは ベクトルのこの部分でしょ

105
00:06:37,530 --> 00:06:42,590
アンカーボックス１に対応するベクトルの部分については

106
00:06:42,590 --> 00:06:46,017
そこには 何の物体も無いということだから

107
00:06:46,017 --> 00:06:47,912
Pc は 0

108
00:06:47,912 --> 00:06:52,900
そして 残りについては 気にしない

109
00:06:52,900 --> 00:06:55,155
じゃ いくつか 詳細を付け加えておく

110
00:06:55,155 --> 00:06:59,730
２つのアンカーボックスがある時に ３つの物体が同じ格子セルにあったら どうするか？

111
00:06:59,730 --> 00:07:04,000
その場合 このアルゴリズムでは うまく処理できない

112
00:07:04,000 --> 00:07:06,705
起こらないことを願う

113
00:07:06,705 --> 00:07:11,440
でも そうなったら このアルゴリズムには それを処理するうまいやり方が無い

114
00:07:11,440 --> 00:07:15,025
その場合には 何らかのタイ・ブレーク処理を実装する

115
00:07:15,025 --> 00:07:17,160
同じ格子セルに ２つの物体が紐付く場合は どうなるだろうか？

116
00:07:17,160 --> 00:07:21,316
ただし それらは 同じアンカーボックス形をしている

117
00:07:21,316 --> 00:07:24,335
再び このアルゴリズムでは うまく処理できないケースだ

118
00:07:24,335 --> 00:07:28,855
そうなる場合は 何らかのタイ・ブレーク処理を実装する

119
00:07:28,855 --> 00:07:31,101
自分のデータセットで そんなことが起こらないことを願う

120
00:07:31,101 --> 00:07:32,740
全く起きないことを願う

121
00:07:32,740 --> 00:07:35,834
そして それが 性能に大きく影響してはいけない

122
00:07:35,834 --> 00:07:38,575
アンカーボックスは 以上だ

123
00:07:38,575 --> 00:07:42,370
同じ格子セルに ２つの物体がある場合を

124
00:07:42,370 --> 00:07:46,880
処理できるような アンカーボックスにしようと思っていても

125
00:07:46,880 --> 00:07:49,345
実際に それが起こるのは稀だ

126
00:07:49,345 --> 00:07:54,335
特に 3 x 3 格子ではなく 19 x 19 などを使っていればね

127
00:07:54,335 --> 00:07:59,065
２つの物体が 361個のセルの中の１つに 同じ中心点を持つ確率は

128
00:07:59,065 --> 00:08:02,340
起こり得るけども そんなに頻繁には起こらない

129
00:08:02,340 --> 00:08:06,810
アンカーボックスを使うのは それが より良い結果をもたらすのに

130
00:08:06,810 --> 00:08:12,325
学習アルゴリズムを専門化するからだ

131
00:08:12,325 --> 00:08:15,400
特に データセットに 背の高い

132
00:08:15,400 --> 00:08:17,380
歩行者のような 痩せた物体があり

133
00:08:17,380 --> 00:08:20,245
車のような 幅広の物体もある場合

134
00:08:20,245 --> 00:08:23,590
これは 学習アルゴリズムを専門化させ

135
00:08:23,590 --> 00:08:27,115
ある出力を 特化させて

136
00:08:27,115 --> 00:08:28,750
車のような白く太い物体を検出したり

137
00:08:28,750 --> 00:08:32,243
歩行者のような 背の高い痩せた物体を検出する

138
00:08:32,243 --> 00:08:34,830
そんな出力に特化させる

139
00:08:34,830 --> 00:08:38,005
では最後に どのようにアンカーボックスを選ぶのか？

140
00:08:38,005 --> 00:08:43,435
人々は 手で選んだり ５~１０のアンカーボックスを選んぶことが多い

141
00:08:43,435 --> 00:08:46,270
それらは 様々な形をしていて

142
00:08:46,270 --> 00:08:49,510
検出したい物体の種類に対応している

143
00:08:49,510 --> 00:08:51,505
さらに進んだバージョンでは

144
00:08:51,505 --> 00:08:55,890
機械学習の他の知識のある人向けの 上級者向けのコメントだけど

145
00:08:55,890 --> 00:09:00,385
これを とてもうまくやる方法が 一連の YOLO 研究論文の後の方にある

146
00:09:00,385 --> 00:09:02,430
それは k-means アルゴリズムを使う方法だ

147
00:09:02,430 --> 00:09:05,795
検出したい２種類の物体の形をグループ化し

148
00:09:05,795 --> 00:09:09,150
それを使って アンカーボックスのセットを選ぶのに使う

149
00:09:09,150 --> 00:09:13,140
それが 最も典型的な

150
00:09:13,140 --> 00:09:16,330
検出しようとする 複数の 数十の 物体の代表になる

151
00:09:16,330 --> 00:09:20,915
これが アンカーボックスを自動的に選ぶ もっと進んだやり方だ

152
00:09:20,915 --> 00:09:24,160
もし 手で様々な形を選んで

153
00:09:24,160 --> 00:09:27,580
物体の形のセットを拡張するなら

154
00:09:27,580 --> 00:09:29,260
背の高い痩せたものや

155
00:09:29,260 --> 00:09:31,270
太ったもの 白いものを検出できると考えるだろう

156
00:09:31,270 --> 00:09:33,535
それも 同じように うまく行くだろう

157
00:09:33,535 --> 00:09:34,760
アンカーボックスは以上だ

158
00:09:34,760 --> 00:09:37,120
次のビデオでは

159
00:09:37,120 --> 00:09:42,000
これまで見てきたこと全てを YOLO アルゴリズムに繋げてみよう