目前所学到的目标检测
的问题之一是 你的算法或许会对同一目标
有多次检测. 所以与其只检测到目标一次 或许会被检测到很多次 非极大值抑制是一种让你确保 你的算法只对每个对象
得到一个检测的方法. 我们来举一个例子。 假设你想在这张图片中检测行人 车,和摩托车. 你会在图片上放置一个网格, 这是一个19乘19的网格. 现在, 从技术上来说
这个车只有一个中间点, 那么它应该被分配到一个网格单元中. 同样,左边的车
也应该只有一个中间点, 所以技术上来说
只有一个单元格预测出有一辆车. 实际中,对每一个网格,你都进行 目标分类和定位算法. 那么很有可能 这个网格被认为是车的中心点, 而这个网格可能也是, 还有这个, 对左边的车也是一样的. 可能不仅仅是这个网格, 如果这是你之前看过的测试图片, 不仅仅是那个网格
决定了这是一辆车, 这个网格,和这个网格, 也许其他的 也会认为这是辆车. 让我们通过一个例子一步步看一下,
非极大值抑制是如何工作的. 因为你对每个网格 运行图像分类和定位的算法. 在这361个网格上, 有可能许多网格会举手说， "我的Pc值很大, 即有个目标
极有可能在我的网格中." 而不是有二个网格 在这19平方，361个网格中
认为他们检测到了目标. 所以，当你运行算法时, 对每个目标
你也许会得到多个检测结果. 所以, 非极大值抑制要做的是 清理这些检测. 这样每辆车只会得到一个检测结果, 而不是多个结果. 因此具体来说, 它要做的 首先
是看一看每个检测结果的相关概率. 说到候选者PC，尽管 在这周的作业练习中你学到一些细节 是Pc乘以C1, 或者C2, C3. 但现在,
我们认为Pc为一个检测到的概率. 首先它取其中最大那个, 在这个例子中是0.9, 意味着 "这是我最自信的检测结果了, 那么让我们标明它,
认为我在这里找到一辆车." 做完这一步, 非极大值抑制再看 所有的剩下的方框
以及所有和你刚输入的那个结果 有着着多重叠的,
有着高IOU值的方形区域 你得到的产出值将被抑制. 就是那二个概率为0,6和0.7的方框. 这二个和亮蓝色的方框重叠最多. 所以这些你将要做抑制 通过调暗他们来表明他们被抑制了. 接下来,你将要计算所有剩余的方框 来找出有着最大概率的那个, 即最高Pc值, 在这个例子里是0.8这个. 因此让我们确定了它, 认为 "哦,我在这里找到一辆车." 接着,非极大值抑制部分 将去掉任何有着高IOU值的. 那么现在,
每个方框不是被高亮就是被调暗. 如果你只是去掉那些调暗的方框, 剩下的就是那些标记的, 这是你的二个最终预测. 所以这就是非极大值抑制. 非极大值意思是你将要输出 有着最大可能性的分类判断 而抑制那些
非最大可能性的邻近的方框. 因此叫做非极大值抑制. 现在我们来过一下这个算法的细节. 首先,在这个19乘19的网格中, 你将会得到一个19乘19乘8输出量. 在这个例子中, 我将简化问题为你只是做汽车检测. 让我们去掉C1,C2, C3, 而且现在假设 每一个19乘19网格的输出, 即361个网格的输出, 19的平方, 对这361个位置, 你获得一个如下的输出预测, 即包括了是否有目标的几率, 和边界框. 而如果你只有一个目标, 就没有C1, C2,C3预测. 如果有多个目标会怎样呢， 其中细节 我会放到编程练习中, 本周结束你就会涉及到. 那么, 为了运用非极大值抑制, 首先要做的是丢掉所有的方框, 丢掉所有预测值Pc小于或等于 某个门限的边界框, 例如0.6. 所以除非你认为至少有一个 概率为0.6机会认为目标在那里,
所以我们选择直接去掉它. 这样就作用于所有的低概率输出框. 我们这么想，
对这361位置的任意一个, 你输出了一个边界框和 它含有目标的概率. 所以,我们将去掉 所有有着低概率的边界框. 接下来, 如果还有剩下的边界框 还没有被去掉或处理的, 你将重复地选出有着最大概率 最大Pc值的边界框, 将它作为一个预测结果. 所以这就是前面一页讲到的过程, 选出一个边界框并用高光笔标记它. 这里
你一定可以得到有一辆车的预测 接下来, 你要丢掉其他剩余边界框, 即那些不被认为是预测结果的, 并且之前也没有被去掉的框. 因此丢弃任何剩余的，
 同上一步的计算有着着多重叠的, 高IOU值 的边框 所以,这第二步的while循环
就是在前面幻灯片中 我们调暗那些剩余的边框 那些和之前高亮的边界框
有着大量重叠的 我们刚刚标记的 所以只要还有未被处理的边界框, 你需要重复这个过程, 直到每个边界框
不是被输出为预测结果, 就是被丢弃掉,
由于它们有着很大的重复 或很高的IOU值. 和你刚刚检测输出的目标检测 来作为你检测到的目标相比。 在这页幻灯片中
我用单个目标来描述这个算法. 如果你实际上试着检测三种目标,
 例如行人, 车辆, 和摩托车, 
那么输出向量将会有额外三部分. 而事实证明, 正确的做法是 运行三次独立的非极大值抑制算法, 每次针对一种输出分类. 但是细节我会留到 本周的编程练习中, 练习中你将自己 实现多个目标检测的非极大值抑制算法. 那么这就是非极大值抑制, 如果你实现我们所叙述的目标检测算法, 你将会得到相当不错的结果. 但是在结束YOLO算法讨论之前, 我还要分享最后一件事, 将会使算法更好的工作, 就是使用锚盒. 我们下一节再见