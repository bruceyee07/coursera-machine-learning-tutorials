1
00:00:00,000 --> 00:00:03,990
Nesne tespitindeki problemlerden biri de 
sizin de daha önce öğrendiğiniz üzere

2
00:00:03,990 --> 00:00:09,025
Algoritmanız bir nesneyi birden fazla kez tespit edebilir.

3
00:00:09,025 --> 00:00:11,490
Nesneyi sadece bir kere testip etmek yerine

4
00:00:11,490 --> 00:00:13,940
Birden fazla kez tespit edebilir.

5
00:00:13,940 --> 00:00:16,470
Maksimum olmayanları bastırma ise

6
00:00:16,470 --> 00:00:19,865
her objeyi sadece bir kere tespit etmeyi sağlar.

7
00:00:19,865 --> 00:00:21,220
Bir örnek üzerinden inceleyelim.

8
00:00:21,220 --> 00:00:23,610
Diyelim ki, yayaları, arabaları ve motosikletleri

9
00:00:23,610 --> 00:00:26,070
tespit etmek istiyorsunuz.

10
00:00:26,070 --> 00:00:29,040
Resmin üstüne ızgara yerleştirebiliriz

11
00:00:29,040 --> 00:00:33,375
Bu ızgara 19'a 19 olsun.

12
00:00:33,375 --> 00:00:36,500
Şimdi, teknik olarak bu araba sadece 
bir orta noktaya sahip ise,

13
00:00:36,500 --> 00:00:39,105
ızgaradaki sadece bir hücreye atanması gerekir.

14
00:00:39,105 --> 00:00:43,035
Ayrıca soldaki araba da sadece bir orta noktaya sahip.

15
00:00:43,035 --> 00:00:48,745
Yani teknik olarak sadece bir ızgara hücresi
 orada araba olduğunu tahmin etmeli.

16
00:00:48,745 --> 00:00:50,355
Uygulamada

17
00:00:50,355 --> 00:00:56,006
nesne sınıflandırma ve yer bulma 
algoritmalarını her hücre için çalıştırırız.

18
00:00:56,006 --> 00:00:57,510
Oldukça mümkündür ki,

19
00:00:57,510 --> 00:01:01,140
Bu hücre kendisinin arabanın 
orta noktası olduğunu düşünebilir

20
00:01:01,140 --> 00:01:02,578
ve tabi ki bu da

21
00:01:02,578 --> 00:01:05,130
ve bu da, soldaki araba için de

22
00:01:05,130 --> 00:01:07,520
Belki sadece bu kutu değil

23
00:01:07,520 --> 00:01:09,957
Bu daha önce gördüğünüz bir test fotoğrafı ise,

24
00:01:09,957 --> 00:01:14,070
belki sadece o kutu araba olduğunu düşünmeyecek.

25
00:01:14,070 --> 00:01:16,665
Belki bu kutu ve bu kutu ve belki diğerleri de

26
00:01:16,665 --> 00:01:19,730
arabayı bulduklarını düşünecekler

27
00:01:19,730 --> 00:01:24,865
Hadi maksimum olmayanları bastırma
nasıl çalışır bir örnekle başlayalım.

28
00:01:24,865 --> 00:01:26,550
Nesne sınıflandırma ve yer bulma 
algoritmalarını her hücre için çalıştırdığınız için

29
00:01:26,550 --> 00:01:31,710
Nesne sınıflandırma ve yer bulma 
algoritmalarını her hücre için çalıştırdığınız için

30
00:01:31,710 --> 00:01:34,635
bütün 361 hücrede.

31
00:01:34,635 --> 00:01:38,670
Birden fazla hücre el kaldırıp

32
00:01:38,670 --> 00:01:43,845
"Benim 'Pc' değerim, yani bir nesneye
 sahip olma şansım fazla" diyebilir.

33
00:01:43,845 --> 00:01:47,120
Sadece iki hücre dışında,

34
00:01:47,120 --> 00:01:51,330
19'un karesi yani 361 tanesi nesne bulduklarını düşünebilir.

35
00:01:51,330 --> 00:01:52,905
Yani, algoritmanız çalıştırdığınızda

36
00:01:52,905 --> 00:01:58,015
Her bir nesnenin birden çok kez
 tespit edilmesi ile sonuçlanabilir.

37
00:01:58,015 --> 00:01:59,910
Maksimum olmayanları bastırma şunu yapar ki,

38
00:01:59,910 --> 00:02:02,645
Bu tespitleri temizler.

39
00:02:02,645 --> 00:02:06,660
Yani araç başına sadece bir tespit yaparsınız.

40
00:02:06,660 --> 00:02:09,910
Araç başına birden fazla tespit yerine.

41
00:02:09,910 --> 00:02:12,000
Yani aslında yaptığı iş,

42
00:02:12,000 --> 00:02:16,645
İlk olarak her tespitin olasılıklarına bakar.

43
00:02:16,645 --> 00:02:18,630
Kısmen Pc değerleri,

44
00:02:18,630 --> 00:02:21,010
bazı detayları bu haftaki programlama
 alıştırmasında öğreneceksiniz.

45
00:02:21,010 --> 00:02:23,548
Aslında Pc çarpı C1 veya

46
00:02:23,548 --> 00:02:24,879
C2 veya C3.

47
00:02:24,879 --> 00:02:29,685
Ama şimdi, hadi Pc bir tespit olasılığı olsun,

48
00:02:29,685 --> 00:02:32,190
ve algoritma en büyük olanı alır.

49
00:02:32,190 --> 00:02:35,070
Bu durumda bu değer 0.9 ve algoritma der ki

50
00:02:35,070 --> 00:02:37,909
"Bu benim en çok güvendiğim tespit,

51
00:02:37,909 --> 00:02:41,615
o halde sadece onu vurgulayalım ve
 burada araba bulunduğunu söyleyelim."

52
00:02:41,615 --> 00:02:45,630
Maksimum olmayanları bastırma işlemini yaptıktan sonra

53
00:02:45,630 --> 00:02:49,590
Geriye kalan dikdörtgenler ve 
yüksek oranda çakışan dikdörtgenler

54
00:02:49,590 --> 00:02:51,225
yüksek IOU'ya sahip,

55
00:02:51,225 --> 00:02:54,625
bu çıktısını aldığımız dikdörtgen bastırılacak.

56
00:02:54,625 --> 00:02:58,385
Bu iki dikdörtgen 0.6 ve 0,7 olan

57
00:02:58,385 --> 00:03:02,048
İkisi de açık mavi olan dikdörtgen
 ile büyük oranda çakışıyor

58
00:03:02,048 --> 00:03:03,555
Yani bu ikisi bastırılacak.

59
00:03:03,555 --> 00:03:07,105
Bastırıldıklarını anlamak için 
onları biraz daha koyu renkle gösterelim.

60
00:03:07,105 --> 00:03:09,405
Sonra ise geriye kalan dikdörtgenlerin üzerinden geçelim,

61
00:03:09,405 --> 00:03:11,760
ve en yüksek olasılığa sahip olanı bulalım.

62
00:03:11,760 --> 00:03:15,180
En yüksek Pc değerli olanı 
yani bu durumda değeri 0.8 olanı

63
00:03:15,180 --> 00:03:17,025
Bunun için diyebiliriz ki

64
00:03:17,025 --> 00:03:18,480
"Oh, burada bir araba tespit ettik."

65
00:03:18,480 --> 00:03:21,030
Ve sonra, maksimum olmayanları bastırma işlemi ile

66
00:03:21,030 --> 00:03:25,785
diğer yüksek IOU değerine sahip olanlardan kurtulmuş olunur.

67
00:03:25,785 --> 00:03:30,315
Yani şimdi bütün dikdörtgenler
 vurgulanmış ya da karartılmış olur.

68
00:03:30,315 --> 00:03:33,295
Ve eğer sadece karartılmış dikdörtgenlerden kurtulursanız.

69
00:03:33,295 --> 00:03:35,670
Sadece vurgulanmış olanlar kalır.

70
00:03:35,670 --> 00:03:39,325
Bu ikisi son tahminlerimiz olur.

71
00:03:39,325 --> 00:03:41,445
İşte bu maksimum olmayanları bastırma,

72
00:03:41,445 --> 00:03:44,530
Maksimum olmayanlar demek ise sadece

73
00:03:44,530 --> 00:03:48,215
maksimum sınıflandırma olasılıklarını göstermek,

74
00:03:48,215 --> 00:03:52,006
ama ona yakın olup maksimum olmayanları bastırmak.

75
00:03:52,006 --> 00:03:55,684
Bu nedenle adı, maksimum olmayanları bastırma.

76
00:03:55,684 --> 00:03:58,185
Hadi algoritma ayrıntılarına inelim.

77
00:03:58,185 --> 00:04:00,590
İlk olarak, bu 19'a 19 ızgara üzerinde

78
00:04:00,590 --> 00:04:07,925
Çıktı olarak 19x19x8 bir çıktı değeri alacaksınız.

79
00:04:07,925 --> 00:04:09,945
Bu örnek için,

80
00:04:09,945 --> 00:04:13,794
Basite indirgemek için sadece
 araba tespit yaptığımızı söyleyelim.

81
00:04:13,794 --> 00:04:16,080
Yani, C1, C2, C3'den kurtulalım.

82
00:04:16,080 --> 00:04:18,480
Varsayalım ki bu satırın,

83
00:04:18,480 --> 00:04:21,578
Her çıktısı 19'a 19

84
00:04:21,578 --> 00:04:23,910
Öyle ki her satır 361

85
00:04:23,910 --> 00:04:25,350
Yani 19'un karesi

86
00:04:25,350 --> 00:04:26,835
Her 361 hücre için

87
00:04:26,835 --> 00:04:29,185
Tahmin çıktıları alacaksınız.

88
00:04:29,185 --> 00:04:31,443
Bu da orada bir nesne olma şansı olacaktır,

89
00:04:31,443 --> 00:04:32,725
ve çevreleyen kutu da.

90
00:04:32,725 --> 00:04:34,135
Eğer sadece bir nesneniz varsa

91
00:04:34,135 --> 00:04:38,245
C1, C2, C3 olmayacaktır.

92
00:04:38,245 --> 00:04:40,140
Ne olduğunun ayrıntıları ise

93
00:04:40,140 --> 00:04:41,875
Birden çok nesnenin olduğu durumu

94
00:04:41,875 --> 00:04:43,870
Programlama egzersizine bırakacağım,

95
00:04:43,870 --> 00:04:47,980
Bu hafta sonrasında yapacaksınız.

96
00:04:47,980 --> 00:04:50,795
Şimdi maksimum olmayanları bastırma 
algoritmasını uygulamak için

97
00:04:50,795 --> 00:04:54,405
Yapılabilecek ilk iş Pc değerleri 
belli bir değerden küçük veya eşit olan

98
00:04:54,405 --> 00:04:57,295
bütün tahmin kutularını görmezden gelmek, bu değere 0.6 diyebiliriz.

99
00:04:57,295 --> 00:05:01,243
bütün tahmin kutularını görmezden gelmek, bu değere 0.6 diyebiliriz.

100
00:05:01,243 --> 00:05:04,140
Yani biz şunu diyeceğiz ki eğer

101
00:05:04,140 --> 00:05:08,165
Orada nesne olma şansı 0.6
 bile olmayanlardan kurtulalım.

102
00:05:08,165 --> 00:05:13,590
Böylece bu bütün düşük olasılıklı kutuları görmezden geliriz.

103
00:05:13,590 --> 00:05:19,695
Bunu şöyle düşünebiliriz, her 361 hücre için

104
00:05:19,695 --> 00:05:23,625
olasılığı iyi olan bir kutu
 çıktılıyoruz ve bu kutu ile birlikte

105
00:05:23,625 --> 00:05:28,140
o kutunun olasılığını çıktılıyoruz.

106
00:05:28,140 --> 00:05:29,415
Biz ise düşük olasılıklı olan bütün
 çevreleyen kutuları görmezden geleceğiz.

107
00:05:29,415 --> 00:05:33,945
Biz ise düşük olasılıklı olan bütün
 çevreleyen kutuları görmezden geleceğiz.

108
00:05:33,945 --> 00:05:35,730
Sırada ise eğer hala

109
00:05:35,730 --> 00:05:41,130
Görmezden gelinmemiş çevreleyen kutu kalmış ise

110
00:05:41,130 --> 00:05:45,910
En yüksek olasılıklı çevreleyen
 kutuyu tekrar tekrar seçeceğiz.

111
00:05:45,910 --> 00:05:47,835
En yüksek Pc değerine sahip olan.

112
00:05:47,835 --> 00:05:50,380
Ve onu tahmin olarak çıktılayacağız.

113
00:05:50,380 --> 00:05:54,720
Bu işlem bir önceki slaytta yaptığımız işlem 
olan çevreleyen kutuları daha açık renk yapmamız.

114
00:05:54,720 --> 00:05:56,725
Bu işlem bir önceki slaytta yaptığımız işlem 
olan çevreleyen kutuları daha açık renk yapmamız.

115
00:05:56,725 --> 00:06:02,195
Böylece orada araba olduğuna dair bir tahminde bulunuruz.

116
00:06:02,195 --> 00:06:05,803
Sonra, geriye kalan bütün kutuları görmezden gelebiliriz.

117
00:06:05,803 --> 00:06:08,905
Daha önce görmezden gelinmemiş,

118
00:06:08,905 --> 00:06:10,955
ve çıktı olarak vermediğimiz bütün kutuları.

119
00:06:10,955 --> 00:06:14,490
Yani yüksek oranda çakışan 
bütün kutuları görmezden gelelim,

120
00:06:14,490 --> 00:06:15,945
yüksek IOU'ya sahip

121
00:06:15,945 --> 00:06:20,305
Bir önceki adımda çıktı olarak aldığımız kutu.

122
00:06:20,305 --> 00:06:25,425
'While' Döngüsündeki bu ikinci adım, 
bir önceki slaytta olan

123
00:06:25,425 --> 00:06:28,680
açık renkte gösterdiğimiz çevreleyen kutular ile 
yüksek oranda çakışan çevreleyen kutuların koyu renklendirilmesi,

124
00:06:28,680 --> 00:06:32,310
açık renkte gösterdiğimiz çevreleyen kutular ile 
yüksek oranda çakışan çevreleyen kutuların koyu renklendirilmesi,

125
00:06:32,310 --> 00:06:34,115
Daha önce açık renkle vurguladığımız.

126
00:06:34,115 --> 00:06:36,835
Ve bunu yapmaya işlenmemiş
bütün kutular işlenene kadar devam edeceğiz.

127
00:06:36,835 --> 00:06:40,000
Ve bunu yapmaya işlenmemiş
bütün kutular işlenene kadar devam edeceğiz.

128
00:06:40,000 --> 00:06:45,225
Her kutunun teker teker işlenip
 tahmin olarak çıktı alınması

129
00:06:45,225 --> 00:06:48,990
veya yüksek çakışma oranına
 sahip olup görmezden gelinmesi

130
00:06:48,990 --> 00:06:50,580
veya çok yüksek IOU'ya sahip

131
00:06:50,580 --> 00:06:53,550
Tahmin ettiğiniz kutuyu, konumunu ve
tespit edilen nesneyi çıktı olarak veririz.

132
00:06:53,550 --> 00:06:58,610
Tahmin ettiğiniz kutuyu, konumunu ve
tespit edilen nesneyi çıktı olarak veririz.

133
00:07:00,000 --> 00:07:06,640
Bu slayt üzerinde algoritmayı tek bir nesne kullanarak tarif ettik.

134
00:07:06,640 --> 00:07:10,940
Eğer üç nesne tespit etmeyi denerseniz
mesela yayalar,

135
00:07:10,940 --> 00:07:16,215
arabalar ve motosikleter o zaman
çıktı vektörünüzde üç ek eleman olacaktır.

136
00:07:16,215 --> 00:07:18,860
Görünüşe göre yapılması gereken doğru şey,

137
00:07:18,860 --> 00:07:22,745
Maksimum olmayanları bastırma algoritmasını
bağımsız olarak üç kere gerçekleştirmek.

138
00:07:22,745 --> 00:07:26,635
Her çıktı sınıfı için bir defa.

139
00:07:26,635 --> 00:07:29,475
Fakat bunun ayrıntılarını

140
00:07:29,475 --> 00:07:33,132
bu haftanın programlama egzersizine bırakacağım
Kendiniz uygulayarak öğreneceksiniz.

141
00:07:33,132 --> 00:07:38,912
Maksimum olmayanları bastırma algoritmasını
birden fazla sınıf için uygulayacaksınız.

142
00:07:38,912 --> 00:07:41,210
Maksimum olmayanları bastırma için bu kadar.

143
00:07:41,210 --> 00:07:45,090
Eğer açıkladığımız nesne tespit algoritmasını uygularsanız

144
00:07:45,090 --> 00:07:48,175
aslında oldukça tatmin edici sonuçlar elde edeceksiniz.

145
00:07:48,175 --> 00:07:51,876
YOLO algoritması konusunu bitirmeden önce

146
00:07:51,876 --> 00:07:54,810
Sizinle paylaşmak istediğim son bir düşünce var.

147
00:07:54,810 --> 00:07:57,295
Algoritmanızın çok daha iyi çalışmasını sağlayacak.

148
00:07:57,295 --> 00:08:00,235
Çapa kutuları düşüncesi.

149
00:08:00,235 --> 00:08:02,000
Haydi bir sonraki videoya geçelim.