Nesne algılama algoritmanızın iyi çalıştığından nasıl emin olursunuz? Bu videoda, Birleşimin Kesişimi fonksiyonunu öğreneceksiniz. Bu fonksiyonu nesne belirleme algoritmanızı değerlendirirken kullanacağımız gibi, bir sonraki videoda da nesne belirleme algoritmanıza yeni bir bileşen eklemek için kullanacağız. Algoritmanızın daha da iyi çalışması için. Haydi başlayalım. Nesne belirleme üzerine çalışırken Nesnenin yerini saptamanız da beklenir. Eğer bu bir kesin referanslı karakter kutusu ise, ve eğer algoritmanızın çıktısı bu mor karakter kutusu ise, Bu iyi bir çıktı mıdır, yoksa kötü mü? Birleşimin kesişimi fonksiyonunun yaptığı şey, ya da IoU'nun (Intersection over Union) yaptığı şey, bu iki karakter kutusunun kesişimini hesaplamak. Yani, bu iki karakter kutusunun birleşimini oluşturan bu bölge her iki karakter kutusunu da kapsar. Kesişim kümesi de buradaki daha küçük olan alandır. Birleşimin Kesişimi, bu kesişim kümesinin büyüklüğünü hesaplar. Şu turuncuyla taranmış kesişim alanının birleşimin alanına bölümü şu yeşil taralı alan. Kurala göre, bu hesaplamanın sonucunda eğer IoU 0.5'e eşit veya daha büyükse tahminin "Doğru" olduğuna karar verilir. Eğer tahmini ve kesin referanslı karakter kutuları tam olarak üst üste gelmişse birleşimin kesişimi (IoU) 1'e eşit olur. Çünkü bu durumda kesişim birleşime eşit olacaktır. Ama genellikle, IoU 0.5'e eşit ve daha büyük olduğu sürece Çıktılar "Doğru" sonucu gösterecektir. Tahmin edilen karakter kutusunun doğru olup olmadığına karar verirken eşik olarak sıkça 0.5 kullanılır. Bu bir kuraldır. Ama eğer sonuçlarınızın daha kesin olmasını istiyorsanız tahmininizi "Doğru" kabul etmek için IoU 0.6'ya eşit veya büyük olarak da alabilirsiniz. IoU ne kadar yüksekse, Karakter kutusu da o kadar isabetli olacaktır. Bu, aynı zamanda haritada yer saptamanın bir yoludur. Tahminin isabetli olduğunu görmek için algoritmanın "doğru" olarak belirleyip yerini saptadığı bir nesnede bu tip bir hesaplamayı nesnenin doğru bir şekilde belirlendiğine karar vermek için kullanabilirsiniz. Tekrar ediyorum, 0.5 göz kararı seçilmiş kural. Arkasında bir teorik sebep yok. Daha isabetli olmak istediğinizde eşik olarak 0.6 da seçebilirsiniz. Bazen eşiği 0.6 veya 0.7 seçen kişiler görüyorum. 0.5'ten daha düşük bir eşik seçenler çok nadir. Şimdi, IoU temelde nesne yerleştirme algoritmanızın isabetli olup olmadığını değerlendirmenin bir yoludur. Ama daha genel olarak, IoU, iki karakter kutusunun örtüşümünü hesaplar. İki kümeniz varsa bunların kesişimini hesaplayabilirsiniz birleşimini de hesaplayıp bu iki alanın birbirine oranını alabilirsiniz. Aslında bu aynı zamanda, bu iki karakter kümesinin ne kadar benzer olduğunu ölçmeye de olanak verir. Şimdi bu kullanımı bir de diğer videoda Maksimum olmayan kesmeler hakkında konuşurken göreceğiz. IoU ya da birleşimin kesişimi konusu bu kadar Teminat mektubu konseptindeki IoU ile karıştırılmamalısınız Diyelim ki birine borç para verdiniz, o kişi bir kağıda "sana bu kadar borçluyum" yazarsa, buna da IoU denir. Tamamen farklı durumlar ama bu iki durumun da isminin aynı olması çok ilgi çekici. Şu ana kadar birleşimin kesişmesinin bu tanımını konuştuk. Bir sonraki videoda, maksimum olmayan kesmelerden bahsetmek istiyorum. Bu, YOLO çıktılarının daha iyi çalışmasını sağlayabilecek bir araç Haydi bir sonraki videoya geçelim.