那么该如何判断你的判断目标检测算法<br />是否有效 这个视频里 你会学到一个函数<br />叫做交并比(Intersection Over Union) 它既可以用来评价你的目标检测算法 也可以用于，下个视频会说到的 往目标检测算法中加入其他特征部分 来进一步改善它 让我们开始吧 在建立目标检测时 你希望也能定位目标 如果这是真实的边界框 而你的算法输出的是紫色的这个边界框 这个结果是好是坏呢 交并比或者说是IoU函数做的就是 它计算了这两个边界框的<br />交集除以并集的比率 这两个边界框的并集是这块区域 实际上就是这两个边界框<br />包含的所有区域 而交集是这一小块区域 交并比是指<br />先计算交集的大小 也就是橙色区域的面积 然后除以并集的面积 也就是这个绿色区域 按惯例 或者说计算机视觉领域的原则 如果IoU大于0.5<br />你的结果就会被判断为正确的 如果预测的和真实的边界框完美重合了 IoU就会是1 因为交集和并集是相同的 但一般来说 只要IoU大于等于0.5 结果就可以了<br />或者说看上去不错了 而按照惯例<br />0.5很经常作为一个临界值 来判断预测的边界框是否准确 这只是一个常规值 如果你想更严格一些 你可以把准确的标准提高到 仅当IoU大于等于0.6<br />或者别的数值 IoU越高 边界框就越准确 因此 有一个衡量定位准确度的方法 只需要数出算法准确检测<br />并定位一个目标的次数 可以用这个来定义 目标是否被准确地定位 再重复一下<br />0.5只是人为选择的惯例 背后并没有更深的理论依据 你也可以选择其他的临界值<br />比如0.6 如果你想严格一些 我有时还见过别人用更严的标准<br />像0.6甚至0.7 几乎不会见到低于0.5的临界值 那么 什么是IoU创立的初衷 作为一个评估的方法 来判断你的目标定位算法是否准确 但更普遍地说 IoU是<br />两个边界框重叠程度的一个度量值 当你有两个框时 你可以计算交集 计算并集 然后求两个面积的比值 因此这也是一个方法<br />来衡量两个框的相近程度 我们会再一次看到这个方法 在下个视频中，当我们讨论非最大值抑制<br />(non-max suppression)时 这就是IoU或者说是交并比 别把IoU和欠条（I owe you）混淆了 如果你借钱给某人<br />他们会给你写个欠条 上面写着 我欠你(I owe U)多少钱<br />这也读作IoU  这是完全不同的概念 但挺好玩的<br />这两个东西有相似的名字 那么现在<br />了解了IoU或者说交并比的定义之后 这里这个 我会和你们讨论非最大值抑制（non-max suppression） 这个工具可以用来<br />让YOLO的结果变得更理想 让我们继续下一期教程