객체 탐지 알고리즘이 잘 작동하는지 어떻게 알 수 있습니까? 이 강의에서는 'Intersection over Union, (IoU)’ 이라는 함수에 대해 배우게 됩니다. 우리는 객체 탐지 알고리즘을 평가할 때와 다음 강의에서 다룰 내용인 그것을 사용하여 다른 물체 탐지 알고리즘에 다른 구성 요소를 추가하여 더 잘 작동되도록 하는 것 이 둘 모두를 위해서 이것을 사용합니다. 시작해봅시다. 객체 탐지 과제를 할 때, 객체의 위치를 측정하기를 원합니다. 그것이 실측된 바운딩 박스라면 그리고 여러분의 알고리즘이 보라색으로 된 이 바운딩박스를 아웃풋 한다면, 이것은 좋은 결과일까요 나쁜 결과일까요? 그래서 이 Intersection over Union 즉 IoU 함수가 하는 일은 이 두 개의 바운딩 박스의 Intersection over Union를 계산하는 것입니다. 따라서, 이 두 개의 바운딩박스 결합부위는 이 영역인데요, 이것은 이 두 개의 바운딩 박스 중 모두에게 있는 것이죠. 반면 교차점은 더 작은 영역에 있는 것이죠. 결합된 부위의 교차점이 하는 일은 교차점의 사이즈를 계산하는 것 입니다. 오렌지색으로 칠해진 이 영역을, 결합된 사이즈로 나누고, 그러면 이 초록색으로 칠한 영역이 되겠죠 컨벤션에 의해, 낮게 계산된 시야는 여러분의 답안이 옳다고 판단할 것입니다. 만약 IoU가 0.5 보다 크다면요. 그리고 만약 예측된 바운딩 박스와 실측된 바운딩박스가 완벽하게 겹쳐지면 IoU는 1 이 되는 것입니다. 왜냐하면 교차점은 이 결합부위와 같기 때문입니다. 일반적으로, IoU는 0.5보다 크거나 같기 때문에 그 답안은 옳은 것으로 간주되고, 꽤 괜찮아 보이는 것이죠. 습관적으로, 매우 흔하게 0.5는 예측된 바운딩박스 값이 옳은지를 판단하는 한계 값으로 사용되어집니다. 이것은 그냥 관습적인 것인데요. 보다 엄격하게 하고 싶으시다면 IoU가 0.6과 같거나 큰 경우에만 올바른 답안인 것으로 판단하면 됩니다. IoU가 더 높을수록 바운딩박스 값은 더욱 정확합니다. 이것이 바로 위치 측정을 정확하게 매핑하는 한 방법입니다. 이렇게 하여 알고리즘이 객체를 정확하게 감지하고 위치를 측정하는 횟수를 세어서 객체가 정확하게 위치 측정되는지 아닌지 그 정의를 이용하면 정확성 있게 물체의 위치를 측정할 수 있습니다. 다시 말하지만, 0.5는 사람이 선택한 관습적인 숫자입니다. 특별하게 깊이 있는 논리적 이유가 있는 것이 아닙니다. 또한 더 정확하게 하고 싶으시다면 0.6 같은 다른 역치값을 선택해도 괜찮습니다. 때로 0.6이나 0.7같은 더욱 엄격한 기준을 사용하는 사람들을 많이 보게 되기도 합니다. 0.5 아래로 역치값을 떨어뜨리는 사람은 거의 찾아볼 수가 없죠. 이제, IoU의 정의를 내리는 것에 동기 부여하는 것은, 객체 위치 측정 알고리즘이 정확성 여부를 평가하는 방법입니다. 그러나 더 일반적으로, IoU는 두 경계 상자 사이의 중첩되는 척도입니다. 두 개의 상자가 있는 경우 교차점을 계산하고 결합 부분을 계산하고, 두 영역의 비율을 계산할 수 있습니다. 그리고 이것은 또한 이 두 상자가 서로 얼마나 비슷한지를 측정하는 방법이 기도합니다. 이걸 다음 강의에서 다시 보긴 하겠지만, 그리고 non-max 억제에 대해 이야기 할 때 이것은 IoU 즉 Intersection over Union 을 위한 것입니다. IoU의 약속 어음 개념과 혼동해서는 안되는대요, 만약 누군가에게 돈을 빌려줄 때, ‘저는 이만큼의 돈을 당신에게 빚 졌습니다'라고 쓰여있는 메모를 주는 것, 이것은 완전히 다른 개념입니다. 이 두 가지가 비슷한 이름을 가지고 있다는 건 좋지만 말이죠. IoU의 정의는 Intersection of Union입니다. 다음 강의에서는, 다음 비디오에서는 YOLO의 아웃풋을 훨씬 더 멋지게 만드는 데 사용할 수 있는 도구, non-max 억제에 대해 논의해 보도록 하겠습니다. 다음 강의로 가시죠. 다음 강좌로 가보시죠