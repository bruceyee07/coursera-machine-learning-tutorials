こんにちは そしておかえりなさい 今週は 物体検出について学ぶ それは ここ２～３年前で 急成長して 非常にうまく 動くようになった コンピュータ ビジョンの１分野だ 物体検出を作り上げるために 最初に学ぶのは 物体の位置決めだ その意味を定義することから始めよう あなたは 既に 画像分類には詳しいね
そのアルゴリズムは この写真を見て これは車だ と言う任を負っている これが分類だった このビデオの後の方で ニューラルネットワークの作り方を学ぶ問題は 位置決め付きの分類だ つまり これは車だ とラベル付けするだけでなく アルゴリズムは 画像中の車の周りに 境界箱を置いたり 赤い四角形を描いたりする必要がある だから これは 位置決め付き分類問題ということになる 位置決めという用語は 写真のどこに 見つけた車があるか ハッキリさせることだ 今週後半で 検出問題について学ぶ その際は 複数の物体が写真の中にあって それらを全て検出し 位置を全て特定しなくてはならない もし これを 自動運転アプリケーションのために 行うのなら 他の車を検出するだけでなく 歩行者 バイク その他の物体も 検出しなくてはならないだろう それは 今週後半でね さて 今週使う用語では 分類と 位置決め付き分類では 単独の物体を使う 大抵は 画像の中央にある １つの大きな物体を 検出するか 検出と位置決めを行うことになる 対照的に 検出問題では 複数の物体がある 実際 異なる分野の複数の物体になるだろう 単一画像の中で 画像分類について 学んできたアイデアは 位置決め付きの分類に 有効だ それから 位置決めで学ぶアイデアが 検出で有効だということも明らかになるだろう では 位置決め付き分類についての話から始めよう 画像分類問題には 既に詳しいよね 写真を 複数層の ConvNet に
我らの ConvNet に入力し 結果は 特徴ベクトルとなり それを ソフトマックスユニットに喰わせて 予測クラスを出力する もし 自動運転車を作っているのなら 多分 物体のカテゴリは 次のようだろう 歩行者 車 バイク もしくは 背景 これは 上のどれでも無いという意味だ つまり 歩行者も 車も バイクも いない場合
出力は "背景" になるだろう ４つのクラスがあるので ソフトマックスが４種類の出力を行う これは 標準的な分類パイプラインだ 写真中の車の位置決めもしたい場合は どうだろう それを行うにのに ニューラルネットワークを変更して 境界箱出力のための 出力ユニットを少し増やすことができる 特に ニューラルネットワーク出力に 数を４つ多く持つことができる それらを bx by bh そして bw と呼ぼう この４つの数は 検出物体の境界箱を示すパラメータだ このビデオでは こんな表記を使うつもりだ 画像の左上は 座標 (0, 0) と示す 右下は (1, 1) よって 境界箱を指定する際は 赤い箱を指定する際は 中央の点を指定する それは (bx, by) で 高さは bh 幅は bw だ
この境界箱のね そして 学習セットは 物体のクラスラベルだけでなく それは ニューラルネットワークが予測しようとしているものだけど ４つの追加の数も含んでいる 境界箱を与えてくれる数だ
教師有り学習を使って アルゴリズムが クラスラベルだけでなく ４つのパラメータも出力するようにする そして 検出した物体の境界箱がどこかを教えてくれる この例では 理想の bx は 0.5 程だ なぜなら 画像の右に半分程度行った所にあるから by は 約 0.7 だろう なぜなら 70% 程下がった所にあるから bh は 約 0.3 だろう なぜなら この赤い四角の高さは 画像全体の高さの 30% 程だから そして bw は 約 0.4 だろう なぜなら 赤い箱の 幅が 画像全体の幅の 0.4 程度だからだ じゃあ どのように 目的ラベル y を定義するかということについて
これを ちょっと 定式化してみよう 教師有り学習のタスクとしてね 覚えているだろうけど ４つのクラスがあって ニューラルネットワークによって 今度は この４つの数が クラスラベルと同じく 出力される クラスラベルは クラスの確率かもしれない 目的ラベル y を次のように定義しよう それは ベクトルになる 最初の要素 Pc は 物体があるか だ もし 物体が 分類 １ ２ もしくは３ なら Pc = 1 だ もし 背景なら つまり 検出しようとしている物体が存在しなければ Pc は 0 となる Pc は 物体の存在確率を 表すと考えられる ここで 検出しようとしている クラスの何かである確率だ つまり 背景 以外のクラスだ 次に もし 物体が存在するなら 検知した物体の 境界箱 bx by bh そして bw そして 最後に もし 物体が存在するなら もし Pc = 1 なら c1 c2 そして c3 を出力して それが クラス１ クラス２ もしくは クラス３かを知らせて欲しい それが 歩行者か 車か バイクか だ 我々が 注視している問題を思い起こせば 画像には たった１つの物体が含まれている 最大でも 写真には これらの物体の内の１つしかない この 位置決め付き分類問題ではね それじゃ 何個か例を見てみよう これが 学習セットの画像だ
これが x だとすると y は 最初の要素 Pc は = 1 になる なぜなら 物体があるから
それから bx by by そして bw が 境界箱を示す よって ラベル付けした学習セットは ラベルとして 境界箱を必要とする それから 最後に これは車だ よって クラス２ つまり C1 は 0 なぜなら これは 歩行者じゃないから c2 は 1 になる なぜなら 車だから
c3 は 0 になる なぜなら バイクじゃないから つまり c1 c2 そして c3 の中で 最大で １つが １ になる これが 画像に物体がある場合だ 画像に物体が無い場合は どうなるだろう？ この学習例の場合 x は何になるか？ この場合 Pc は 0 と等しくなる 残りの要素は 気にしない つまり これら全てに ? マークを書く これは 気にしないということだ 画像に物体が無ければ ニューラルネットワークが出力する境界箱がどうなるかも ３つの物体 c1 c2 c3 のどれになるかも 気にしない ラベル付けした学習セットができた
これが x 入力画像 と y クラスラベルを 物体がある時と 無い時の 両方の画像に対して 作る方法だ そして このセットが 学習セットを定義する 最後に 次に 損失関数を定義しよう ニューラルネットワークの訓練に使うからね 真値のラベルは y で ニューラルネットワークの出力は yハットだった 損失はどうなるべきだろうか？ ええと もし ２乗誤差を使うなら (y1ハット - y1) ^ 2 + (y2ハット - y2) ^ 2 + ... + (y8ハット - y8) ^ 2 ここでは y に ８つの要素があるよね だから 異なる要素の２乗の合計で こうなる これが y1 = 1 の時の損失だ つまり 物体がある場合のだ つまり y1 = Pc の時のだ Pc = 1 だ
画像中に物体があれば そうなら 損失は 全ての異なる要素の２乗和とすることができる もう１つの場合 もし y1 = 0 なら つまり もし Pc = 0 なら その場合は 損失は 単に (y1ハット - y1) ^ 2 としてよい なぜなら この２番目のケースでは
残りの要素全て 気にしなくてよいからだ 気にすればよいのは この場合 どのくらい正確に ニューラルネットワークが Pc を出力するかということだけだ 要は もし y1 = 1 この場合は ２乗誤差を使うことができる
８つの要素の 予測値と 真値から出した２乗偏差を課すことができる 一方 y1 = 0 の時 ２番目では ８つの要素は気にしないで 気にすればいいのは ニューラルネットワークが どのくらい正確に y1 を見積もれるかで それは Pc のことだ 詳細を全て知りたい人用に ちょっとだけ追加のコメントを ここでは 記述を簡単にするため ２乗誤差を使った 実際には 多分 c1 c2 c3 ソフトマックス出力には 対数尤度 損失を使うだろう これらの要素の1つには 通常 ２乗誤差や ２乗誤差のようなものを使う可能性がある 境界箱の座標にはね そして Pc には ロジスティック リグレッション損失のようなものを使うだろう でも ２乗誤差を使っても 多分 OK だ これが どのようにニューラルネットワークで 物体の分類だけでなく 位置決めも行う方法だ ニューラルネットワーに 多くの実数を出力させるというアイデアは 物が写真の中のどこになるか教える 非常に強力なアイデアだと分かる 次のビデオでは この ニューラルネットワークに 一連の実数を出力させるというアイデア の使用例を いくつか共有したい
それは ほぼ回帰タスクとして コンピュータ ビジョンのあらゆる場所で 非常に強力に使われている では次のビデオにいきましょう