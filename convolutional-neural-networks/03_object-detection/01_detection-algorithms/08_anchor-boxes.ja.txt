これまでに学んできた物体検出の 問題点の１つは それぞれの格子セルが たった１つの物体しか検出できないことだ １つの格子セルに 複数の物体を検出させたい場合はどうするのか？ こうすることができる アンカーボックス というアイデアを使うことができる 例を見る事から始めよう。 このような画像があるとする そして この例では 3 x 3 格子を使っていく 歩行者の中心と 車の中心は ほぼ同じ場所にあって 両者は 同じ格子セルに紐付くだろう この格子セルは y 出力のこのベクトルでは ３つのクラスを検出するけど 歩行者 車 バイクの３つを ２つの検出は 出力できない だから 出力に ２つの内の１つを選ばなくてはならない アンカーボックスのアイデアを使って こんなことを行う アンカーボックス もしくは アンカーボックス形 と呼ばれる２つの異なる形を定義する それから 次に行うのは ２つの予測を ２つのアンカーボックスに紐つけることができる 一般的には もっと多くのアンカーボックスを使うだろう ５つとか それ以上を でも このビデオでは 説明を簡単にするため ２つのアンカーボックスを使う それから 分類ラベルを定義する 左のこのベクトルの代わりに これを２回繰り返す よって Pc bx by bh bw c1 c2 c3
これらは アンカーボックス１に紐付く８つの出力だ それから これを繰り返す Pc bx から続けて c1 c2 c3
アンカーボックス２に紐付く 別の８つの出力だ 歩行者の形は アンカーボックス２の形よりも アンカーボックス１のに より似ているので この８つの数を使って Pcが１の時のことを 表現できる そう 歩行者がいる これらを使って 歩行者の周りの 境界箱を示し それから これらを使って その物体が歩行者であることを示す それから 車は 車の周りの箱は アンカーボックス１より アンカーボックス２の形に より似ているので これを使って ２番目の物体が車であることを示せて 境界箱など 検出した車に関する全てのパラメータを示せる では まとめると 前に アンカーボックスを使う前は 次のようにしていた 学習セット 学習セットの画像にある各物体について その中心がある格子セルを 物体に紐つけた つまり 出力 y は 3 x 3 x 8 だった
なぜなら 3 x 3 格子だから そして 各格子の位置に 出力ベクトルを持っていた
それは Pc と 境界箱 と それに c1 c2 c3 だ アンカーボックスを使うと 今度はこうなる 今度は 各物体は 前と同じく 同じ格子セルに紐付く 物体の中心点がある格子セルと紐付く しかし 物体は 格子セルに紐付くと共に 物体の形と 最も IoU の高いアンカーボックスにも紐付く よって ２つのアンカーボックスを持つ 物体を見て もし この形の物体があれば ２つのアンカーボックスで １つのアンカーボックスは このアンカーボックス１の形で アンカーボックス２はこの形で それから ２つのアンカーボックスのどちらが 真の境界箱と より高い IoU を持っているか見る それが どちらであるにせよ その物体は 格子セルにだけでなく １つのペアに紐つけられる それは (格子セル , アンカーボックス) ペアに紐つけられる このようにして 物体が 目的ラベルの中に表される それから 今度の出力 y は 3 x 3 x 16 だ なぜなら 前のスライドで見たように y は 今度は 16次元だからだ もし望むなら これを 3 x 3 x 2 x 8 で表すこともできる なぜなら ２つのアンカーボックスがあり y は ８次元だからだ y の次元が８なのは ３つの物体があるからだ もし もっと多くの物体があれば y の次元は もっと高くなる じゃあ 完全な例を見てみよう この格子セルで y がどうなるか示そう 歩行者は アンカーボックス１に より似ているから 歩行者に対しては このベクトルの上半分を割り当てよう そう ここには物体がある 歩行者に対応した境界箱がある 歩行者を クラス１だとすると C1 は 1 そして 0 0 そして 車の形は アンカーボックス２に より似ている よって このベクトル残りは 1 そして 車に対応した境界箱 そして 車は C2 よって 0 1 0 結局 これが この矢印が指している 下中央の格子セルのラベル y だ さて もし この格子セルに 車しか無くて 歩行者がいなかったら どうなるだろう？ 車しか無ければ 車の周りの境界箱の形は やはり アンカーボックス２に より似ている よって 目的ラベル y は もし 車しか無くて 歩行者が無くなれば アンカーボックス２については 同じままで アンカーボックス２に対応するのは ベクトルのこの部分でしょ アンカーボックス１に対応するベクトルの部分については そこには 何の物体も無いということだから Pc は 0 そして 残りについては 気にしない じゃ いくつか 詳細を付け加えておく ２つのアンカーボックスがある時に ３つの物体が同じ格子セルにあったら どうするか？ その場合 このアルゴリズムでは うまく処理できない 起こらないことを願う でも そうなったら このアルゴリズムには それを処理するうまいやり方が無い その場合には 何らかのタイ・ブレーク処理を実装する 同じ格子セルに ２つの物体が紐付く場合は どうなるだろうか？ ただし それらは 同じアンカーボックス形をしている 再び このアルゴリズムでは うまく処理できないケースだ そうなる場合は 何らかのタイ・ブレーク処理を実装する 自分のデータセットで そんなことが起こらないことを願う 全く起きないことを願う そして それが 性能に大きく影響してはいけない アンカーボックスは 以上だ 同じ格子セルに ２つの物体がある場合を 処理できるような アンカーボックスにしようと思っていても 実際に それが起こるのは稀だ 特に 3 x 3 格子ではなく 19 x 19 などを使っていればね ２つの物体が 361個のセルの中の１つに 同じ中心点を持つ確率は 起こり得るけども そんなに頻繁には起こらない アンカーボックスを使うのは それが より良い結果をもたらすのに 学習アルゴリズムを専門化するからだ 特に データセットに 背の高い 歩行者のような 痩せた物体があり 車のような 幅広の物体もある場合 これは 学習アルゴリズムを専門化させ ある出力を 特化させて 車のような白く太い物体を検出したり 歩行者のような 背の高い痩せた物体を検出する そんな出力に特化させる では最後に どのようにアンカーボックスを選ぶのか？ 人々は 手で選んだり ５~１０のアンカーボックスを選んぶことが多い それらは 様々な形をしていて 検出したい物体の種類に対応している さらに進んだバージョンでは 機械学習の他の知識のある人向けの 上級者向けのコメントだけど これを とてもうまくやる方法が 一連の YOLO 研究論文の後の方にある それは k-means アルゴリズムを使う方法だ 検出したい２種類の物体の形をグループ化し それを使って アンカーボックスのセットを選ぶのに使う それが 最も典型的な 検出しようとする 複数の 数十の 物体の代表になる これが アンカーボックスを自動的に選ぶ もっと進んだやり方だ もし 手で様々な形を選んで 物体の形のセットを拡張するなら 背の高い痩せたものや 太ったもの 白いものを検出できると考えるだろう それも 同じように うまく行くだろう アンカーボックスは以上だ 次のビデオでは これまで見てきたこと全てを YOLO アルゴリズムに繋げてみよう