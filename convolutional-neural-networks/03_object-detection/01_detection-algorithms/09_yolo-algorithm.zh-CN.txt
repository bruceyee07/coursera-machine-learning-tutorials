你已经认识了目标检测的大部分要素 在这个视频中 让我们综合所有的要素 来组成YOLO目标检测算法 首先 让我们来看看你该如何构建你的训练集 假设你想训练一个算法 来检测三个目标 行人 汽车 摩托车 并且你不需要特别地为背景分配第四个类标签 所以就总共只有3个类标签 如果你使用两个锚框(anchor boxes) 那么输出y会是3x3 因为你使用了3x3的网格 乘2 因为这是锚(anchor)的数量 乘8 因为这是这个的维度 8其实是5加上类别的数量 所以5是因为你有PC和边界框 这是5 然后C1 C2 C3 这个维度等于类的数量 并且你也可以将它看成3x3x2x8 或者3x3x16 为了构造训练集 你遍历这九个网格然后构造合适的目标向量y 以这第一个网格为例 在这个网格中没什么值得检测的 三个类别 行人 汽车 摩托车 没有一个出现在左上角的网格 因此 对应这个网格的目标y等于这个 第一个锚框的Pc是0 因为没有相关目标在第一个锚框 并且第二个锚框(的Pc)也是0 所以所有其他的值都不重要 现在 绝大部分的网格中没有任何目标 但对于这一个框 你会用这个目标向量y 所以假设你的训练集有一个这样的包含汽车的边界框 宽度比高度多一点 所以如果你的锚框是 这是锚框一号 这是锚框二号 这样红色框和锚框二号的IoU稍微高一点 所以汽车可以和这个向量低一点的部分联系起来 注意这样锚框一号的Pc就是0 这样你不用关心所有这些元素 然后这个Pc等于1 这样你应该用这些来具体表示红色边界框的位置 然后具体表示正确的目标是类别二 是一辆汽车 所以你遍历这些 并且对于九个网格位置的每一个位置 你都会得到一个这样的向量 一个16维的向量 这就是为什么最终输出的大小会是3x3x16 哦并且通常为了简洁 在幻灯片中我使用3x3的网格 实际上它更通常是19x19x16 或者事实上如果你使用更多的锚框 也许是19x19x(5x8) 因为5x8=40 所以它会是19x19x40 这是如果你使用5个锚框 所以这是训练 并且你训练卷积神经网络(ConvNet)输入一个图片 也许是100x100x3 并且你的ConvNet会最终输出这个输出大小 如同我们的例子 3x3x16或者3x3x2x8 接下来 让我们看看你的算法如何进行预测 输入一张图片 你的神经网络会输出这个3x3x2x8大小 对于九个网格中的每一个 你会得到一个这样的向量 所以对于左上角的这个网格 如果这里没有目标 希望你的神经网络会在这里输出0 这里也是0 然后他会输出一些其他的值 你的神经网络不能输出一个问号 不能输出一个“无所谓“ 所以我会给剩下(位置)的一些数字 但是这些数字基本上都被无视 因为神经网络告诉你 这里没有目标 所以输出是一个边界框还是这里有一辆车都不重要 基本上就是一些数字集 或多或少的噪点 相反 对于这个框 希望那个左下角框的y值 会是比如说0 对于锚框1 然后就输出一些数字 只是噪点 希望 你也会输出一些数字 能与一个非常准确的车的边界框 所以这就是神经网络如何做预测 最终 你会运行非最大值抑制(non-max suppression) 让这个变得好玩些 我们来看看一个新的测试图片 这就是你如何运行非最大值抑制 如果你使用两个锚框(anchor boxes) 对于九个网格中的每一个 你会得到两个预测的锚框 他们中的某些会有很小的概率 非常低的Pc 但是你还是会从九个网格中的每一个得到两个预测的锚框 比如说 这是你得到的锚框 并且注意有一些锚框 会超过原始网格的高和宽度 然后 你去掉所有低概率的预测 所以去掉那些甚至神经网络都说 这个目标也许不在这的边界框 就是去掉这些 然后最终如果你有3个试图检测的类别 行人 汽车 和摩托车 你该做的是 对于三个类别的每一个 单独对被预测的类别 执行非最大值抑制 对行人的预测使用非最大值抑制 对汽车使用非最大值抑制 对摩托车使用非最大值抑制 运行三次来产生最终的预测 所以希望这个的输出 能检测出这个图片上所有的汽车和所有的行人 所以这就是YOLO目标检测算法 所有最有效的目标检测算法之一 也包含了许多 整个计算机视觉与目标检测相关的最好的想法 并且你有机会在这周的题目练习中 练习亲自实现它很多的部分 所以我希望你享受这周的题目练习 在这之后紧接着还有一个可选学习的视频 你可以根据你的意愿选择看或者不看 但是不管如何 我非常期待在下周见到你