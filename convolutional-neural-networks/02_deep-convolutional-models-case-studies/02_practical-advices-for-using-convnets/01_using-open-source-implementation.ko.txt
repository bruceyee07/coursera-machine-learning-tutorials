이제, 몇 가지 매우 효과적인 신경망과 컨볼네트 아키텍처에 대해 배웠습니다. 다음 강의에서는 오픈 소스 실행에 대해 실용적인 조언을 여러분화 공유하고 싶습니다. 많은 신경망들은 복제하기가 어렵거나 까다롭습니다. 학습률 감소나 그 외 많은 다른 것 처럼 하이퍼 파라미터 조정에 대한 세부 사항들이 성능에 차이를 만들기 때문입니다. 이런 이유들 때문에, 심지어 상위권 대학교에서 AIO 딥러닝 박사과정 학생들조차도 다른 사람이 쓴 잘 다듬어진 논문을 모사하는 것이 어렵다는 걸 발견했습니다. 다행스럽게도, 많은 딥러닝 연구자들이 GitHub과 같은 인터넷에서 자신의 저작물을 정기적으로 오픈 소스합니다. 그리고 여러분이 혼자 작업할 때에, 여러분의 코드를 오픈 소스 커뮤니티에 다시 보내 기여하는 것이 좋겠습니다. 그러나 만약 여러분이 사용해보고 싶은 결과들이 있는 연구 논문을 만나면, 여러분이 고려하셔야 할 한 가지가 있는데요, 종종 제가 하는 일은, 인터넷에서 오픈소스실행를 찾아보는 것입니다. 왜냐하면 만약 그 저자의 실행를 얻을 수 있으면, 처음부터 재실행 하는 것 보다 훨씬 더 빠르게 진행할 수 있을테니까요. 때로는 처음부터 재실행하는 것 또한 좋은 연습이 될 수 있긴 하지만요. 이미 여러분이 GitHub를 어떻게 사용하는지에 익숙하시다면, 이 강의는 어쩌면 여러분에게는 덜 필요하거나 덜 중요할 수도 있겠습니다. 하지만, GitHub에서 오픈 소스 코드를 다운로드 하는 것이 익숙치 않으시다면, 쉽게 하는 방법을 간단히 보여드리도록 하죠. 여러분이 잔여망(residual network)에 관심이 있어서 사용해보고 싶다고 가정해 보겠습니다. 자, GitHub에서 residence를 검색해 봅시다. 실제로 GitHub에 많은 residence에 대해 많이 실행된 것을 볼 수 있습니다. 여기서 첫 번째 URL로 이동하려고합니다. 이것은 residence를 구현하는 GitHub 저장소입니다. 아래로 스크롤하면, GitHub 웹 페이지와 함께 작업이나 특정 실행에 대해 설명하는 텍스트가 표시됩니다. 이 특정한 저장소, 이 특정 GitHub 저장소는 실제로 ResNet 논문의 원저자에 의해 작성되었습니다. MIT가 라이센스를 가진 이 코드, 이 라이선스를 클릭하면 이 라이센스의 의미를 살펴볼 수 있습니다. MIT 라이센스는 보다 허용적이거나 혹은 개방적인 오픈 소스 라이센스 중 하나입니다. 이제 코드를 다운로드하고 이 링크를 클릭하십시오. 이렇게 하면, 코드를 다운로드하는 데 사용할 수있는 URL이 제공됩니다. 이 버튼을 클릭하여 클립 보드에 URL을 복사 한 다음 여기로 이동합니다. 그리고 나서, git clone을 입력 한 다음 URL에 대해 Ctrl + V를 입력하고 Enter 키를 누릅니다. 이렇게 하여, 몇 초 만에 다운로드가 가능하여, 이 저장소를 로컬 하드 디스크에 복제했습니다. 이제 디렉토리로 가서 살펴 보겠습니다. Windows보다 Mac에서 더 많이 사용하지만, 그래도 봅시다. prototxt로 이동하고.. 네트워크를 지정하는 파일이있는 곳이군요. 이 파일을 살펴 보겠습니다.이 파일은 ResNet의 세부 구성을 101 개의 레이어로 지정하는 매우 긴 파일입니다. 이것은 이 웹 페이지에서 보았던 것으로 기억하는데요. 이 특정 실행은 Cafe 프레임 워크를 사용합니다. 그러나 다른 프로그래밍 프레임 워크를 사용하여이 코드를 구현하려는 경우에도, 이것을 찾으실 수 있을겁니다. 따라서 컴퓨터 비전 응용 프로그램을 개발할 때, 매우 일반적인 작업 흐름은 원하는 아키텍처를 선택하는 것입니다. 아마도 이 강의들에서 배웠던 아키텍처 중 하나 일 수 있겠죠. 또는 친구 또는 일부 글에서 들었을 수도 있습니다. 오픈 소스 실행을 찾아서 GitHub에서 다운로드하여 거기서 만들기 시작하십시오. 이렇게하는 것의 장점 중 하나는 이러한 네트워크들은 훈련시키는 데 시간이 오래 걸리는 경우가 있고 누군가는 다른 네트워크에서 여러 GPU와 매우 큰 데이터 세트를 사용하여 이러한 네트워크를 사전에 연습할 수도 있다는 것입니다. 이제 여러분은 이러한 네트워크를 사용해서 전이 학습(transfer learning)을 할 수 있습니다. 그것은 다음 강의에서도 다루어 보겠습니다. 물론, 여러분이 처음부터 이러한 것들을 구현하는 컴퓨터 비전 연구원이라면 워크 플로우가 달라질 것입니다. 그리고 그렇게 한다면, 여러분은 오픈 소스 커뮤니티에 여러분의 작업을 다시 기여할 수 있습니다. 그러나 아주 많은 비전 연구자들이 이러한 아키텍처를 구현하는 데 아주 많은 시간을 투자했기 때문에, 오픈 소스 구현으로 시작하는 것이 더 나은 방법이거나 새로운 프로젝트를 시작하는 확실한 방법이라는 것을 알게 되었습니다.