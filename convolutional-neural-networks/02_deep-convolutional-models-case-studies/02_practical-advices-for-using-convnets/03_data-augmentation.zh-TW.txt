大部分的電腦視覺任務可以使用更多的資料 所以資料擴增是一種技術 通常用來增進電腦視覺系統的效能 我認為電腦視覺是一項相當複雜的工作 您必須輸入這個影像 所有這些像素，然後找出是什麼在這照片上 似乎是您需要學習一種相當複雜的函數來作用 實作上，幾乎更多的資料都會對
所有的電腦視覺有所幫助 這不像其他領域，有時候您可以有足夠的資料 不會對於取得更多資料有那麼大的壓力 而在今天，電腦視覺的資料 對於大部分的電腦視覺問題 我們總是覺得資料量不夠 對於所有的機器學習而言，這不一定是對的 但對於電腦視覺而言，這是真的 意思是當您訓練電腦視覺模型時 通常資料擴增是有幫助的 而即便您使用轉移學習 使用別人預先訓練的權重來開始 或是從零開始訓練一個新的模型，都是真的 我們來看一看在電腦視覺的資料擴增 或許最簡單的資料擴增方式是對垂直軸做鏡射 當如果您有這個例子在您的訓練集 您垂直的翻轉這個影像變成右邊 對電腦視覺的任務來說 如果左邊的照片是貓，鏡射的結果也同樣是貓 而如果鏡射的運算 會保存影像中所有的特徵 這就會是一個很好的數據擴增技術 另一個常見的數據擴增技術是隨機裁切 給予這個資料集 我們選一些隨機剪裁 所以您或許選擇這裡 拿這個剪裁，或者拿這部分，成這個剪裁 拿這裡，成為這個剪裁，所以這 給您不同的例子來餵進您的訓練例子 一種不同的隨機剪裁在您的資料集 隨機剪裁並不是一種完美的資料擴增方式 如果隨機剪裁的結果已經不像貓 但實作上，這樣方式作用很好，只要 您的隨機剪裁佔真正影像的合理大小子集 所以鏡射跟隨機剪裁是最常用的，理論上 你還可以旋轉、 剪切影像 就像您對影像這樣做 這樣歪曲 利用不同樣式的局部扭曲等等 全部一起試用也無妨 實作上似乎比較少這樣做 或許因為它們的複雜度 第二種常用方式的資料擴增是色彩偏移 給一張這樣的照片 假設您加入 R G 跟 B 通道一些扭曲 這個例子，我們在 紅色跟藍色通道加入減去綠色通道的值 所以紅色跟藍色變成紫色 這會讓整個影像帶一點紫色，而 建立一個扭曲的影像在訓練集上 為了描述起見，我 在色彩上做了相當大的改變，實作上 您將 R,G, 跟 B 用一些分佈修改，可以改變小一點 但您做的是，用不同的值在 R, G, B 上，用它們來扭曲色彩通道 第二個例子 我們讓它們少一點紅 多一點綠跟多一點藍 所以讓影像偏黃 這個，我們讓它多一些藍 就只有多一點 實作上，R G, B 的數值會從一些機率分佈而來 這樣做的動機是，或許陽光會 偏黃，或許室內照明會偏黃 這很容易會改變影像的色彩 但貓的身份，或者內容的身份 y 標籤，應該要一樣 所以加入這些色彩的扭曲，或者說色彩的偏移 會讓您的學習演算法對於
影像的色彩的改變更健全 給這個課程比較進階學生的一些註解 如果您不懂我將要說的（紅色部分），沒有關係 有不同的方式來對 R, G, 跟 B 取樣 一種方式來建置色彩扭曲是
使用一個稱為 PCA 的演算法 這是稱為 主要成分分析 (Principle Component Analysis) 是我在 Coursera 上的機器學習課程中 (ml-class.org) 談過的 但這些細節實際上是在 AlexNet  論文中 有時候稱為 PCA 色彩擴增 但大概的想法對於 PCA 色彩擴增是，舉例 如果您的影像主要是紫色 如果它主要是紅色，藍色的色調 比較少綠色 那 PCA 色彩擴增 會對紅色跟藍色減去很多 對於綠色改變比較小 似乎要讓全部的色彩，色調一致 如果您不明白這些，不用擔心 但如果您在網上搜尋 您願意的話，您也可以讀一下 AlexNet  論文 您也可以找到一些開源的 PCA 色彩擴增的建置 直接使用 所以，您或許將您的訓練資料儲存在硬碟上，使用這個符號 這個圓筒形符號代表您的硬碟 而如果您有小的訓練集 您可以做任何事，您會沒事的 但如果是很大的訓練集，人們通常會這樣建置 也就是您或許有一個 CPU 執行緒，
不斷地從您的硬碟載入影像 因此，您會有一個影像流
從您的硬碟出來 而您可以做的是或許一個 CPU 執行緒來做這個扭曲 也就是隨機剪裁 或者色彩推移，或者鏡射 但對於每個影像 您或許最終有一些扭曲版本 假設這個影像 我將它鏡射，跟使用色彩推移等等 如果這個影像最終被色彩推移 您會有一個不同顏色的貓 因此您的 CPU 執行緒不斷地載入影像同時 建置一些需要做的扭曲，
變成一個批次，或者很多批次的資料 而這些資料則不斷地傳到一些執行緒或者其他程序 來做訓練，這可以用 CPU 來做，或者 越來越多人使用 GPU 
如果您有很大的神經網路要訓練 所以，相當常見的方式來做 資料擴增是用一個執行緒 或更多的執行緒，來 負責載入資料跟建置扭曲 然後傳給其他的執行緒或者 其他程序來做訓練 而通常，這個跟這個 可以平行執行 所以這就是資料擴增 而類似其他訓練深度神經網路般 資料擴增程序也會有一些超參數，像是 多少色彩推移來建置，真正用什麼參數來做隨機剪裁 類似電腦視覺其他部分 一個好的開始的地方或許是 使用其他人的開源建置
對於他們如何使用資料擴增 但當然，如果您想捕捉更多的變異 您想其他人的開源建置並沒有足夠變異 或許自己調整這些超參數也是合理的 如此，我希望您會使用資料擴增 來讓您的電腦視覺應用作用得更好