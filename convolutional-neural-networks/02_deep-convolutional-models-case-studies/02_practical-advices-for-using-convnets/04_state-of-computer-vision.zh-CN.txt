深度学习已被成功地应用于 计算机视觉 自然语言处理 语音识别 在线广告 物流等许多许多问题。 对于深度学习在计算机视觉中的 应用及现状 有几个独特的方面 在这个视频中 我将与大家分享我对深度学习 在计算机视觉中的一些观察 希望可以对你做相关阅读时有所帮助 帮助你了解其中的设计理念 以及你如何搭建用于计算机视觉的系统 你可以认为大多数机器学习问题是 从拥有相对较少数据 到拥有大量数据之间的问题 例如 我认为现在我们已有相当大量的 用于语音识别的数据 相对于问题的复杂程度来说 即便如今有相当数量的数据 可用于图像识别或图像分类 由于图像识别是一个复杂的问题 需要处理所有像素然后弄清楚它是什么 即使在线数据集已然相当大了 有上百万图像 感觉上我们还希望有更多的数据 还有一些问题 比如目标检测 我们只有更少的数据。 给大家一个小提示 图像识别的问题就是 给定一幅画 回答图中是不是一只猫的问题 目标检测 是看图片然后是用 一些矩形框(称作边界框)告诉你 目标(例如汽车)在图片中的什么位置 因此 由于获得这些边框的成本 比标注目标和画出边界框的成本更高 相比于图像识别 我们往往用更少的数据做目标检测 我们会在下周讨论目标检测 如果纵观机器学习问题的谱系 你会看到 一般情况下 当你有很多数据时候 你往往会发现人们 差不多使用比较简单的算法 以及更少的人工设计也就可以了 所以 不太需要针对问题来仔细地设计特征 取而代之 当你有大量数据的时候 你可以用一个巨大的神经网络 甚至更为简单的结构 就让一个神经网络 学习我们想要学习的 相比之下 当你没有那么多数据时 通常会看到人们做更多的人工设计 说得更通俗一点 就是做更多的手工处理 但我认为 当你没有多少数据时 人工设计实际上是获得良好效果的最好方法 所以 当我看机器学习的应用时 我想 通常学习算法有两个知识来源 一个知识来源是标记的数据 实际上就是用于监督学习的 (x, y) 第二个知识来源是人工设计 而且有很多方法可以用来手工设计一个系统 它可以从精心设计特性 到精心设计网络结构 亦或系统的其他组件 所以 当你没有太多的标记好的数据时 就需要在人工设计上多下功夫 我认为 计算机视觉正试图学习一个非常复杂的函数 我们经常觉得没有足够的 用于计算机视觉的数据 尽管数据集正在变得越来越大 通常 我们还是没有满足需要的那么多的数据 这就是为什么数据计算机视觉一直以来 都更为依赖于人工设计 我认为这也是为什么在计算机视觉领域 要么是开发了相当复杂的网络结构 因为在缺乏更多的数据的情况下 获得良好性能的途径就是花更多时间 去精心设计 或者是胡乱摆弄网络结构 千万不要以为我是在贬损人工设计 那完全不是我的意图 当你没有足够的数据时 人工设计是一项非常难的 且非常需要技巧的工作 它需要很深入的洞察力 那些有对人工设计有深刻见解的人会获得更好的效果 并且 在没有足够数据的情况下 对项目而言这也是一个巨大的贡献 当有很多的数据时 我便不会在人工设计上花时间 而是会把花时间花在建立学习系统上 但从历史的角度看 我认为对于计算机视觉使用非常小的数据集的担忧 以及对一直以来计算机视觉文献 依赖于大量的人工设计的担忧 即使最近几年 数据的量级 伴随着正确的计算机视觉任务的有了显著的增加 我认为这已经导致 一直以来在做的人工设计的数量有了明显减少 但仍然有很多网络结构和计算机视觉方面的人工设计 这就是为什么仍能在计算机视觉领域 看到非常复杂的超级疯狂的选择 比在很多其它学科所做的更为复杂 实际上 因为你通常有 比图像识别数据集更小的目标检测数据集 当谈及目标检测时 即下个星期的任务 你会看到算法 变得更为复杂 并具有更为特定化的组件 所幸的是 当只有很少量数据时 有一个能提供很大帮助的东西 就是迁移学习 我想说 之前演讲稿中关于tigger misty的例子 这些都不是检测问题 你只有非常少的数据 迁移学习会有很大帮助 那是另一套技术 被大量使用于只有相对很少数据的情况 如果你看一下计算机视觉文献 看一下那里都有什么思路或者点子 有也会发现 人们真的是充满激情 他们相当投入 并且在标准化的基准数据集 以及赢得比赛方面确实做得很好 对于计算机视觉的研究者来说 如果你在基准数据上做得很好 就很容易发表文章 所以 很多人关注于在那些基准数据上得到好的结果 这样做的好处是 它帮助整个学科领域搞清楚那些是最有效的算法 但你也看到 在文章中人们做一些工作 是为了让你在基准数据上获得好结果 但你不会真的把这些算法用于 你现实中要发布的产品或者系统上 因此这儿我有一些对在基准数据上做的好的小建议 如果我要将一个系统放到实际服务客户的产品中 这些东西我自己基本上是不曾也不会用的 但也有例外 一个是 集成 它的意思是 在弄清楚了你要什么神经网络 独立地训练多个神经网络 然后对它们的输出求平均作为结果 随机初始化3个 5个或者 7个神经网络 然后训练所有这些神经网络 然后对它们的输出求平均 顺便说一下 这个非常重要 要对它们的输出 ŷ 求平均， 不要对它们的权重求平均 那样是行不通的 比方 你会说 7个神经网络 给出7个不同的预测，然后对它们求平均。 这个将你的结果提升可能%1或2% 在某些基准数据测试上 有些许更好的结果 这会让你做得稍微好一点儿 有时候或许就是%1或2%的提高 就确实能帮助你赢得一个比赛 但是 因为集成意味着要在每幅图像上进行测试 有或许需要将一幅图像输入到 3到15个不同的神经网络 这很非常典型的情况。 这样会把运行速度降低3到15倍 有时候降低得甚至更多 所以 集成是人们在基准数据测试上获得好成绩 以及赢得比赛的小帖士之一 但是我认为它从来没有被用到服务真正客户的产品中 我猜测 除非是有巨大的计算资源 并且不在乎 为每一幅客户的图像烧掉更多的钱 另外一个你在文章中看到 真正有助于基准数据测试的东西 是测试时使用多重剪切(multi-crop) 我所说的多重剪切 是你已经看到过的如何做数据增强 多重剪切也就是在你的测试图像上 应用数据增强的一种形式 让我们以一个猫的图像为例 简单地将其拷贝四次 包括附加的两个版本 有一个技术被称为 10次剪切 基本上来说 假设取这个中心区域进行裁剪 然后让它在你的网络中运行 然后 把那个裁剪移到左上角 显示为绿色的右上角 显示为换色的左下角 显示为桔色的右下角 并且把它也在你的网络中运行一下 然后在镜像的图像上做同样的事情 就想这样 我会取这个中心部分剪切 然后去四个角的剪切 于是这里和这里有一个中心部分剪切 这里和这里有四个角的剪切 把它们累加起来 上面提到的有10个不同的剪切 因此这就是 10次剪切 名字的来由 所以你要做的是 把这十幅图像都放入 你的网络中运行 然后对他们的结果求平均 因此如果你有计算资源 就可以这么做 或许你并不需要10次剪切那么多 那么 你可以使用若干次剪切 这也许能为一个产品化的系统带来些许性能提升 产品化的系统，我是说你发布给实际用户的系统 但是这个另一个绝大多数情况下用来 在基准数据上获得良好表现的技术 而不是用于实际的产品化系统中 集成学习的重大问题之一是 你需要保留所有那些不同的网络随时可用 那样会额外占用很多内存 对于多重剪切 你只需要保存一个网络 所以它不会吞噬太多内存 但它仍然会很大程度上降低运行速度 这些建议 你也会在科研论文会中看到 但是 在构建产品化的系统时 我个人不倾向于使用这些方法 尽管对于在基准数据 以及赢得比赛上有更好的效果 它们的结果非常棒 因为很多计算机视觉问题是在拥有少量数据的范畴 前人已经对网络结构做了大量的人工处理 一个神经网络在某个视觉问题上效果很好的网络 通常惊人的是 它们大多在另外的视觉问题上也能用 因此 要搭建一个是用的系统 你一般所要做的是 从别人的神经网络架构作为开始 而且如果可能 你可以用开源实现 因为那个开源实现或许已经搞清楚了 所有繁复细致的细节 比如学习率 调度 以及其它超参数 最后 其他人或许花了好几个星期训练一个模型 用了半打GPU以及上百万的图像 所以 使用别人预先训练的模型 然后在你的数据集上进行微调 你通常可以在你的应用上取得非常快的进展 当然 如果你有计算资源 并且有意愿去做 大可不必因我所言而不去从头开始训练你自己的网络 实际上 如果你想要打造自己的计算机视觉算法 从头训练你自己的网络 或许是不得不去做的事 这就是这周的全部内容 我希望 通过了解一定数量的 计算机视觉架构 能够有助于你对什么网络能奏效的的感觉有一些帮助 这周 从课后练习中你会切实得学到 其它编程体系结构 并用它们去实现你的想法 所以 希望你喜欢这个练习 我们下周见