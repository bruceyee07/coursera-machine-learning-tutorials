如果你想实现一个计算机视觉应用 而不想 从零开始训练权重 比方从随机初始化开始（训练） 实现更快的方式通常是下载 已经训练好权重的 网络结构 把这个作为预训练 迁移到你感兴趣的新任务上 计算机视觉的研究社区已经很擅长把许多 数据库发布在网络上 如ImageNet MSCOCO PASCAL等数据库 这些是已经公开在线的不同数据库的名字 许多计算机视觉的研究者已经在上面训练了自己的算法 有时（算法）训练要耗费好几周时间 占据许多GPU 事实上有人已经做过 这种训练 也经历过这种痛苦的高性能调试过程 这意味着你可以下载这些开源的权重 有人曾花数周 或数月来训练和调试 （这些权重）可以用来 为你自己的神经网络做好的初始化开端 且可以用迁移学习来迁移知识 从这些大型公共数据库迁移知识到你自己的问题上 我们来仔细了解下如何实现迁移学习 举个例子 比如你要建立一个可识别自己宠物猫的猫检测器 根据网络常识 Tigger和Misty是两个常见的猫名字 假设你的猫叫Tigger和Misty 或其他名字 所以你就有一个三分类的分类问题 这幅图究竟是Tigger 还是Misty 或者两者都不是 或者有种情况就是两只猫都在这幅图里 现在你可能没有足够多的Tigger的照片 或者Misty的照片 这样你的训练集很小 这时你能做什么 我建议你上网下载一些开源的应用 神经网络的应用 不但下载源码 还要下载相应权重 你可以下载许多已经训练好的网络 例如 在有1000类物体的ImageNet数据库上训练 因此该网络有一个可以输出千分之一类别概率的softmax神经元 你能做的是去掉其softmax层 然后创造自己 softmax层来输出Tigger/Misty/其他 从网络方面来看 我建议你考虑冻结（前面）这些层 即冻结相应参数 该网络前面所有层（的参数） 因此可以只训练与你自己softmax层有关的参数 即与三个类别输出有关的softmax层 Tigger Misty 或两者皆非 通过用别人训练好的权重 即使在很小的数据库上也可能得到很好的性能 幸运的是 许多深度学习框架 支持这样的用法 事实上 根据框架结构 它有点像所包含的可训练参数等于零 你可以把前面某些层这样设置（可训练参数为零） 另一种说法是 不要训练这些权重 或有时你可以用一个参数 比如freeze等于1（来设置网络） 这些不同的方法和不同的深度学习框架可以让你 来确定是否训练与某些具体层相关的权重 所以在现在的例子中 你可以只训练 softmax层的权重 同时冻结前面所有层 另一种应用中比较巧妙的方法 是由于前面所有层被冻结了 之前有些固定函数不会变 因为你现在也不改动它 也不训练它 （因此）网络接受输入图像X 并把X映射到该层的激活函数上 因此这个方法可以加速训练 因为我们刚预计算过该层 而该层重激活产生的特征就直接保存在硬盘上 你所做的就是用这个固定函数 在该神经网络的前半部分 接受任一输入图像X 然后计算其特征向量 然后 依据这个特征向量训练一个浅层softmax模型去预测 因此预计算之前层的激活结果是有利于你计算的操作 （预计算）训练集所有样本（激活结果）并存到硬盘上 然后训练右边的softmax类别 这样做的好处是 预计算的好处是你不需要 在训练集上每次迭代 都重新计算这些激活结果 所以 如果你的训练集比较小 以上就是你可以做的工作 如果你的训练集更大 一个经验之谈是 如果你有更大的带标签数据集 比如许多Tigger图片 或者Misty图片 或者别的猫图片 你可以冻结更少的层数 你可以只冻结这些层 然后训练后面这些层 尽管输出层的类别与你需要的不同 你的输出是Tigger Misty或其他 有几种可以这样做的方法 你可以用最后几层的权重 作为初始化开始做梯度下降（训练） 或者你也可以去掉最后几层 然后用自己的新神经元和最终softmax输出（训练） 两种方法都值得尝试 但有个模式 即你数据越多 所冻结的层数可以越少 自己训练的层数可以越多 其中的想法就是如果你选了个数据集 有足够的数据 不仅可以训练单层softmax 还可以 训练由所采用网络的最后几层组成的中型网络 其中的最后几层你可以使用 最后 如果你有许多数据 你可以用该开源网络和权重 （用它们）初始化整个网络然后训练 尽管这是个1000类的softmax 而你只需要3类 你需要自己的softmax输出 自己想要的标签 但是你有越多的带标签数据 或者说有越多Tigger Misty或其他猫的图片 你可以训练的层数就越多 极端的例子是 你可以用下载的权重作为 初始化 因此这些权重可以代替 随机初始化 然后做梯度下降 训练来更新所有权重和网络层 所以 这就是卷积神经网络训练中的迁移学习 实际中因为网上公开数据库非常大 你下载的权重 你下载的权重也是别人从大量数据上花费数周训练而来的 你会发现对许多计算机视觉应用来说 你可以做的更好 如果 如果你下载别人开源的权重来初始化自己的问题 因此在所有不同领域中 在所有深度学习应用的领域中 我认为计算机视觉是其中一个迁移学习 可以一直应用的领域 除非 除非你有特别大的数据集来从零训练自己的网络 而迁移学习值得认真考虑除非 你的确有特别海量的数据和计算资源 来自己从零开始