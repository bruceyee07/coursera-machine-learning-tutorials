1
00:00:00,270 --> 00:00:04,240
如果您建置一個電腦視覺應用，與其

2
00:00:04,240 --> 00:00:07,630
從頭開始訓練權重，從隨機初始開始

3
00:00:07,630 --> 00:00:10,010
您通常會有較快的進展，如果您下載

4
00:00:10,010 --> 00:00:12,530
從別人已經訓練好的權重

5
00:00:12,530 --> 00:00:15,640
到網路架構上，使用這種預先訓練

6
00:00:15,640 --> 00:00:19,525
然後移轉到您或許有興趣的新的任務上

7
00:00:19,525 --> 00:00:24,230
電腦視覺研究社群一直都很會發表

8
00:00:24,230 --> 00:00:28,860
很多的資料集在網上，如果您聽過像是 ImageNet, MS COCO,

9
00:00:28,860 --> 00:00:31,082
或是 Pascal  type 等資料集

10
00:00:31,082 --> 00:00:33,995
這些都是人們在線上發表的不同資料集

11
00:00:33,995 --> 00:00:39,640
很多的電腦視覺研究者都已經
在上面訓練過他們的演算法

12
00:00:39,640 --> 00:00:44,760
有時候這樣的訓練可達幾週，也許用了很多的  ＧＰＵ

13
00:00:44,760 --> 00:00:47,020
而別人做過

14
00:00:47,020 --> 00:00:50,005
且經歷了痛苦尋找高績效的過程

15
00:00:50,005 --> 00:00:55,360
意思是您可以下載這些開源的權重，別人已經花了很多星期

16
00:00:55,360 --> 00:00:57,570
甚至很多月的努力，您可以直接用來

17
00:00:57,570 --> 00:01:01,550
在您自己的神經網路上很好的初始

18
00:01:01,550 --> 00:01:05,012
而使用轉移學習來轉移一些知識從

19
00:01:05,012 --> 00:01:08,761
相當大的資料集到您自己的問題上

20
00:01:08,761 --> 00:01:11,710
我們來詳細看一下怎麼做

21
00:01:11,710 --> 00:01:13,760
我們先從一個例子開始

22
00:01:13,760 --> 00:01:18,820
假設您想建立一個貓偵測器
來辨識您自己的寵物貓

23
00:01:18,820 --> 00:01:22,570
根據網路

24
00:01:22,570 --> 00:01:32,855
Tigger 是常用的貓名字，Misty 也是另一個常用的貓名

25
00:01:32,855 --> 00:01:41,480
假設您的貓們叫做 Tigger 跟 Misty 還有都不是

26
00:01:41,480 --> 00:01:44,570
所以您有一個分類問題有三個分類

27
00:01:44,570 --> 00:01:46,300
這個圖片是 Tigger

28
00:01:46,300 --> 00:01:49,075
還是 Misty, 或者都不是

29
00:01:49,075 --> 00:01:53,875
所有情況下，您的貓們都會在照片中

30
00:01:53,875 --> 00:01:57,020
您或許沒有很多 Tigger

31
00:01:57,020 --> 00:02:00,745
或 Misty的照片，您的訓練集可能很小

32
00:02:00,745 --> 00:02:02,170
您怎麼辦？

33
00:02:02,170 --> 00:02:06,920
我建議您到線上下載一個開源的神經網路建置

34
00:02:06,920 --> 00:02:12,600
不只下載程式，也要下載權重

35
00:02:12,600 --> 00:02:19,900
有許多您可以下載的網路已經訓練過，舉個例

36
00:02:19,900 --> 00:02:25,130
ImageNet 資料集有上千種不同的類別，這些網路

37
00:02:25,130 --> 00:02:31,180
或許有一個 softmax 單元可以輸出上千種可能的類別

38
00:02:31,180 --> 00:02:36,110
您可以去掉這個 softmax 層，建立

39
00:02:36,110 --> 00:02:46,025
您自己的 softmax 單元，輸出為 Tigger 或 Misty 或都不是

40
00:02:46,025 --> 00:02:48,710
至於這個網路

41
00:02:48,710 --> 00:02:52,350
我鼓勵您把這些層

42
00:02:52,350 --> 00:02:56,415
凍結，您凍結這些參數

43
00:02:56,415 --> 00:03:00,300
在這個網路上的這些層，您會只

44
00:03:00,300 --> 00:03:05,700
訓練您的 softmax  層的相關參數

45
00:03:05,700 --> 00:03:08,982
這個 softmax 層會有三個可能輸出

46
00:03:08,982 --> 00:03:11,790
Tigger, Misty 跟皆不是

47
00:03:11,790 --> 00:03:16,560
使用他人的訓練過的權重

48
00:03:16,560 --> 00:03:22,600
您或許會得到相當好的績效即使您的資料集很小

49
00:03:22,600 --> 00:03:25,100
幸運的是很多深度學習框架

50
00:03:25,100 --> 00:03:28,000
支援這樣的運作，實際上

51
00:03:28,000 --> 00:03:35,085
根據不同的框架，它有可能用一種稱為可訓練的參數為 0

52
00:03:35,085 --> 00:03:37,660
您或許可以把一些層做這樣設定

53
00:03:37,660 --> 00:03:39,117
為了指名

54
00:03:39,117 --> 00:03:42,885
不要訓練這些權重，有時候您會有一些參數

55
00:03:42,885 --> 00:03:47,295
像是 freeze (凍結）等於 1

56
00:03:47,295 --> 00:03:50,730
不同的深度學習框架有不同的方式，讓您

57
00:03:50,730 --> 00:03:56,245
指定是否要訓練某特定層的權重

58
00:03:56,245 --> 00:03:58,440
在這個例子，您只需要訓練

59
00:03:58,440 --> 00:04:04,945
softmax 層的權重，但要凍結其他早期層的權重

60
00:04:04,945 --> 00:04:07,930
另一個巧妙的技巧會許會幫助一些建置

61
00:04:07,930 --> 00:04:12,380
因為所有早期層凍結

62
00:04:12,380 --> 00:04:16,345
有一些固定的函數並不會改變，因為您並未改變它

63
00:04:16,345 --> 00:04:20,040
您並沒有訓練它們，拿輸入的影像

64
00:04:20,040 --> 00:04:24,305
對應到那一層的一組啟動值

65
00:04:24,305 --> 00:04:30,455
一種技巧可以加快學習是我們可以預先計算那一層

66
00:04:30,455 --> 00:04:36,615
那一層的特徵啟動值，將它們存在硬碟上

67
00:04:36,615 --> 00:04:40,620
您要做的是使用這個固定函數

68
00:04:40,620 --> 00:04:43,030
這個神經網路的第一部分

69
00:04:43,030 --> 00:04:49,680
拿這個輸入任何影像，對它計算一些特徵向量然後

70
00:04:49,680 --> 00:04:56,445
將這個特徵向量在淺層的 Softmax 模型中訓練，來做預測

71
00:04:56,445 --> 00:05:04,170
一個步驟可以幫助您計算，就是您預先計算那些層的啟動值

72
00:05:04,170 --> 00:05:06,330
對於所有在訓練集的例子，儲存它們到硬碟

73
00:05:06,330 --> 00:05:10,525
然後就只要使用 softmax 分類器到它們上面

74
00:05:10,525 --> 00:05:12,585
儲存到硬碟或者

75
00:05:12,585 --> 00:05:15,990
預先計算的好處是您不需要

76
00:05:15,990 --> 00:05:19,020
每次都重新計算這些啟動值

77
00:05:19,020 --> 00:05:23,150
您做一次，或遍歷一次資料集

78
00:05:23,150 --> 00:05:28,585
如果您任務中的訓練集相當小的話，您可以這樣做

79
00:05:28,585 --> 00:05:31,215
如果您的訓練集比較大的話呢？

80
00:05:31,215 --> 00:05:33,810
一個經驗法則是，如果您有

81
00:05:33,810 --> 00:05:39,164
一個較大的資料集，
或許有一堆 Tigger 或 Misty 的照片

82
00:05:39,164 --> 00:05:41,940
跟一些兩者都不是的照片

83
00:05:41,940 --> 00:05:45,935
您可以做的是凍結比較少層

84
00:05:45,935 --> 00:05:52,761
或許您只凍結這些層，而訓練這些晚期的層

85
00:05:52,761 --> 00:05:57,540
當然輸出層會使用不同的分類，您必須使用

86
00:05:57,540 --> 00:06:04,321
您自己的輸出單元， Tigger, Misty 或者兩者皆不是

87
00:06:04,321 --> 00:06:07,550
有幾種方式可以這麼做

88
00:06:07,550 --> 00:06:10,980
您可以拿最後這幾層的權重

89
00:06:10,980 --> 00:06:17,346
用它們當初始值，從那裡開始做梯度下降

90
00:06:17,346 --> 00:06:22,050
或者您可以完全去掉最後幾層

91
00:06:22,050 --> 00:06:27,990
使用您自己新的隱藏單元跟您自己最終的 softmax 輸出

92
00:06:27,990 --> 00:06:32,000
兩種方式都可以試試

93
00:06:32,000 --> 00:06:35,220
但或許模式是如果您有更多的資料

94
00:06:35,220 --> 00:06:39,090
您需要凍結的層會變小

95
00:06:39,090 --> 00:06:43,810
您要在上面訓練的層會變多

96
00:06:43,810 --> 00:06:46,710
主要的想法是如果您選一個資料集，或許有

97
00:06:46,710 --> 00:06:51,090
足夠資料不只是用在訓練單一個  softmax 單元，甚至可以訓練

98
00:06:51,090 --> 00:06:54,960
一個夠大的神經網路包含

99
00:06:54,960 --> 00:07:00,400
最後網路的最後幾層，您也可以使用

100
00:07:00,400 --> 00:07:03,965
最後，如果您有很多資料

101
00:07:03,965 --> 00:07:09,710
另一種方式是您拿這個開源的網路跟權重，

102
00:07:09,710 --> 00:07:15,430
使用全部東西為初始，訓練整個網路

103
00:07:15,430 --> 00:07:20,945
當然這是一個上千個節點的 softmax， 而您只需要 3 個輸出

104
00:07:20,945 --> 00:07:23,610
 您需要您自己的  softmax 輸出

105
00:07:23,610 --> 00:07:26,133
您關心的輸出標籤

106
00:07:26,133 --> 00:07:29,760
但如果對於您的任務，您有更多的標籤資料

107
00:07:29,760 --> 00:07:33,630
或者您有更多的 Tigger, Misty 或都不是的照片

108
00:07:33,630 --> 00:07:37,005
您可以訓練更多層，極端情況下

109
00:07:37,005 --> 00:07:40,365
您可以使用您下載的權重只當成

110
00:07:40,365 --> 00:07:42,405
初始值，它們用來取代

111
00:07:42,405 --> 00:07:45,260
隨機初始，然後可以使用梯度下降

112
00:07:45,260 --> 00:07:50,838
訓練所有的權重跟網路所有層

113
00:07:50,838 --> 00:07:54,510
這就是卷積網路的轉移學習

114
00:07:54,510 --> 00:08:00,090
實作上，因為網路上的開源資料集如此巨大，而您可以

115
00:08:00,090 --> 00:08:05,580
下載別人已經花過幾個星期訓練在這麼多資料的權重

116
00:08:05,580 --> 00:08:08,385
您會發現很多的電腦視覺應用

117
00:08:08,385 --> 00:08:10,980
如果您下載

118
00:08:10,980 --> 00:08:16,080
別人開源的權重，使用在您自己問題的初始值上，會表現得很棒

119
00:08:16,080 --> 00:08:18,410
在其他不同的領域中

120
00:08:18,410 --> 00:08:21,720
在深度學習的不同應用中

121
00:08:21,720 --> 00:08:25,220
我認為在電腦視覺上是一個

122
00:08:25,220 --> 00:08:28,815
您幾乎必須要做轉移學習的領域，除非

123
00:08:28,815 --> 00:08:35,145
您有特別大的資料集，您自己要從頭訓練起

124
00:08:35,145 --> 00:08:40,560
但轉移學習值得認真考慮，除非您

125
00:08:40,560 --> 00:08:43,745
您有特別大的資料集， 跟很多的計算預算

126
00:08:43,745 --> 00:08:47,350
來完全從頭自己訓練