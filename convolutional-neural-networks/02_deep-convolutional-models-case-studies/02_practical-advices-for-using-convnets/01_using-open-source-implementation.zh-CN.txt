大家现在已经学习了几种高效的神经网络 还有ConvNet结构 在接下来的几个小节中，我想给大家分享关于如何 使用它们的实用的建议，让我们先看看如何使用开源的实现 事实证明许多神经网络都很难复现 因为许多关于调整hyperparameters的细节 例如学习率衰减还有其他许多细节都会给最终效果带来影响 此外我还发现对于博士生甚至在顶尖大学就读的博士生来说 有时候仅仅通过阅读论文来复现其他人的成果 还是有难度的 幸运的是, 许多深度学习的研究人员 都会习惯地将他们的成果开源并且放在网上,例如GitHub 同时对于你自己的成果，我当然也鼓励你 考虑将你自己的代码贡献给开源社区 如果你看到一篇论文并想实现它 你需要考虑的是 我也经常会这样做的是,去上网寻找一个开源的实现 因为如果你可以得到作者的实现,你通常可以 比你从头实现更节省时间 尽管有时候从头实现一次 也是很好的锻炼 如果你对于如何使用Github已经很熟悉 这段视频也许就没这么重要 但如果你对于如何从Github下载开放的源代码并不熟练 让我快速演示一遍怎么使用 加入你对残差网络很感兴趣 想要使用它 我们首先输入resnets github这对关键词进行搜索 你可以看到关于残差网络的很多不同的实现 我们可以看一下第一个链接 这是一个关于残差网络的实现 往下翻页面你可以看到 关于代码实现的一些描述 这个库的作者是 ResNet的论文原作者 这个代码是按照MIT 开源许可协议开发的 可以通过点击这个按钮来快速浏览一下许可 MIT 开发许可协议是最宽松的 开源协议之一 现在我要下载这些代码 点击这个链接 这是下载代码的链接 这个按钮可以复制下载链接 然后在现在这个界面 你只需要输入 git clone 然后粘贴刚才复制的链接 然后点击回车 几秒钟代码就可以下载好 这样我们把上面的代码库克隆到了本地电脑硬盘 下面我们去具体目录下看一看 我一般用mac系统 比 window 系统多 我们来看看prototxt 这个应该是关于实现残差网络的一些相关文件 这个文件很长 包含了很多细节 有很多关于ResNet的详细配置 有101 层 对吧 如果我没有记错的话 这个实现看起来 应用了开源架构Caffe的框架 如果你想要使用其他代码框架的代码实现的话 你也可以找到相应的代码 现在 你已经开始开发一个计算机视觉图像应用 在这个过程中最常见的流程从选取一个你喜欢的框架开始 比如一些我们在这个课程中学到的框架 或者你从其他地方听到见到的框架 然后去找一个开源的代码实现 去github上下载好 然后可以在下载好的代码上开发 这样做的好处之一是 这些网络可能需要很长的时间来训练 也许有人已经用多个GPU 和大数据集训练好了 这样你就可以直接对这些网络使用迁移学习 关于迁移学习 我们在下一个视频中会讲 当然 如果你是一个计算机视觉的研究者 你可能需要 从头开始构建这个神经网络框架 这样的话工作流程就会不同 如果你从头构建的话 不要忘记了把你的代码贡献到开源社区 因为很多的计算机视觉研究者都做了很多的工作来实现这些 架构 我个人认为对一个项目来说 找一个适合的开源代码 是一个比较好也比较块的开始