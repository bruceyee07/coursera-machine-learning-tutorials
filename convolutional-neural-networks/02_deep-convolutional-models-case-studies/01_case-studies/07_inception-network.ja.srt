1
00:00:00,190 --> 00:00:01,320
前回の動画では、

2
00:00:01,320 --> 00:00:06,420
Inception ネットワークの 全ての基本構成要素を見てきた

3
00:00:06,420 --> 00:00:10,680
このビデオでは どのように これらの構成要素を一緒にして

4
00:00:10,680 --> 00:00:12,780
Inception ネットワークを作るか 理解しよう

5
00:00:13,910 --> 00:00:17,970
Inception モジュールは 前の層からの

6
00:00:17,970 --> 00:00:20,260
活性 もしくは 出力を 入力として取る

7
00:00:20,260 --> 00:00:25,860
議論のため 28 x 28 x 192 としよう

8
00:00:25,860 --> 00:00:28,030
前のビデオと同じにね

9
00:00:28,030 --> 00:00:35,130
ここで扱う例は 1 x 1 層 に引き続き 5 x 5 層 だ

10
00:00:35,130 --> 00:00:41,120
1 x 1 は 16チャンネルとしよう

11
00:00:41,120 --> 00:00:48,170
5 x 5 は 28 x 28 x 32 チャンネルを出力することにしよう

12
00:00:49,700 --> 00:00:53,790
これは 前のビデオのスライドでやった例だ

13
00:00:54,900 --> 00:01:02,260
それから 3 x 3 の畳み込みを同じようにここでやり

14
00:01:02,260 --> 00:01:08,310
この 3 x 3 は 28 x 28 x 128 を出力する

15
00:01:09,390 --> 00:01:14,100
それから 1 x 1 畳み込みも 入れたいかもしれない

16
00:01:14,100 --> 00:01:18,481
1 x 1 畳み込みは 別の 1 x 1 に続ける必要はない

17
00:01:18,481 --> 00:01:23,409
だから １ステップだけで 28 x 28 x 64 を出力させよう

18
00:01:23,409 --> 00:01:31,900
そして最後は プーリング層だ

19
00:01:34,000 --> 00:01:35,730
ここでは ちょっと変なことをやる

20
00:01:35,730 --> 00:01:40,154
最後に これら全ての出力を結合するため

21
00:01:40,154 --> 00:01:44,073
Sameタイプのパディングを プーリングに使う

22
00:01:44,073 --> 00:01:47,480
よって 出力の高さと幅は 28 x 28 のままとなる

23
00:01:47,480 --> 00:01:53,300
そうやって これと これらの出力を結合できる

24
00:01:53,300 --> 00:01:57,842
でも 気を付けて欲しいのは
Sameパディングで 最大プーリングを行う時は

25
00:01:57,842 --> 00:01:59,917
3 x 3 のフィルターを ストライド１で使うことだ

26
00:01:59,917 --> 00:02:07,016
ここの出力は 28 x 28 x 192

27
00:02:07,016 --> 00:02:10,790
これは 同じチャンネル数

28
00:02:10,790 --> 00:02:15,570
ここの入力と同じ深さを持つ

29
00:02:15,570 --> 00:02:19,252
ここには たくさんのチャンネルがあるようだ

30
00:02:19,252 --> 00:02:23,752
そこで もう一層 1 x 1 畳み込み層を追加して

31
00:02:23,752 --> 00:02:28,607
1 x 1 畳み込みのビデオで見たように

32
00:02:28,607 --> 00:02:31,541
チャンネル数を減らす

33
00:02:31,541 --> 00:02:37,730
そうしたら 28 x 28 x 32 になる

34
00:02:37,730 --> 00:02:44,770
ここでやった 32個のフィルターを使い

35
00:02:44,770 --> 00:02:49,660
1 x 1 x 192 次元にかけた

36
00:02:49,660 --> 00:02:54,110
だから 出力次元が 縮小した 32 のチャンネル数となった

37
00:02:54,110 --> 00:02:58,460
プーリング層で終わりにせずに

38
00:02:58,460 --> 00:03:00,920
全てのチャンネルが 最終出力に取り出された

39
00:03:02,310 --> 00:03:08,121
そして 最後に これらのブロック全てを取り チャンネル結合する

40
00:03:08,121 --> 00:03:12,865
結合するだけだ この 64 + 128 + 

41
00:03:12,865 --> 00:03:18,165
32 + 32
これを足し合わせて

42
00:03:18,165 --> 00:03:24,055
28 x 28 x 256 次元の出力になる

43
00:03:24,055 --> 00:03:30,879
チャンネル結合は 前のビデオで見たように ブロックを結合することだ

44
00:03:33,918 --> 00:03:39,598
これが Inception モジュール１個だ
Inception ネットワークでは

45
00:03:39,598 --> 00:03:44,057
多かれ少なかれ これらのモジュールを沢山まとめて使う

46
00:03:45,624 --> 00:03:50,671
これが Szegedy らの論文にある Inception ネットワークの絵だ

47
00:03:53,615 --> 00:03:56,570
これには 沢山の繰り返しブロックがあることに気付くだろう

48
00:03:56,570 --> 00:03:58,580
この絵は 本当に複雑に見えるかもしれない

49
00:03:58,580 --> 00:04:03,563
しかし ブロックの1つを見れば そのブロックは基本的に

50
00:04:03,563 --> 00:04:07,920
前のスライドで見た Inception モジュールだ

51
00:04:10,046 --> 00:04:17,085
細部までは議論しないが
これは 別の Inception ブロックで

52
00:04:17,085 --> 00:04:19,460
これが 別の Inception ブロックで

53
00:04:19,460 --> 00:04:23,200
そして なにか追加の最大プーリングがあり 次元数を変更する

54
00:04:24,250 --> 00:04:25,800
高さと幅を

55
00:04:25,800 --> 00:04:28,140
これも 別の Inception ブロック

56
00:04:28,140 --> 00:04:31,020
ここに 別の最大プーリングがあって 高さと幅を変える

57
00:04:31,020 --> 00:04:33,280
基本的には 別の Inception ブロックだ

58
00:04:33,280 --> 00:04:37,370
でも Inception ネットワークは 今学んだ これらのブロックが 沢山あるだけだ

59
00:04:37,370 --> 00:04:40,930
ネットワークの異なる場所に繰り返して

60
00:04:40,930 --> 00:04:44,509
前のスライドで Inception ブロックを理解したらなら

61
00:04:44,509 --> 00:04:46,914
Inception ネットワークも理解するだろう

62
00:04:49,518 --> 00:04:53,403
オリジナルの研究論文を読めば Inception ネットワークには

63
00:04:53,403 --> 00:04:55,430
もつ1つだけ詳細があるのが分かる

64
00:04:55,430 --> 00:04:59,311
それは 今追加した これら追加の分岐だ

65
00:05:01,835 --> 00:05:03,440
これらは 何をするのか？

66
00:05:03,440 --> 00:05:07,800
ネットワークの最後の数層は 全結合層だ

67
00:05:07,800 --> 00:05:11,360
続けて ソフトマックス層で予測を出す

68
00:05:11,360 --> 00:05:15,430
これらの分岐では いくつかの隠れ層から

69
00:05:15,430 --> 00:05:17,760
予測を試みる

70
00:05:17,760 --> 00:05:22,140
これは 実際はソフトマックス出力だ これも同様

71
00:05:22,140 --> 00:05:23,952
そして この分岐では

72
00:05:23,952 --> 00:05:29,173
また 隠れ層を 全結合層のような層を数個持つ

73
00:05:29,173 --> 00:05:33,243
それから ソフトマックスで 出力ラベルが何になるか予測する

74
00:05:35,545 --> 00:05:38,798
これは もう一つの細部に過ぎない

75
00:05:38,798 --> 00:05:40,000
Inception ネットワークの

76
00:05:40,000 --> 00:05:44,460
しかし こうすることは 特徴の計算を助けることになる

77
00:05:44,460 --> 00:05:48,060
隠れ層に於いても 中間層に於いてもね

78
00:05:48,060 --> 00:05:52,490
これらは 画像の出力クラスを予測するのに悪くない働きをする

79
00:05:52,490 --> 00:05:56,875
これは Inceptionネットワークに対し 正則化の効果があると考えられており

80
00:05:56,875 --> 00:05:59,667
このネットワークが過学習するのを防ぐ

81
00:06:03,048 --> 00:06:07,907
ところで この特別の Inceptionネットワークは

82
00:06:07,907 --> 00:06:11,770
Googleの人たちによって開発された

83
00:06:11,770 --> 00:06:18,850
彼らは これを GoogLeNet と呼んだ
こう綴るんだけど LeNet ネットワークのオマージュになっている

84
00:06:18,850 --> 00:06:21,350
LeNet は 前のビデオで学んだよね

85
00:06:23,460 --> 00:06:29,086
これは とても素晴らしいことだと思うんだ
ディープラーニング コミュニティが

86
00:06:29,086 --> 00:06:30,436
とても 協力し合っているのは

87
00:06:30,436 --> 00:06:32,593
そして このような お互いの仕事に対する

88
00:06:32,593 --> 00:06:35,865
強く健全な尊敬の念が ディープラーニング コミュニティにはある

89
00:06:35,865 --> 00:06:37,895
最後に １つ変なことを

90
00:06:37,895 --> 00:06:40,425
Inception ネットワークという名前は どこから来たのか？

91
00:06:41,585 --> 00:06:47,375
Inception 論文では 実は この意味は ”We need to go deeper” だと述べている

92
00:06:47,375 --> 00:06:52,315
そして このURLが Inception論文で実際に触れているものだ

93
00:06:52,315 --> 00:06:54,320
この画像のリンクだ

94
00:06:54,320 --> 00:06:57,610
もし The Inception というタイトルの映画を見たことが有るなら

95
00:06:57,610 --> 00:07:00,070
多分 この意味が分かるだろう

96
00:07:00,070 --> 00:07:05,380
論文の著者たちは 実際 このリンクを次の動機を持つものとして引用している

97
00:07:05,380 --> 00:07:09,040
それは より深いニューラルネットワークが必要という動機だ

98
00:07:09,040 --> 00:07:12,890
だから Inception構造を思いついたと

99
00:07:12,890 --> 00:07:17,830
研究者が インターネット文化の類を 引用欄に引用するのは

100
00:07:17,830 --> 00:07:19,030
そうあることでは ないだろう

101
00:07:19,030 --> 00:07:22,165
でも この場合は 非常にうまく行っていると思う

102
00:07:23,285 --> 00:07:27,015
じゃあ 纏めよう
Inceptionモジュールを理解したなら

103
00:07:27,015 --> 00:07:29,765
Inception ネットワークも理解するだろう

104
00:07:29,765 --> 00:07:33,865
それは ネットワークを通じて 何度も繰り返される

105
00:07:33,865 --> 00:07:35,435
巨大なInceptionモジュールだ

106
00:07:35,435 --> 00:07:40,025
オリジナルのInceptionモジュールの開発では

107
00:07:40,025 --> 00:07:43,760
著者や他の人たちが 他のバージョンも思い付いている

108
00:07:43,760 --> 00:07:49,090
他の 新しい Inceptionアルゴリズムのバージョンの論文もある

109
00:07:49,090 --> 00:07:53,380
そして 時には これらの後発のバージョンを見ることもあるだろう

110
00:07:53,380 --> 00:07:57,040
この版と同様に Inceptino V2, Inception V3, Inception V4 を

111
00:07:57,040 --> 00:07:59,360
Inception にはバージョンがある

112
00:07:59,360 --> 00:08:02,800
これは ResNet のスキップコネクションのアイデアを組み合わせたもので

113
00:08:02,800 --> 00:08:05,740
よりうまく 動く場合がある

114
00:08:05,740 --> 00:08:10,600
でも これら全ての変種は 今学んだ基本アイデアの上に成り立っている

115
00:08:10,600 --> 00:08:14,710
Inceptionモジュールが初めに来て

116
00:08:14,710 --> 00:08:17,510
それらを たくさん積み重ねる

117
00:08:17,510 --> 00:08:20,530
それから これらのビデオで あなたは 読むことができ そして

118
00:08:20,530 --> 00:08:23,940
理解できるはずだ
Inception論文や

119
00:08:23,940 --> 00:08:28,790
後発の変種についての論文も

120
00:08:28,790 --> 00:08:30,020
以上だ

121
00:08:30,020 --> 00:08:34,820
とても多くの特別なニューラルネットワーク構造を見てきたね

122
00:08:34,820 --> 00:08:39,650
次のビデオでは より実践的なアドバイスをしておきたい

123
00:08:39,650 --> 00:08:43,830
実際に どのようにして
これらのアルゴリズムを使って 自分のコンピューター ビジョン システムを 作るか

124
00:08:43,830 --> 00:08:45,090
次のビデオに進みましょう