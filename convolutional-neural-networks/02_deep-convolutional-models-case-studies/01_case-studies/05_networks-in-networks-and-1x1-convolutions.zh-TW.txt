談到有關於卷積網路的架構 有一種觀念相當有幫助是使用 1乘1 卷積 現在，您或許會想 一個 1乘1 卷積能做什麼？ 不就是乘上一個數字嗎？ 似乎是個很可笑的方式 其實不然 讓我們來看看 您將見到 1乘1 過濾器 我們放一個數字 2 在這裡 而如果您拿這個 6乘6 影像 6乘6乘1 跟 1乘1乘1 過濾器卷積 您最終只是拿這個影像的數字乘 2 所以 1, 2, 3 會變成 2, 4, 6 等等 所以卷積一個 1乘1 過濾器 好像不特別有用 您只是乘上一個數字 但因為這是 6乘6乘1 通道的影像 如果您看的是 6乘6乘32 而不是一個通道 那跟一個 1乘1 過濾器做卷積，可能就會有意義 特別是，一個 1乘1 卷積會做的是它會 看 36 個不同的位置中每一個位置 它會做一個逐元素相乘介於 在左邊的 32 個數字跟過濾器的 32 個數字 之後再應用 ReLU 非線性函數 所以只看 36 個位置中一個 或許是一段像這個容積 您拿這 36 （應該是 32) 個數字，跟一段容積相乘 您最後會得到 一個單獨的實數，然後畫在輸出上面像這樣 實際上，用一種方式來看 這 32 個數字在這個 1乘1乘32 過濾器中 就像您有一個神經元，拿一個輸入 32 個數字，乘上每一個這 32 個數字 同一個位置的這一段，但在不同的通道上 將它們乘上 32 個權重，應用 ReLU 非線性函數，然後輸出相對的值在這裡 更一般而言，如果您不只用一個過濾器 如果使用多個過濾器 就像這樣做，您就不只會有一個單元，而是多個單元 所有輸入數字的一段 將它們建置起來，變成一個輸出為 6乘6乘 過濾器的數目 1乘1 卷積可以用一種方式來想像 基本上是用一個全連結的神經網路 然後應用到這 62 (應該是 36) 個不同位置上 而這個全連結神經網路做的是 輸入 32 個數字然後
輸出過濾器數目的數字 我想依據您所使用的符號 這應該是 nc[l+1] 因為是下一層 在 36 個位置上每個都這樣做 在 6乘6 每個位置上 您最後的輸出會是 6乘6乘過濾器的數目 而這會帶給您在輸入容積上
進行非顯而易見的計算 這種觀念通常稱為 1乘1 卷積 有時候也會稱為網路中的網路 這是在這份論文中描述 作者是 Min Lin, Qiang Chen, 跟 Schuicheng Yan 即使這份論文中的詳細架構
並沒有被廣泛應用 但這個 1乘1 卷積或者 有時候稱為網路中的網路的觀念，造成重大影響 影響到很多其他的神經網路架構 包括我們在下一段影片要介紹的Inception網路 但為了要您了解為什麼 1乘1 卷積是有用的 這是您可以做的 假設您有 28乘28乘192 容積 如果您想縮小高度跟寬度 您可以使用池層 我們已經知道可以怎麼做 但如果是通道的數目太大呢？我們想要縮小它 您如何將它縮成 28乘28乘32 維度容積 您可以用 32 個 1乘1 的過濾器 技術上而言，每個過濾器會是 1乘1乘192 因為您過濾器的通道數目 要等於輸入容積的通道數目 但您使用了 32 個過濾器，所以輸出會是 28乘28乘32 容積 這也是讓您縮小 nc 的方式 而池層，是我用來縮小 nH 跟 nW 也就是容積的高度跟寬度 我們以後會看到，這個 1乘1 卷積的觀念 讓您可以縮小通道的數目，所以 能夠節省在一些網路上的一些計算力 但當然，如果您要保留通道的數目為 192，也是可以 而影響所及，這個 1乘1 卷積只是加入非線性 它讓您的網路學習更複雜的函數，加入 另一層，輸入為 28乘28乘192 而輸出為 28乘28乘192 所以這是 1乘1 卷積層實際上做一些非顯而易見的事 且加入非線性到您的神經網路 讓您降低或者如果您要保持一樣， 或增加通道數目在您的容積上 接下來您會見到這在 Inception 網路中是很有用的 我們在下一段影片會繼續談這部分 所以，現在您見到了 1乘1 卷積運算如何是一個 相當非顯而易見的運算，而它讓您能夠 縮小您容積上的通道數目 保持一樣，甚至您想增加也可以 在下一個影片中 您會見到這可以用來幫助 建立 Inception 網路，我們繼續下一段