1
00:00:00,000 --> 00:00:02,400
前回のビデオでは ニューラル スタイル変換の

2
00:00:02,400 --> 00:00:04,980
内容コスト関数の定義を見た

3
00:00:04,980 --> 00:00:09,317
次に スタイルコスト関数を見てみよう

4
00:00:09,317 --> 00:00:12,373
画像のスタイルとは 何を意味するのか？

5
00:00:12,373 --> 00:00:14,633
このような画像があるとする

6
00:00:14,633 --> 00:00:16,750
それに このような ConvNet があり

7
00:00:16,750 --> 00:00:20,091
色んな層で 特徴量を計算する

8
00:00:20,091 --> 00:00:22,692
ある層 l を選んでみよう

9
00:00:22,692 --> 00:00:29,020
この層かな ここで 画像スタイルの測り方を定義する

10
00:00:29,020 --> 00:00:34,095
定義するのは この層 l においての

11
00:00:34,095 --> 00:00:40,635
異なるチャンネルに跨った 活性間の相関だ

12
00:00:40,635 --> 00:00:42,190
どういうことか 説明する

13
00:00:42,190 --> 00:00:44,480
層 l の活性を取り出そう

14
00:00:44,480 --> 00:00:50,936
その活性は nH x nW x nC のブロックになる

15
00:00:50,936 --> 00:00:55,995
異なるチャンネルに跨った 活性間には どのくらい相関があるだろうか？

16
00:00:55,995 --> 00:00:59,966
この謎めいた言葉の意味するものを説明するために

17
00:00:59,966 --> 00:01:02,850
この活性のブロックを取り上げ

18
00:01:02,850 --> 00:01:06,575
異なるチャンネルに 異なる色を付けよう

19
00:01:06,575 --> 00:01:08,295
この下の例では

20
00:01:08,295 --> 00:01:14,286
５つのチャンネルがあるので ５つの色を付ける

21
00:01:14,286 --> 00:01:15,375
実際には もちろん

22
00:01:15,375 --> 00:01:18,514
通常のニューラルネットワークでは ５個より もっと多いチャンネルを持つ

23
00:01:18,514 --> 00:01:22,056
でも 描くのを簡単にするため ５個にする

24
00:01:22,056 --> 00:01:24,765
画像のスタイルを把握するためには

25
00:01:24,765 --> 00:01:26,850
次のようにする

26
00:01:26,850 --> 00:01:28,910
最初の２つのチャンネルを見よう

27
00:01:28,910 --> 00:01:32,970
赤と黄色のチャンネルを見よう

28
00:01:32,970 --> 00:01:37,450
この最初の２つのチャンネルの活性は どのくらい相関しているか？

29
00:01:37,450 --> 00:01:40,575
例えば この右下角では

30
00:01:40,575 --> 00:01:45,820
最初のチャンネルの ある活性値と ２番目のチャンネルの ある活性値がある

31
00:01:45,820 --> 00:01:47,655
つまり 数のペアがある

32
00:01:47,655 --> 00:01:51,510
この活性ブロックに跨る 異なる場所それぞれで

33
00:01:51,510 --> 00:01:55,435
この数のペアを見る

34
00:01:55,435 --> 00:01:57,232
最初のチャンネル 赤いチャンネルのと

35
00:01:57,232 --> 00:02:00,000
黄色いチャンネル ２番目のチャンネルのだ

36
00:02:00,000 --> 00:02:02,370
これらの数のペアを

37
00:02:02,370 --> 00:02:04,816
全ての場所で見て

38
00:02:04,816 --> 00:02:07,320
全ての nH x nW 位置で見て

39
00:02:07,320 --> 00:02:10,205
この２つの数がどのくらい相関しているのか調べる

40
00:02:10,205 --> 00:02:12,550
なぜ これで スタイルが把握できるんだろう？

41
00:02:12,550 --> 00:02:14,405
別の例を見よう

42
00:02:14,405 --> 00:02:17,844
前のビデオで使った可視化の例だ

43
00:02:17,844 --> 00:02:20,280
これは またもや 前にも触れた

44
00:02:20,280 --> 00:02:23,350
Matthew Zeiler そして Rob Fergus の論文からだ

45
00:02:23,350 --> 00:02:25,360
議論のために こうしよう

46
00:02:25,360 --> 00:02:28,300
赤いニューロンは

47
00:02:28,300 --> 00:02:30,170
議論のために こうしよう

48
00:02:30,170 --> 00:02:36,600
赤いチャンネルは このニューロンに対応していて

49
00:02:36,600 --> 00:02:40,320
この小さな垂直の質感を探し出そうとしている

50
00:02:40,320 --> 00:02:46,185
画像の とある場所でね そして ２番目のチャンネルは

51
00:02:46,185 --> 00:02:51,795
この黄色い２番目のチャンネルは このニューロンに対応していて

52
00:02:51,795 --> 00:02:56,515
ぼんやりと オレンジ色の小領域を探している

53
00:02:56,515 --> 00:03:01,104
この２つのチャンネルが高く相関していると どういうことを意味するか？

54
00:03:01,104 --> 00:03:04,560
もし それらが 高く相関していれば このような

55
00:03:04,560 --> 00:03:08,430
微妙な縦の質感を持っている画像の部分は

56
00:03:08,430 --> 00:03:12,980
多分 オレンジの色合いを 持っているだろうね

57
00:03:12,980 --> 00:03:15,755
それらが 相関していない場合は 何を意味するのか？

58
00:03:15,755 --> 00:03:19,635
この縦の質感がある場所は

59
00:03:19,635 --> 00:03:22,625
多分 このオレンジの色合いでは無いだろうね

60
00:03:22,625 --> 00:03:25,710
つまり 相関は

61
00:03:25,710 --> 00:03:31,020
これらの高レベルの質感が 同時に起こるかどうか その傾向を表す

62
00:03:31,020 --> 00:03:35,550
画像の部分部分でね そして 相関度は

63
00:03:35,550 --> 00:03:40,455
これらの 異なる高レベル特徴が 一緒に起きる頻度を測る方法になる

64
00:03:40,455 --> 00:03:45,441
垂直の質感や このオレンジの色合いとか 他のもののね

65
00:03:45,441 --> 00:03:48,180
それらが どのくらい起きるか どのくらい一緒に起きるか

66
00:03:48,180 --> 00:03:51,740
そして どのくらい一緒に起きないか 画像の色んな場所でね

67
00:03:51,740 --> 00:03:57,180
そして スタイルを測るものとして チャンネル間の相関度を使うなら

68
00:03:57,180 --> 00:04:02,670
生成画像においても 相関度を測る

69
00:04:02,670 --> 00:04:06,810
この最初のチャンネルが この２番目のチャンネルと

70
00:04:06,810 --> 00:04:12,090
どのくらい 相関しているか していないかを測る
それで 生成画像において

71
00:04:12,090 --> 00:04:14,820
このような縦の質感が このオレンジの色合いと

72
00:04:14,820 --> 00:04:18,450
どのくらい頻繁に 一緒に 起こるのか 起こらないのか 分かる これにより

73
00:04:18,450 --> 00:04:25,675
生成画像のスタイルと 入力したスタイル画像のスタイルが どのくらい似ているか測れる

74
00:04:25,675 --> 00:04:28,600
この考察を 定式化しよう

75
00:04:28,600 --> 00:04:34,620
ある画像を元にして スタイル行列と呼ばれるものを計算する

76
00:04:34,620 --> 00:04:38,960
それは 前のスライドで話した 全ての相関を測るものだ

77
00:04:38,960 --> 00:04:44,280
a[l] i,j,k は

78
00:04:44,280 --> 00:04:47,868
位置 i, j, k における活性を表す

79
00:04:47,868 --> 00:04:53,610
隠れ層 l でのね そして i は 高さ

80
00:04:53,610 --> 00:04:54,850
j は 幅

81
00:04:54,850 --> 00:04:58,050
k は 各チャンネルを表す

82
00:04:58,050 --> 00:05:00,045
前のスライドでは

83
00:05:00,045 --> 00:05:05,165
５つのチャンネルがあったから k は ５チャンネルに跨るインデックスだ

84
00:05:05,165 --> 00:05:09,635
スタイル行列は こういうものだ

85
00:05:09,635 --> 00:05:17,390
まず G[l] で表される行列を計算する これは nC x nC 行列になる

86
00:05:17,390 --> 00:05:18,755
つまり 正方行列だ

87
00:05:18,755 --> 00:05:23,390
nC 個のチャンネルがあるわけで

88
00:05:23,390 --> 00:05:29,490
nC x nC 次元の行列は それらのペアがどれくらい相関しているか測るものだ

89
00:05:29,490 --> 00:05:32,585
例えば G[l]kk' は

90
00:05:32,585 --> 00:05:36,954
チャンネル k の活性と チャンネル k' の活性が

91
00:05:36,954 --> 00:05:41,755
どのくらい相関しているか測るものだ

92
00:05:41,755 --> 00:05:46,250
ここで k と k' は １~ nC までの値を取る

93
00:05:46,250 --> 00:05:49,630
その層での チャンネル数だ

94
00:05:49,630 --> 00:05:55,820
もっと正式に言うと G[l] を計算する方法は

95
00:05:55,820 --> 00:06:00,840
１要素を計算する式だけを書くと

96
00:06:00,840 --> 00:06:03,283
これの k k' 要素だ

97
00:06:03,283 --> 00:06:06,210
これは i の合計

98
00:06:06,210 --> 00:06:08,987
j の合計

99
00:06:08,987 --> 00:06:13,979
その層の活性 i, j ,k

100
00:06:13,979 --> 00:06:22,078
掛ける 活性 i,j,k'

101
00:06:22,078 --> 00:06:27,989
ここで i と j は ブロックの異なる場所に跨るインデックスだ

102
00:06:27,989 --> 00:06:30,453
高さと幅のインデックスだ

103
00:06:30,453 --> 00:06:39,755
よって i は １~ nH で j は １~ nW だ

104
00:06:39,755 --> 00:06:45,200
そして k と k' は チャンネルのインデックスだ

105
00:06:45,200 --> 00:06:47,870
よって k と k' の範囲は

106
00:06:47,870 --> 00:06:51,913
１から その層のチャンネル数までだ

107
00:06:51,913 --> 00:06:55,967
これは

108
00:06:55,967 --> 00:07:00,225
画像の異なる場所を 高さと幅に跨って 合計している そして

109
00:07:00,225 --> 00:07:03,640
チャンネル k と k' の活性を掛け算している

110
00:07:03,640 --> 00:07:08,853
これが Gkk' の定義だ

111
00:07:08,853 --> 00:07:14,450
これを 全ての k と k' について行うと この行列 G を得る

112
00:07:14,450 --> 00:07:17,585
これは スタイル行列とも呼ばれる

113
00:07:17,585 --> 00:07:23,435
この２つの活性が一緒に高くなる傾向があれば

114
00:07:23,435 --> 00:07:26,325
Gkk' は大きくなる

115
00:07:26,325 --> 00:07:28,510
一方 それらに相関が無ければ Gkk' は

116
00:07:28,510 --> 00:07:30,305
小さくなる

117
00:07:30,305 --> 00:07:32,060
洞察を伝えるために

118
00:07:32,060 --> 00:07:36,170
相関 という用語を使ったが

119
00:07:36,170 --> 00:07:40,130
正確に言うと 正規化されていない 相互共分散 だ

120
00:07:40,130 --> 00:07:46,130
なぜなら 平均値を引いておらず 単に 要素同士を直接掛け算しただけだからだ

121
00:07:46,130 --> 00:07:50,370
これが 画像のスタイルを計算する方法だ

122
00:07:50,370 --> 00:07:54,030
そして これを スタイル画像 S と

123
00:07:54,030 --> 00:08:01,020
生成画像 G に行う 区別したいので これは スタイル画像のだとしよう

124
00:08:01,020 --> 00:08:07,630
ここに (S) を加えよう

125
00:08:07,630 --> 00:08:10,105
これが スタイル画像 S のだという印だ

126
00:08:10,105 --> 00:08:12,715
そして これらが 画像 S の活性だ

127
00:08:12,715 --> 00:08:21,085
それから 同じことを 生成画像に対しても行う

128
00:08:21,085 --> 00:08:28,581
全く同じに 合計する a[l]ijk

129
00:08:28,581 --> 00:08:32,670
a[l]ijk (訳注：k に ' を付け忘れていると思われる)

130
00:08:32,670 --> 00:08:36,678
合計するインデックスは同じ

131
00:08:36,678 --> 00:08:46,130
そして これが 生成画像のだと示すため

132
00:08:46,130 --> 00:08:51,710
ここに (G) を付ける

133
00:08:51,710 --> 00:08:55,540
ここに ２つの行列を得た

134
00:08:55,540 --> 00:08:59,770
画像 S のスタイル と 画像 G のスタイルを 取り出すものだ

135
00:08:59,770 --> 00:09:05,260
ところで これらの行列を表すのに 大文字の G を使ってきたけど

136
00:09:05,260 --> 00:09:09,445
線形行列では これは

137
00:09:09,445 --> 00:09:14,030
グラム行列と呼ばれる しかし このビデオでは

138
00:09:14,030 --> 00:09:17,680
スタイル行列という用語を使っている グラム行列という用語なので

139
00:09:17,680 --> 00:09:23,630
この行列を表すのに 大文字の G を使っている

140
00:09:23,630 --> 00:09:26,035
最後に コスト関数

141
00:09:26,035 --> 00:09:28,875
スタイルコスト関数

142
00:09:28,875 --> 00:09:34,570
この層で S と G のを計算するなら

143
00:09:34,570 --> 00:09:37,050
今度は こう定義できる

144
00:09:37,050 --> 00:09:44,610
違いとして定義できる

145
00:09:44,610 --> 00:09:48,675
これらの 行列の違いとして

146
00:09:48,675 --> 00:09:54,265
...G[l](G) の２乗 これは行列だ

147
00:09:54,265 --> 00:09:55,754
よって フロベニウス ノルムにしよう

148
00:09:55,754 --> 00:10:00,660
これは 要素毎の違いの２乗の合計だ

149
00:10:00,660 --> 00:10:07,065
この２つの行列のね それから こう書こう

150
00:10:07,065 --> 00:10:12,964
k の合計 k' の合計することの この違い

151
00:10:12,964 --> 00:10:17,450
G[l](S)kk' - G[l](G)kk'

152
00:10:17,450 --> 00:10:24,530
そして 要素の２乗の合計

153
00:10:24,530 --> 00:10:32,715
著者らは 正規化の常数として これを使った 2 x nH x nW

154
00:10:32,715 --> 00:10:34,890
その層のだ

155
00:10:34,890 --> 00:10:40,015
その層の nC そして ２乗する 上にも これを置く

156
00:10:40,015 --> 00:10:43,600
ただし 正規化定数は そんなに重要じゃない なぜなら

157
00:10:43,600 --> 00:10:47,485
このコストは どうせハイパーパラメータ b が掛けられるから

158
00:10:47,485 --> 00:10:48,910
じゃ 仕上げよう

159
00:10:48,910 --> 00:10:51,970
これが 層 l を使って定義した

160
00:10:51,970 --> 00:10:55,645
スタイルコスト関数だ そして 前のスライドで見たように

161
00:10:55,645 --> 00:11:02,440
これは 基本的には ２つのスタイル行列の フロベニウス ノルム

162
00:11:02,440 --> 00:11:05,953
画像 S と 画像 G で計算したものだ

163
00:11:05,953 --> 00:11:10,810
フロベニウス ノルムの２乗だ 正規化定数は置かないけど

164
00:11:10,810 --> 00:11:13,255
重要じゃないから

165
00:11:13,255 --> 00:11:18,400
そして 最後に より視覚的に望ましい結果を得るには

166
00:11:18,400 --> 00:11:23,443
複数の異なる層の スタイルコスト関数を使うといい

167
00:11:23,443 --> 00:11:27,095
つまり 全ての スタイルコスト関数は

168
00:11:27,095 --> 00:11:31,305
こう定義できる

169
00:11:31,305 --> 00:11:37,640
全ての異なる層のスタイルコスト関数の合計

170
00:11:37,640 --> 00:11:41,820
パラメータで 重みも 入れるべきだ

171
00:11:41,820 --> 00:11:44,160
追加のハイパーパラメータのセットだ

172
00:11:44,160 --> 00:11:46,895
ここでは λ[l] で示そう

173
00:11:46,895 --> 00:11:51,595
これで ニューラルネットワークの異なる層が使える

174
00:11:51,595 --> 00:11:52,815
初めの方では

175
00:11:52,815 --> 00:11:55,800
相対的に単純な低レベルの特徴 エッジ等を測り

176
00:11:55,800 --> 00:11:59,050
同様に 後の方の層では

177
00:11:59,050 --> 00:12:03,000
高レベルの特徴を測る そして ニューラルネットワークが

178
00:12:03,000 --> 00:12:08,475
スタイルを計算する際 低レベルの相関も 高レベルのも 考慮に入れる

179
00:12:08,475 --> 00:12:10,845
プログラミング演習では

180
00:12:10,845 --> 00:12:13,980
もっと多くの洞察を得られるよ

181
00:12:13,980 --> 00:12:19,080
ハイパーパラメータ λ の適切な選び方等についてね

182
00:12:19,080 --> 00:12:20,790
まとめよう

183
00:12:20,790 --> 00:12:24,660
今は 全コスト関数を定義できるよね

184
00:12:24,660 --> 00:12:30,720
α x 内容関数 それは C G 間ので それに 足すことの

185
00:12:30,720 --> 00:12:37,515
β x スタイルコスト S G 間のだ そして 勾配降下法を使って

186
00:12:37,515 --> 00:12:40,785
もしくは やりたいなら もっと洗練されたアルゴリズムをを使って

187
00:12:40,785 --> 00:12:44,696
画像 G を見つけるためにね それで これを最小化する

188
00:12:44,696 --> 00:12:49,590
コスト関数 J(G) を最小化する そうすると

189
00:12:49,590 --> 00:12:53,730
とてもいい感じの ニューラル芸術 を生成できる

190
00:12:53,730 --> 00:12:59,220
そうしたら 何か とても良い 今までにない 芸術作品を 生み出せるだろう

191
00:12:59,220 --> 00:13:02,010
以上が ニューラル スタイル変換だ

192
00:13:02,010 --> 00:13:05,235
今週のプログラミング演習の実装が 楽しいといいね

193
00:13:05,235 --> 00:13:06,625
今週をまとめる前に

194
00:13:06,625 --> 00:13:08,575
１つだけ共有しておきたいことがある

195
00:13:08,575 --> 00:13:11,100
それは 2D画像だけでなく

196
00:13:11,100 --> 00:13:17,000
1Dや3Dデータに どのように畳み込みを行うかだ 最後のビデオに進もう