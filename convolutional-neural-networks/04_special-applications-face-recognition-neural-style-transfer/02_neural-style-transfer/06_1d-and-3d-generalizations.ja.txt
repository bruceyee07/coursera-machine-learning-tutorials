ConvNet について 多くを学んできた ConvNet の構造から 画像認識で それをどう使うか 物体検出で 顔認識で そして ニューラル スタイル変換で に至るまで全てを 議論の殆どは 画像についてのものだった ２Dデータだった なぜなら 画像は とても一般的だ しかし あなたが学んできた多くのアイデアは ２D画像に対してだけでなく １Dデータや３Dデータに対しても 適用できる 次の例をみてみましょう。 このコースの最初の週で ２D畳み込みを学習した 14 x 14 画像を入力し 5 x 5 フィルターで畳み込むのをやったでしょ 14 x 14 をどのようにして 5 x 5 で畳み込むか見たよね それは 10 x 10 を出力する 複数チャンネルがある場合 14 x 14 x 3 とかの場合は 5 x 5 の 同じ 3 に合うものになる そして 複数のフィルターがある場合 16フィルターの場合は 10 x 10 x 16 を得る 似たアイデアを １Dデータにも適用できる 例えば 左は EKG信号 心電図だ 電極を 胸に置き 小さな電圧の変化を 心臓の鼓動として 測定する 心臓の鼓動で生み出される 小さな電気の波を 電極のペアで測定できる それで これは 誰かの心臓の鼓動の EKG だ これらの各頂点は １つの鼓動に対応している 例えば EKG信号を使って 医療診断をしたい場合 １Dデータを使うことになる なぜなら EKGデータは 時系列で それぞれの短い時間での電圧を 見せるからだ よって 14 x 14 次元入力ではなく 単なる 14次元入力になる この場合 これを １次元フィルターで 畳み込みたいでしょ 5 x 5 フィルターじゃなくて 単に 5次元フィルターでね ２Dデータでは 畳み込みは 5 x 5 の Same特徴量検出器を使って 画像全体の沢山の場所で それを適用することができた そうやって 10 x 10 出力を得られた １Dフィルターだと ５次元フィルターを使い 同じように この１D信号全体の様々な場所に適用できる この畳み込みを適用すると 14次元のものを 5次元ので 畳み込むと 10次元の出力を得る そして もし複数チャンネルがあれば この場合 単に１チャンネルだから EKG１電極だから x 5 x 1 だ もし 16フィルターあれば 10 x 16 になるだろう これが ConvNet の１層となる ConvNet の次の層では もし 10 x 16 次元の入力で そして また５次元のフィルターで畳み込むなら そして それが16チャンネルだとする
ここは合ってないといけいない そして 32フィルターあるなら 別の層の出力は 6 x 32 だ 32フィルターならね ２Dデータへの類推で これは この場合と似ている 10 x 10 x 16 データを 5 x 5 x 16 で畳み込んで
ここは合ってないといけいない 6 x 6 次元の出力になる そして 32フィルターあれば 32になる これら全てのアイデアは １Dデータにも適用できる 同じように特徴検出器を作ることができ こんなのだ 多くの場所に適用できる 例えば EKG信号の異なる鼓動を検出するために使える 同じ特徴セットを使って 時系列上の異なる場所の 鼓動を検出できる
こんな風にして １Dデータにも ConvNet を使うことができる １Dデータアプリケーションに対しては 実際には 再帰型ニューラルネットワークを使うけどね それは 次のコースで学ぶよ でも ConvNet を この問題に使おうとしている人もいる 次の シーケンスモデルについてのコースでは このような 再帰型ニューラルネットワーク LCM その他のモデル について話す そういった 他の シーケンスデータ用に明確に設計されたモデルに対する １D ConvNet の利点と決定について話すよ これが ２Dから１Dへの一般化だ ３Dデータはどうだろうか？ ３次元データとは何だろか？ それは １Dリストの数でも ２D行列の数でも無い 今度は ３Dブロックだ 数値の 3次元の入力ボリュームだ ここに例がある CTスキャンだ これは X線でスキャンした 人体の３次元モデルだ ただし CTスキャンは 体全体に渡って 異なる切断面を取る CTスキャンでスキャンすると こんな風になる 人間の体の異なる切断面を見て それらがどんなだか調べられる つまり このデータは 根本的に ３次元だ このデータの考え方としては 高さと 幅と そして 深さを持っているものとできるだろう そこでは このボリュームの異なる断面がある 体に跨る 異なる断面だ ConvNet を 適用して この ３次元の CATスキャンや CTスキャンで 特徴を検出したいなら 最初のスライドの考えを ３次元の畳み込みにも使うことができる ３Dボリュームがあれば 簡単のため 14 x 14 x 14 とする これは 入力するCTスキャンの 高さと幅と深さだ そして また 画像と同じように 正方形の必要はない ３Dボリュームも 完全な立方体である必要はない 画像の 高さと幅は 違うかもしれない 同じように CTスキャンの 高さと幅と深さは 違うかもしれない でも 議論を簡単にするため 14 x 14 x 14 を使う そして 今度は 5 x 5 x 5 フィルターで畳み込むと 今度は フィルターも３次元になる そうしたら 10 x 10 x 10 ボリュームを得る 正確には x 1 だ チャンネル数を入れるならね これは ただの３Dボリュームだけど 色んな数のチャンネルを 持つことができる ここも x 1 になる
これがチャンネルで これもチャンネルで 合っている必要がある もし 16フィルターあるなら これが 5 x 5 x 5 x 1 だから 次の出力は 10 x 10 x 10 x 16 そして これが ３Dデータに対する ConvNet の１層だ ConvNet の次の層では 5 x 5 x 5 x 16 次元フィルターで畳み込む このチャンネル数は 例によって 合っていなくてはならない 32フィルターあるなら 画像のConvNetで見たのと同様 6 x 6 x 6 ボリュームを 32チャンネル得ることになる ３Dデータも ３次元 ConvNet を使って 直接 学習できる このフィルターは ３Dデータに跨った特徴を 検出している CATスキャン 医療スキャン は ３Dボリュームの１例だ 別のデータ例に ３Dボリュームとして扱えるのに 映画データがある 異なる断面になるのは 映画の時間が異なる断面だ そして これを使い 映画内の 人の動きを検出できる これが ConvNet の汎用化だ ２Dデータから１Dにも３Dデータにも汎化される 画像データは 一般的で広まっているので ConvNet の主流は ２Dデータだ つまり画像データだ しかし このような他のモデルも また 役に立つものだ 以上だ これが 今週の最後のビデオだ そして ConvNet コースの最後のビデオだ ConvNet について 沢山学んだね あなたの将来の仕事で これらのアイデアが役に立つといいな このビデオを終えたことに おめでとう と言いたい 今週のプログラミング演習を楽しんでほしい そして シーケンスモデルについての 次のコースで会うのを楽しみにしているよ