Bir Sinirsel Stil Transfer sistemi oluşturmak için, oluşturulan resim için bir maliyet fonksiyonu tanımlayalım. Bu maliyet fonksiyonunu minimize ederek sonrasında istediğiniz resimi oluşturabileceksiniz. Problem formülünün ne olduğunu hatırlayın. Size C içerik resmi, S stil resmi verilmişti ve amacınız yeni bir G resmi oluşturmaktı. Sinirsel stil transfer uygulaması için yapacağınız şey G'nin J transfer fonksiyonunu tanımlamak. Böylelikle oluşturulmuş belirli bir resmin ne kadar iyi olduğunu ölçebileceksiniz ve biz bu resmi oluşturmak için G'ye ait J'yi dereceli alçalma ile minimize edeceğiz. Belirli bir resim ne kadar iyi? Bu maliyet fonksiyonunun iki parçasını tanımlayacağız. İlk parça içerik maliyeti olarak adlandırılır. Bu fonksiyon içerik resmi ile oluşturulan resmin bir fonksiyonudur ve yaptığı şey oluşturulan resmin içeriği ile içerik resmi C'nin içeriği arasındaki benzerliği ölçmektir. Ve daha sonra buna S , G 'nin bir fonksiyonu olan stil maliyet fonksiyonu ekleyeceğiz böylelikle resim G ile resim S 'nin stillerinin ne kadar benzer olduğunu ölçeceğiz. Son olarak, bu iki alpha ve beta hiper parametrelerini ağırlıklandırarak stil maliyeti ve içerik maliyeti arasındaki göreceli ağırlığı belirleyeceğiz. Ağırlıklandırmanın göreli maliyetini belirtmek için iki farklı hiper parametre kullanmak gereksiz gözüküyor. Bir parametre yeterli gözükebilir ama Sinirsel Stil Transfer Algoritmaları 'nın orijinal yazarları iki farklı hiper parametre kullanırlar. Ben burada onların yaklaşımını takip edeceğim. Önümüzdeki birkaç videoda göstereceğim Sinirsel Stil Transfer Algoritmasi Leon Gatys, Alexander Ecker ve Matthias'a aittir. Makaleleri okumak için çok zor değildir bu neden ile bu birkaç videoyu izledikten sonra eğer isterseniz, özellikle makalelerine bakmanızı tavsiye ederim. Algoritmanın çalışma şekil şöyledir, gerçekte yeni bir görüntü oluşturmak için maliyet fonksiyonunu bulmak zorundadır, yaptığınız şey şöyledir. Oluşturulan resim G 'yi rastgele başlatırsınız böylelikle resim 100x100x3 veya 500x500x3 veya istediğiniz herhangi bir boyutta olabilir. Daha sonra bir önceki slayttaki G 'nin J maliyet fonksiyonunu hesaplarız. Bunu minimize etmek için dereceli alçalmayı kullanabilirsiniz böylelikle G 'yi G eksi G 'nin maliyet fonksiyonu J 'nin türevine göre güncelleyebilirsiniz. Bu işlemde, aslında 100x100x3 belki rgb kanal resmi olan G 'nin piksel değerlerini güncelliyoruz. İşte bir örnek, diyelim ki bu içerik resmi ve bu stil resmi ile başladınız. Bu muhtemelen başka bir Picasso resmi. G 'yi rastsal olarak başlattığınızda başlangıçta oluşturulan rastsal resminiz her piksel değerinin rastsal olarak seçildiği bu beyaz gürültü resmi olacaktır. Dereceli alçaltmayı kullandıkça, G 'nin maliyet fonksiyonu J 'yi pixel değerlerine göre yavaşça minimize edeceksiniz ve böylelikle stil resminizin stiline göre işlenmiş ve gittikçe daha fazla içerik resminize benzeyen bir resmi yavaşça elde edeceksiniz. Bu videoda oluşturulan G resmi için bir maliyet fonksiyonu tanımladığınız ve minimize ettiğiniz Sinirsel Stil Algoritması 'nın genel hatlarını gördünüz. Bir sonraki videoda içerik maliyet fonksiyonunun ve stil maliyet fonksiyonunun nasıl tanımlandığını göreceğiz. Bir sonraki videodan başlayarak buan bir göz atalım.