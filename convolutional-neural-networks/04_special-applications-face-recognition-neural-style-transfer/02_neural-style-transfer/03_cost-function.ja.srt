1
00:00:00,000 --> 00:00:02,400
ニューラル スタイル変換システムを構築するために

2
00:00:02,400 --> 00:00:05,730
生成画像に対するコスト関数を定義しよう

3
00:00:05,730 --> 00:00:09,953
後で見るように このコスト関数を最小化することで

4
00:00:09,953 --> 00:00:12,270
欲しい画像を生成できる

5
00:00:12,270 --> 00:00:15,231
問題の定義を覚えているかな

6
00:00:15,231 --> 00:00:17,400
内容画像 C と

7
00:00:17,400 --> 00:00:21,510
スタイル画像 S で 新しい画像 G を生成する

8
00:00:21,510 --> 00:00:26,180
ニューラル スタイル変換を実装するために

9
00:00:26,180 --> 00:00:34,080
コスト関数 J(G) を定義する
J は 生成画像の良さを測るものだ

10
00:00:34,080 --> 00:00:37,920
そして 勾配降下法を使って

11
00:00:37,920 --> 00:00:42,425
J(G) を最小化して この画像を生み出す

12
00:00:42,425 --> 00:00:44,490
この画像は どの程度いいのだろうか？

13
00:00:44,490 --> 00:00:48,460
では このコスト関数に ２つの部分を定義しよう

14
00:00:48,460 --> 00:00:52,190
最初の部分は 内容コストと呼ばれる

15
00:00:52,190 --> 00:00:56,480
これは 内容画像と生成画像の関数だ

16
00:00:56,480 --> 00:01:00,960
それは 生成画像の内容と 内容画像 C の内容が

17
00:01:00,960 --> 00:01:05,495
どのくらい似ているかを測る それから

18
00:01:05,495 --> 00:01:10,345
スタイルコスト関数を加える こっちは

19
00:01:10,345 --> 00:01:14,720
(S, G)の関数だ 画像 G のスタイル と 画像 S のスタイルが

20
00:01:14,720 --> 00:01:20,547
どのくらい似ているかを測る 最後に

21
00:01:20,547 --> 00:01:24,180
２つのハイパーパラメータ α と β で これらに重みを付ける

22
00:01:24,180 --> 00:01:29,610
内容コストとスタイルコストに 相対的な重みを指定するためだ

23
00:01:29,610 --> 00:01:33,405
相対的な重みコストを指定するのに

24
00:01:33,405 --> 00:01:44,370
２つの異なるハイパーパラメータを使うのは 冗長に思えるだろう

25
00:01:44,370 --> 00:01:47,070
１つのハイパーパラメータで十分に思える しかし

26
00:01:47,070 --> 00:01:50,230
ニューラル スタイル変換アルゴリズムの 最初の著者は

27
00:01:50,230 --> 00:01:52,410
２つの異なるハイパーパラメータを使う

28
00:01:52,410 --> 00:01:55,278
ここでは 彼らの表記法に従おう

29
00:01:55,278 --> 00:01:57,925
次の数本のビデオで説明する

30
00:01:57,925 --> 00:02:00,810
ニューラル スタイル変換アルゴリズムは

31
00:02:00,810 --> 00:02:04,200
Leon Gatys, Alexander Ecker そして Matthias によるものだ

32
00:02:04,200 --> 00:02:09,630
彼らの論文は 読むのが それほど難しくはない だから これからの数本のビデオを見た後

33
00:02:09,630 --> 00:02:14,550
そうしたいなら 彼らの論文を見ることを 強く推奨する

34
00:02:14,550 --> 00:02:17,910
アルゴリズムは 次のように動く

35
00:02:17,910 --> 00:02:21,300
コスト関数 J(G) を見つけて

36
00:02:21,300 --> 00:02:25,030
新しい画像を生成するためには 次のようにする

37
00:02:25,030 --> 00:02:29,035
生成画像 G をランダムに初期化する

38
00:02:29,035 --> 00:02:30,720
それは 100 x 100 x 3 や 500 x 500 x 3 になるだろう

39
00:02:30,720 --> 00:02:37,200
もしくは 何でも好きな次元にする

40
00:02:37,200 --> 00:02:41,885
それから 前のスライドの コスト関数 J(G) を定義する

41
00:02:41,885 --> 00:02:47,805
そして 勾配降下法を使い これを最小化するために G をこう更新する

42
00:02:47,805 --> 00:02:54,300
G - コスト関数 J (G) の G の微分 この処理では

43
00:02:54,300 --> 00:02:58,770
実際に 画像 G のピクセル値を更新する

44
00:02:58,770 --> 00:03:04,175
それは 100 x 100 x 3 等のRBGチャンネル画像だ

45
00:03:04,175 --> 00:03:10,215
例を挙げる この内容画像と このスタイル画像から始める

46
00:03:10,215 --> 00:03:13,365
これは 別の パブロ ピカソ 画だ

47
00:03:13,365 --> 00:03:15,855
それから G をランダムに初期化する

48
00:03:15,855 --> 00:03:18,535
最初のランダムに作った画像は

49
00:03:18,535 --> 00:03:24,110
各ピクセルがランダムに選ばれた ただのホワイトノイズだ

50
00:03:24,110 --> 00:03:25,905
勾配降下法を走らせるにつれ

51
00:03:25,905 --> 00:03:32,325
コスト関数 J(G) が小さくなり ゆっくりと ピクセル値が変化し

52
00:03:32,325 --> 00:03:36,030
ゆっくりと 画像が得られていく その画像は

53
00:03:36,030 --> 00:03:40,755
スタイル画像のスタイルで描かれた 内容画像にどんどん似ていく

54
00:03:40,755 --> 00:03:44,690
このビデオでは ニューラル スタイル変換全体の

55
00:03:44,690 --> 00:03:47,530
概要を見た

56
00:03:47,530 --> 00:03:51,420
生成画像 G のコスト関数を定義し それを最小化する

57
00:03:51,420 --> 00:03:53,420
次は どのようにして

58
00:03:53,420 --> 00:03:57,210
内容コスト関数 と スタイルコスト関数 を定義するのか見る

59
00:03:57,210 --> 00:03:59,530
次のビデオから それを見ていこう