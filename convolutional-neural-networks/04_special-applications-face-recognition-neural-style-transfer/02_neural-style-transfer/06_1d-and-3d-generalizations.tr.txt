ConvNets hakkında çok şey öğrendiniz, ConvNet'in mimarisini görüntü tanıma için nasıl kullanacağı, Nesne Algılama, Yüz Tanıma ve Nöral Tip transfer etme. Ve konunun çoğu görüntülere odaklanmış olsa da, 2D(2 Boyutlu) veri türünde, görüntüleri çok yaygın olduğu için. Hakkında öğrendiğiniz fikirlerin çoğunun da geçerli olduğu ortaya çıkıyor. sadece 2D (2 Boyutlu) görüntülere değil, aynı zamanda 1D(1 Boyutlu) verilerine ve 3D(3Boyutlu) verilere de. Hadi inceleyelim. Bu dersin ilk haftasında, 2D (2 Boyutlu) convolution(Evrişim) hakkında bilgi sahibi oldunuz. 14 x 14 görüntüyü girebileceğiniz ve 5 x 5 filtreli bir hale getirebiceğiniz yer. Ve 14 x 14'ün 5 x 5 ile nasıl örtüştüğünü gördünüz. Bu size 10 x 10 çıkış verir. Ve birden fazla kanalınız varsa, belki 14 x 14 x 3 o zaman aynı 3 ile eşleşen 5 x 5 olur. Ve eğer birden fazla filtreniz varsa, 16 filtreyi varsa 10 x 10 x 16 ile bitirin. Benzer bir fikir, 1D verilerine de uygulanabilir. Örneğin, solda elektrokardiyogram olarak da adlandırılan bir EKG sinyali bulunur. Temel olarak göğsünüze bir elektrot yerleştirirseniz, bu ölçümler Kalp atışlarınızın sonucuna göre göğsünüzde değişen küçük voltajlardır. Çünkü kalp atışlarınızın küçük elektrik dalgaları olabilir. bir çift elektrot ile ölçülür. Ve bu, birinin kalp atışının EKG'sidir. Ve böylece bu tepe noktalarının her biri bir kalp atışına tekabül eder. Yani, tıbbi teşhis yapmak için EKG sinyallerini kullanmak istiyorsanız, Örnek, daha sonra EKG verisi ne olduğu için 1D(1 Boyutlu) veriye sahip olursunuz, Zaman içinde her andaki gerilimi gösteren bir zaman serisidir. Yani 14 x 14 boyutlu bir (Veri) girişinden ziyade, belki sadece 14 boyutlu bir (Veri) girişiniz var. Ve bu durumda, bunu 1 boyutlu bir filtreyle karıştırmak isteyebilirsiniz. Yani 5 x 5 (Boyut) yerine sadece 5 boyutlu filtreniz var. Yani 2D (2 Boyutlu) veri ile bir convolution (Evrişim) yapmanıza izin vermesi aynı 5 x 5'i almaktı. özellik detektörü ve görüntü boyunca farklı pozisyonlarda uygular. 10 x 10 çıktınız bu şekilde. 1D(1 Boyutlu) filtrenin yapmanıza izin verdiği şey 5 boyutlu filtrelerinizi almak ve Benzer şekilde, bu 1D(1 Boyut) sinyali boyunca birçok farklı pozisyonda geçerlidir. Ve eğer bu convolution(Evrişim-i) uygularsanız, Bulduğun şey, 14 boyutlu bir şeyin Bu 5 boyutlu şey, bu size 10 boyutlu bir çıkış verecektir. Ve yine, birden çok kanalınız varsa, bu durumda sizde olabilir EKG için 1 kurşun veya 1 elektrot varsa, sadece 1 kanal kullanabilirsiniz, bu nedenle 5 x 1 kez. Ve eğer 16 filtreniz varsa, belki de 10 x 16 ile bitebilir, ve bu, ConvNet'inizin bir katmanı olabilir. Ve sonra ConvNet'in sonraki katmanı için 10 x 16 girerseniz boyutsal girdi ve bunu 5 boyutlu bir filtreyle tekrar canlandırabilirsiniz. Sonra bu 16 kanal var, bu yüzden bir eşleşme var. Ve 32 filtreniz var, sonra başka bir tabakanın çıktısı var 32 filtreniz varsa 6 x 32 olur, değil mi? Ve 2D verilere benzetme, Bu 10 x 10 x 16 veriye benzer ve 5 x 5 x 16 ile karıştırın ve bu eşleşmelidir. Bu size 6 x 6 boyutlu bir çıkış verecek ve 32 filtreniz var, buradan 32 gelir. Bu nedenle, tüm bu fikirler aynı zamanda sahip olabileceğiniz 1D (1 Boyutlu) verilerine de uygulanır. Bunun gibi özellik detektörü, çeşitli konumlara uygulanır. Örneğin, bir EKG sinyalindeki farklı kalp atımlarını tespit etmek için. Ancak kalp atışlarını farklı bir şekilde algılamak için aynı özellik setini kullanmak Bu zaman dizileri boyunca konumlar, ve böylece ConvNet 1D(1 Boyutlu) verilerinde bile kullanılabilir. 1D(1 Boyutlu) veri uygulamalarıyla birlikte, aslında tekrarlayan sinir ağını kullanıyorsunuz. Bir sonraki derste öğreneceğiniz Ancak bazı insanlar bu problemlerde ConvNets'i kullanmayı deneyebilirler. Ve sıradaki modeller, hakkında konuşacağımız tekrarlayan sinir ağları ve LCM(Latent Convolutional Model- Saklı Evrişim Modeli) ve bunun gibi diğer modeller. Bunlardan bazılarına karşı 1D(1 Boyutlu) ConvNets kullanmanın artıları ve eksileri hakkında konuşacağız Verileri sıralamak için açıkça tasarlanmış diğer modeller. Yani bu 2D'den 1D'ye genelleme. 3D(3 Boyutlu) veriye ne dersin? Peki, üç boyutlu veri nedir? 1D(1 Boyutlu) lık bir sayı listesi veya 2D(2 Boyutlu) matris sayıları dizisi yerine, Artık 3 boyutlu bir blok, sayıların üç boyutlu giriş hacmine sahipsiniz. İşte burada bir CT(Bilgisayarlı Tomografi) taraması yaparsanız, bunun örneği. Bu, vücudunuzun üç boyutlu bir modelini veren bir X-ışını taramasıdır. Ama bir CT(Bilgisayarlı Tomografi) taramasının yaptığı, vücudunuzda farklı dilimler almasıdır. Burada yaptığım CT(Bilgisayarlı Tomografi) taramasını taradığınızda, Nasıl baktıklarını görmek için insan vücudunun farklı dilimlerine bakabilirsiniz. bu nedenle bu veriler temel olarak üç boyutludur. Ve bu verileri düşünmenin bir yolu, verilerinizin şu an bir yüksekliğe sahip olmasından kaynaklanıyor. bazı genişlik, ve ayrıca bazı derinlik. Bu hacimdeki farklı dilimler olduğunda, gövde boyunca farklı dilimlerdir. Bu özellikteki özellikleri algılamak için bir ConvNet uygulamak istiyorsanız üç boyutlu CAT[Computerizing Axial Tomography (Bilgisayar Bağlantılı Eksenel Tomografi)] taraması veya CT(Bilgisayarlı Tomografi) taraması, daha sonra fikirleri genelleştirebilirsiniz Üç boyutlu convolutions(Evrişim) da ilk slayt. Yani, 3D(3 Boyutlu) bir sesiniz varsa ve sadelik uğruna diyelim ki 14 x 14 x 14 ve Bu, giriş CT(Bilgisayarlı Tomografi) taramasının yüksekliği, genişliği ve derinliğidir. Ve yine, tıpkı resimler gibi hepsinin kare olması gerekiyor. Bir 3D(3 Boyutlu) sesin de mükemmel bir küp olması gerekmez. Yani bir görüntünün yüksekliği ve genişliği farklı olabilir ve aynı şekilde bir CT(Bilgisayarlı Tomografi) taramasının yüksekliği ve genişliği ve derinliği farklı olabilir. Ama konuyu basitleştirmek için sadece 14 x 14 x 14 kullanıyorum. Ve eğer bunu şimdi 5 x 5 x 5 filtreyle birleştirirseniz, Yani artık filtreler de üç boyutlu Bu size 10 x 10 x 10 hacim verir. Ve teknik olarak, eğer kanal sayısıysa, 1'e de sahip olabilirsiniz. Yani bu sadece 3D(3 Boyutlu) bir hacimdir, ancak verileriniz de farklı olabilir Kanalların sayısı, daha sonra bu kez 1 kez olurdu. Çünkü burada kanal sayısı ve buradaki kanal sayısı eşleşmelidir. Ve sonra eğer 16 filtreniz varsa 5 x 5 x 5 x 1 sonra bir sonraki çıktı 10 x 10 x 10 x 16 olacaktır. Yani bu, 3D(3 Boyutlu) veri üzerinde ConvNet'inizin bir katmanı olabilir ve eğer bir sonraki ConvNet'in tabakası, 5 x 5 x 5 x 16 boyutlu bir filtreyle bunu tekrar şekillendirir. Dolayısıyla, bu kanal sayısı verileri her zamanki gibi eşleştirmeli ve 32 filtreniz varsa, gördüklerinize benzeyen resimlerin ConvNet'iydi. Şimdi 32 kanal boyunca 6 x 6 x 6 hacim olacak. 3D(3 Boyutlu) veriler de öğrenilebilir, üç boyutlu ConvNet kullanarak doğrudan. Ve bu filtrelerin yaptığı şey, 3D(3 Boyutlu) verilerinizdeki özellikleri gerçekten tespit eder, CAT[Computerizing Axial Tomography (Bilgisayar Bağlantılı Eksenel Tomografi)] tarar, 3 boyutlu ciltlerin bir örneği olarak tıbbi taramalar. Ama başka bir veri örneği, 3D bir ses olarak ele alındığında film verisi olurdu, Farklı dilimler, bir film boyunca zaman içinde farklı dilimler olabilir. Ve bunu hareket veya filmlerde harekete geçen insanları tespit etmek için kullanabilirsiniz. Yani bu ConvNets'in genelleştirilmesi 2D(2 Boyutlu) verilere ek olarak 3D(3 Boyutlu) veri de. Görüntü verileri o kadar yaygındır ki, ConvNets'in büyük çoğunluğu 2D verilerdedir. görüntü verisinde, ancak bu diğer modellerin de size yardımcı olacağını umuyorum. Yani bu, bu hafta bu son video ve ConvNets bu dersin son videosu. ConvNets hakkında çok şey öğrendiniz ve Umarım bu fikirlerin çoğunu gelecekteki çalışmanız için yararlı bulursunuz. Bu videoları bitirdiğiniz için tebrikler. Umarım bu haftanın egzersizinden keyif aldınız ve Sıralı modellerde bir sonraki derste de seni görmeyi dört gözle bekliyorum.