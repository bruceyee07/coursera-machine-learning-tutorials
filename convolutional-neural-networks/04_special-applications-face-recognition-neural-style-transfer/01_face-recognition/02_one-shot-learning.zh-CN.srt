1
00:00:00,590 --> 00:00:05,387
人脸识别的挑战之一是你需要解决

2
00:00:05,387 --> 00:00:07,010
单样本（one-shot）学习问题。

3
00:00:07,010 --> 00:00:10,380
也就是说，对于大多数人脸识别的应用

4
00:00:10,380 --> 00:00:14,695
你需要能够在只讲过一张照片的前提下认出一个人

5
00:00:14,695 --> 00:00:17,640
或只见过一个人的脸部一个例子。

6
00:00:17,640 --> 00:00:18,922
过去经验表明,

7
00:00:18,922 --> 00:00:23,580
如果只有一个训练样本, 那么深入的学习算法的效果很不好。

8
00:00:23,580 --> 00:00:26,163
这意味着什么？让我们看一个例子,

9
00:00:26,163 --> 00:00:29,270
然后再谈如何解决这个问题。

10
00:00:29,270 --> 00:00:33,270
假设说你有你的公司中四个的员工的照片

11
00:00:33,270 --> 00:00:34,310
的这样一个数据库

12
00:00:34,310 --> 00:00:38,680
这些其实是我的在 Deeplearning.AI的同事, Khan, Danielle

13
00:00:38,680 --> 00:00:40,350
Younes和Thian.

14
00:00:40,350 --> 00:00:43,340
现在, 假设, 有人出现在办公室,

15
00:00:43,340 --> 00:00:46,880
他们想通过转门

16
00:00:46,880 --> 00:00:52,710
系统必须做到的是, 尽管只见过Danielle的一张照片,

17
00:00:52,710 --> 00:00:56,170
但是必须能够认出这实际上是同一个人。

18
00:00:56,170 --> 00:00:59,640
相反, 如果它看到了一个不在这个数据库中的人,

19
00:00:59,640 --> 00:01:04,810
那么它应该能判断, 
这不是数据库中四人中的任何一个。

20
00:01:04,810 --> 00:01:06,560
因此, 在单样本学习问题中，

21
00:01:06,560 --> 00:01:11,860
你必须从一个样本中学习,
就可以做到能认出这个人

22
00:01:11,860 --> 00:01:12,780
大多数人脸识别系统都需要做到这样

23
00:01:12,780 --> 00:01:17,520
因为你的数据库中

24
00:01:17,520 --> 00:01:22,450
可能只有一张您的员工的照片

25
00:01:22,450 --> 00:01:27,990
你可以尝试的一种方法是输入这个人的照片,

26
00:01:27,990 --> 00:01:30,000
到ConvNet

27
00:01:30,000 --> 00:01:36,560
使得它通过4或者5输出的softmax 单位，输出一个标签, y,

28
00:01:36,560 --> 00:01:41,600
这些输出分别对应于上述四人中的每一个或不是任何一个

29
00:01:41,600 --> 00:01:44,530
这就是 softmax的5个输出

30
00:01:44,530 --> 00:01:46,140
但这其实效果不好

31
00:01:46,140 --> 00:01:50,410
因为如果你有这样一个小的训练集, 这真的不足以

32
00:01:50,410 --> 00:01:54,400
用来训练出一个可以解决这个任务的
足够鲁棒的神经网络

33
00:01:54,400 --> 00:01:57,660
而且，如果一个新人加入你的团队又会怎样呢？

34
00:01:57,660 --> 00:02:01,040
所以现在你有5人你需要识别,

35
00:02:01,040 --> 00:02:03,520
所以现在应该有六个输出

36
00:02:03,520 --> 00:02:06,070
你每次加入新人都要再训练 ConvNet 吗？

37
00:02:06,070 --> 00:02:08,110
这看起来真的不是个好方法

38
00:02:08,110 --> 00:02:12,480
因此要进行人脸识别, 要进行单样本（one-shot）学习。

39
00:02:12,480 --> 00:02:14,390
相反地, 为了使这项工作,

40
00:02:14,390 --> 00:02:18,350
你要做的是学习一个相似性函数

41
00:02:18,350 --> 00:02:22,190
特别地, 你需要用一个神经网络来学习一个函数

42
00:02:22,190 --> 00:02:26,930
表示为 d, 能对其输入的两个图像

43
00:02:26,930 --> 00:02:30,780
输出两个图像之间的差异程度

44
00:02:30,780 --> 00:02:34,780
如果这两张照片是同一个人

45
00:02:34,780 --> 00:02:37,660
您希望此输出是一个小数字

46
00:02:37,660 --> 00:02:42,550
如果两个图像是两个非常不同的人, 你希望它输出

47
00:02:42,550 --> 00:02:43,610
一个很大的数

48
00:02:43,610 --> 00:02:48,710
因此, 在识别的时间, 如果他们之间的差异程度小于

49
00:02:48,710 --> 00:02:54,560
一个阀值， tau , 这是一个 hyperparameter

50
00:02:54,560 --> 00:02:59,290
那你会推断这两张照片是同一个人

51
00:02:59,290 --> 00:03:05,000
如果输出比 tau 大, 你会预测这是两个不同的人

52
00:03:06,580 --> 00:03:12,510
因此, 这就是你如何解决人脸的验证问题。

53
00:03:12,510 --> 00:03:17,370
要将其用于识别任务, 你所要做的是

54
00:03:17,370 --> 00:03:23,200
给出一张新图片, 使用此函数 d 来比较这两个图像。

55
00:03:23,200 --> 00:03:28,450
也许输出是一个非常大的数字, 比如说 10, 

56
00:03:28,450 --> 00:03:32,500
然后在将这图片与数据库中的第二个图像进行比较。

57
00:03:32,500 --> 00:03:37,580
如果这次两个是同一个人, 希望能输出一个非常小的数字。

58
00:03:37,580 --> 00:03:42,110
然后继续对数据库里的其他照片做同样的事情

59
00:03:43,140 --> 00:03:48,630
基于这个, 你将会发现这实际上就是那个人,

60
00:03:48,630 --> 00:03:50,130
就是Danielle

61
00:03:50,130 --> 00:03:53,634
相反, 当您使用 d 函数
进行所有这些两两比较时,

62
00:03:53,634 --> 00:03:57,629
如果你的数据库里没有人足够近似

63
00:03:57,629 --> 00:04:03,050
希望对所有四次比对， d 都将输出有一个非常大的数字, 

64
00:04:03,050 --> 00:04:07,610
然后你说这不是数据库中四人中的任何一个。

65
00:04:07,610 --> 00:04:11,860
注意这是如何让你解决单样本（ one-shot ）学习问题的。

66
00:04:11,860 --> 00:04:16,970
只要你能学会这个函数 d, 其输入是一对图像

67
00:04:16,970 --> 00:04:20,600
并且大致告诉你, 他们是不是同一个人、

68
00:04:20,600 --> 00:04:23,790
如果你有新人加入你的团队

69
00:04:23,790 --> 00:04:28,850
您可以将第五人添加到您的数据库, 你的系统仍然可以正常运作

70
00:04:30,320 --> 00:04:34,452
你现在已经看到了如何通过学习
这种输入是两个图像的函数 d, 

71
00:04:34,452 --> 00:04:38,110
可以解决单样本（ one-shot ）学习问题。

72
00:04:38,110 --> 00:04:41,720
在下节课中, 让我们来看看如何才能真正

73
00:04:41,720 --> 00:04:44,550
训练神经网络来学习这个函数 d。
GTC字幕组 翻译