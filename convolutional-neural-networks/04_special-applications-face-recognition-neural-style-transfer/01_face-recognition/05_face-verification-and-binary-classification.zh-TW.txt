「三元損失」是個不錯的手法，可以學習 人臉辨識中 ConvNet 的參數 還有其他方法可以學到這些參數 讓我告訴你如何把人臉辨認 看成一個單純的二元分類問題 另一個訓練神經網路的方式 是把這一雙神經網路 拿這個 Siamese 網路，讓他們都去計算這些編碼 可能是 128 維的嵌入向量 (embeddings) 可能是更高維的 然後讓這些輸入到 一個羅吉斯迴歸分析的單元，然後就去預測 如果兩張圖是同一個人，則目標輸出是 1 如果是不同人就是 0 這樣子的方法把人臉辨識看作一個二元分類的問題 除了用三元損失，這是另一種訓練這種系統的方式 那麼，最後這個羅吉斯迴歸單元實際上做了什麼呢？ y hat 這個輸出會是 S型函數 套用在一些特徵上，不過，並不是直接餵進去這些編碼， 而是拿這兩個編碼的差異 讓我舉個例說明一下 例如，我這邊寫 k=1~128 去加總這絕對值 是這兩個編碼逐元素之間的差異 讓我寫這式子大家就會知道什麼意思 這個符號，f(xi) 是圖片 x(i) 的編碼 而下標 k 指的是拿這向量的第 k 維 所以這一項，是兩個編碼之間的逐元素差異後取絕對值 你可以把這 128 個數字想成特徵 然後把他們餵給羅吉斯迴歸 而你最終的羅吉斯迴歸可以有額外的參數 w_i, 和 b，就和一般的羅吉斯迴歸單元一樣 然後你會訓練出這 128 個特徵的權重 為了去預測 這兩張照片是不是同一個人 所以這是一個滿合理的方法 學習去預測出 0 或 1，看看他們是同個人還是不同人 還有其他幾個變形，關於 計算這綠色底線的公式 舉個例子，另個可能的式子是... 這個k, 減 f(xj)_k 然後取平方，然後除以 f(xi)_k 加 f(xj)_k。有時候這叫卡方公式 (chi-square) 這是希臘字母 𝛘 (chi) 有時候被稱作卡方相似度 (chi square similarity) DeepFace 這篇論文有探討這個式子及其他變形 也就是之前提到的論文 總之，在這個學習的公式 他的輸入是一對圖片 所以這其實是你的訓練輸入 x。而輸出 y 是 0 或是 1，取決於你輸入的是 一對相似還是不相似的圖片 和之前一樣 你訓練的是 Siamese 網路，也就是說 上面這個網路的參數和下面一樣 或者說是和下面網路綁在一起 這種系統效果也不錯 最後要提的是 一個計算上的小技巧，對你的系統佈署有明顯幫助 假設這是一張新圖片 這個員工走入旋轉門、閘門 希望門會打開，然後這是你資料庫裡的照片 那麼你並不需要 每次都去計算這個特徵、嵌入向量 你其實可以預先算好 所以一個新的員工走進來 你可以用上半部的 ConvNet 去計算編碼， 然後拿他去比較 你預先算好的編碼，然後去預測 y hat 這樣你就不用儲存原始的照片 而且如果你的員工資料庫很大 你不用每次都去計算資料庫裡每個員工的編碼 這種「預先計算」的概念 (pre-computing) 先計算一部分的編碼，就可以省下大量的計算 這種預先計算的概念可以用在 Siamese 網路的架構 當你把人臉辨識看成二元分類的時候 也可以用在學習編碼 例如前面影片提到的三元損失 那麼，總結一下 如果要把人臉驗證看成一種監督式學習 你建立一個訓練集，裡面有很多一對一對的圖片 而不是三張一組的圖片，然後目標標籤是 1 如果是同一個人的一對圖片；目標標籤是 0 如果這一對圖片是不同人 然後使用各種一對圖片 藉由反向傳播訓練神經網路、Siamese 網路 那麼，你剛剛看到的這個人臉驗證的版本 看成是一種二元分類的問題，而且能擴充成人臉辨識 這個版本效果也不錯 希望經過這些課程，我希望你已經了解 要怎麼去訓練 自己的一套人臉驗證或人臉辨認，解決單樣本問題