我们在上一节视频中学到，函数d的任务 是接受两张脸的输入，并告诉你，它们有多相似，或有多不同。 实现这个的一个好办法是Siamese网络。 让我们一起来看看让我们一起来看看 大家应该熟悉例如这样的ConvNet的例子 这里输入是一张图片，我们称之为x1 经过一系列的卷积和池化以及 全连接层，最后得到了一个特征向量，像这样。 我们有时候把它输入到一个softmax层中，去做分类。 在这节视频中我们不会这样去做。 而是专注在这个向量本身，比如说128个数 它由神经网络深处的某个全连接层计算而来。 我给这128个数(组成的向量）起个名字。 把它叫做 f(x1) 大家可以把f(x1)看成是输入图片x1的编码。 那么它接受一张输入图片，这里是Kian的照片， 将它重新表达为一个128个数字组成的向量。 那么构建一个人脸识别系统的方法就是，如果你想比较 两张图片，比如这里的第一张和第二张。 你可以将第二张图片输入到同一个网络 使用相同的参数，得到一个不同的，128个数字组成的向量 这就是第二张图片的编码。 我称之为 第二张图片的编码，即f(x2) 在这里我用x1和x2来代表两张输入图片。 它们不一定是你训练集中的 第一个和第二个样本。 可以是任意两张图片。 最后，如果你确信这些编码是对这两张图片 良好的表达，接下来你可以定义 距离d是x1和 x2这两张图片的编码 之间差的范数。 这种方法，用两个完全相同的 卷积神经网络对两张不同的图片进行计算，比较二者的结果 有时我们称之为孪生网络（Siamese Network）架构。 我呈现在这里的很多想法和理念来自于 Yaniv Taigman, Ming Yang, Marc'Aurelio, Ranzato 和 Lior Wolf 开发的DeepFace研究系统的论文 我呈现在这里的很多想法和理念来自于 Yaniv Taigman， Ming Yang, Marc'Aurelio Ranzato, 和 Lior Wolf 的一篇来自于他们开发的叫做DeepFace的系统的论文 那么你该如何训练Siamese Network? 考虑到这两个神经网络具有相同的参数 所以你想做的是训练神经网络 使得它计算的编码可以生成一个函数d来 告诉你这两张照片是同一个人的 更正式的来说，神经网络的参数定义了编码f（xi） 当给定输入图片xi， 这个神经网络输出这个128维的编码 f(xi) 更正式的来说，你想做的是学习参数以使得 如果两张图片xi和xj上是同一个人， 那么他们的编码的差距就会小 在之前的幻灯片中，我用了x1和x2，但是 它可以是训练集里的任何一对xi和xj， 相反的，如果xi和xj上是不同的人， 那么你就想要他们的编码的差距大。 因此, 当你改变所有这些层的神经网络的参数, 你最终会有不同的编码。 你可以做的是使用反向传播来 更改所有这些参数以确保满足这些条件。 现在你已经了解了Siamese Network的体系结构并且 对你想要神经网络给你什么样的一个 输出（需要输出一个好的编码而言）有了一个大概的了解 但你如何定义一个目标函数 让神经网络学会做我们刚才讨论的事情？ 在下一个视频中让我们看看如何使用三重损耗函数（triplet loss function）来做到这一点。