1
00:00:00,000 --> 00:00:02,580
Üçlü Kayıp öğrenmek için iyi bir yoldur

2
00:00:02,580 --> 00:00:05,950
Yüz tanıma için bir ölçünün parametreleri.

3
00:00:05,950 --> 00:00:08,490
Bu parametreleri öğrenmenin başka bir yolu var.

4
00:00:08,490 --> 00:00:11,475
Yüz tanımanın düz ikili bir sınıflandırma problemi olarak

5
00:00:11,475 --> 00:00:15,175
nasıl kaydedilebileceğini size göstereyim.

6
00:00:15,175 --> 00:00:17,085
Bir sinir ağını eğitmenin bir başka yolu,

7
00:00:17,085 --> 00:00:19,740
bu Siamese Ağını almak için bu sinir ağlarını bir araya getirmektir

8
00:00:19,740 --> 00:00:25,260
ve bu ikisini de hem bu bağıntıları hesaplamalıdır.

9
00:00:25,260 --> 00:00:27,255
Belki de 128 boyutlu gömmeler

10
00:00:27,255 --> 00:00:28,770
belki daha yüksek boyutlardır

11
00:00:28,770 --> 00:00:31,530
ve sonra bunlar için girdi var

12
00:00:31,530 --> 00:00:36,375
Daha sonra sadece bir tahmin yapmak için bir lojistik regresyon birimi.

13
00:00:36,375 --> 00:00:42,705
Eğer her ikisi de aynı kişilerse hedef çıktı, bir tane olacak

14
00:00:42,705 --> 00:00:46,530
ve her ikisi de farklı kişilerse sıfır olacaktır.

15
00:00:46,530 --> 00:00:52,960
Yani, bu yüz tanıma işleminin bir ikili sınıflandırma problemi olarak ele alınmasının bir yoludur.

16
00:00:52,960 --> 00:00:58,890
Ve bu, böyle bir sistemi eğitmek için üçlü kaybına bir alternatiftir.

17
00:00:58,890 --> 00:01:03,405
Şimdi, bu son yapısal bağlantı (logistic regression) birimi aslında ne yapıyor?

18
00:01:03,405 --> 00:01:08,400
Çıktı y şapka, bazı özellik kümelerine uygulanan bir s işlevi (sigmoid function) olacaktır,

19
00:01:08,400 --> 00:01:12,750
ancak bu kodlamaları beslemekten ziyade,

20
00:01:12,750 --> 00:01:18,690
yapabileceğiniz şey kodlamalar arasındaki farkları almaktır.

21
00:01:18,690 --> 00:01:20,795
Yani, ne demek istediğimi göstereyim.

22
00:01:20,795 --> 00:01:30,020
Diyelim ki, K üzerinde bir toplamı, iki farklı kodlama arasında

23
00:01:30,020 --> 00:01:35,525
akıllıca alınan mutlak değerin 1'den 128'e eşittir.

24
00:01:35,525 --> 00:01:39,930
Bunu yazmayı bitireyim ve sonra bunun ne anlama geldiğini göreceğiz.

25
00:01:39,930 --> 00:01:45,335
Bu gösterimde, x işareti x'in görüntü kodlamasıdır.

26
00:01:45,335 --> 00:01:52,210
ve ikame k sadece bu vektörün mağara bileşenlerini seçmek anlamına gelir.

27
00:01:52,210 --> 00:01:59,625
Bu, Y elemanının bu iki kodlama arasındaki mutlak değerlerdeki farkını almaktır.

28
00:01:59,625 --> 00:02:03,240
Ve yapabileceğiniz şey, bu 128 sayıları,

29
00:02:03,240 --> 00:02:07,140
daha sonra yapısal bağıntı(logistic regression) beslediğiniz özellikler olarak düşünmektir.

30
00:02:07,140 --> 00:02:11,350
Ve, bu küçük regresyonun ek parametrelere sahip olabileceğini göreceksiniz.

31
00:02:11,350 --> 00:02:16,030
i ve b normal bir yapısal bağıntı(logistic regression) birimine benzer.

32
00:02:16,030 --> 00:02:21,990
Ve bu 128 özellikte uygun beklemeyi yapacaksınız.

33
00:02:21,990 --> 00:02:24,105
olup olmadığını tahmin etmek

34
00:02:24,105 --> 00:02:28,225
Bu iki görüntü aynı kişiden veya farklı kişilerden oluşuyor.

35
00:02:28,225 --> 00:02:31,035
Yani, bu oldukça yararlı bir yol olacak

36
00:02:31,035 --> 00:02:37,300
Sıfır veya bir veya aynı kişi ya da farklı kişiler olup olmadığını tahmin etmeyi öğrenmek.

37
00:02:37,300 --> 00:02:40,230
Ve nasıl yapabileceğiniz hakkında birkaç başka varyasyon var.

38
00:02:40,230 --> 00:02:44,220
yeşil renkle vurguladığım bu formülü hesapla.

39
00:02:44,220 --> 00:02:51,405
Örneğin, başka bir formül bu x eksi f x j olabilir,

40
00:02:51,405 --> 00:02:56,220
k kare x x bölü f

41
00:02:56,220 --> 00:03:02,980
x k artı x üzerinde. Bu bazen chi kare formu denir.

42
00:03:02,980 --> 00:03:05,700
Bu Yunan alfabesi chi.

43
00:03:05,700 --> 00:03:08,874
Ama bu bazen chi kare benzerliği denir.

44
00:03:08,874 --> 00:03:15,810
Ve bu ve diğer varyasyonlar bu derin yüz kağıtta araştırılıyor,

45
00:03:15,810 --> 00:03:18,015
Daha önce de bahsettiğim.

46
00:03:18,015 --> 00:03:20,760
Yani bu öğrenme formülasyonunda,

47
00:03:20,760 --> 00:03:23,801
giriş bir çift görüntüdür

48
00:03:23,801 --> 00:03:28,920
bu gerçekten eğitim girişiniz x ve çıkış y

49
00:03:28,920 --> 00:03:32,085
girdiğinize bağlı olarak sıfır veya birdir

50
00:03:32,085 --> 00:03:35,680
bir çift benzer veya farklı olmayan görüntüler.

51
00:03:35,680 --> 00:03:37,070
Ve daha önce olduğu gibi,

52
00:03:37,070 --> 00:03:40,065
eğitimin Siyam Ağı olmak demek ki bu demek ki,

53
00:03:40,065 --> 00:03:44,035
Bu sinir ağının burada olduğu gibi parametreleri var.

54
00:03:44,035 --> 00:03:48,455
Bu alt sinir ağındaki parametrelere gerçekten bağlı.

55
00:03:48,455 --> 00:03:52,235
Ve bu sistem de oldukça iyi çalışabilir.

56
00:03:52,235 --> 00:03:53,420
Son olarak, sadece nöral yayılımı

57
00:03:53,420 --> 00:03:58,905
önemli ölçüde yardımcı olabilecek bir hesapsal numaradan bahsetmek gerekirse,

58
00:03:58,905 --> 00:04:00,375
ki bu yeni görüntü ise,

59
00:04:00,375 --> 00:04:03,910
bu da kapının turnike açılacağını ve bunun da

60
00:04:03,910 --> 00:04:08,815
veri tabanınızın görüntüsünden kaynaklandığını umuyor.

61
00:04:08,815 --> 00:04:11,190
Sonra, her seferinde

62
00:04:11,190 --> 00:04:17,520
bu gömülmeyi hesaplamak yerine,

63
00:04:17,520 --> 00:04:20,970
yapabileceğiniz yer aslında bunu önceden hesaplamaktır.

64
00:04:20,970 --> 00:04:22,970
Böylece, yeni çalışan içeri girdiğinde,

65
00:04:22,970 --> 00:04:29,500
Bunu yapabileceğiniz şey, kodlamayı hesaplamak ve kullanmak için bu üst bileşenleri kullanmaktır.

66
00:04:29,500 --> 00:04:31,020
sonra onu karşılaştır

67
00:04:31,020 --> 00:04:36,730
Önceden hesaplanmış kodlama ve sonra bir tahmin yapmak için bunu kullanın.

68
00:04:36,730 --> 00:04:40,770
Çünkü ham görüntüleri saklamanız gerekmez ve

69
00:04:40,770 --> 00:04:44,880
Ayrıca çok geniş bir çalışan veritabanınız varsa

70
00:04:44,880 --> 00:04:50,935
Her çalışan veritabanı için bu kodlamaları her zaman hesaplamanız gerekmez.

71
00:04:50,935 --> 00:04:52,980
Bu kodlamalardan bazılarının

72
00:04:52,980 --> 00:04:56,880
serbest hesaplanması fikri önemli bir hesaplamadan tasarruf edebilir.

73
00:04:56,880 --> 00:05:00,775
Ve bu tür ön hesaplama hem bu tür için çalışır

74
00:05:00,775 --> 00:05:02,950
Siamese Merkez mimarisi,

75
00:05:02,950 --> 00:05:07,485
yüz tanıma işleminin ikili bir sınıflandırma problemi olarak ele alındığı gibi,

76
00:05:07,485 --> 00:05:11,160
yanı sıra, kodlamayı öğrenirken belki de

77
00:05:11,160 --> 00:05:15,070
Son iki videoda anlatıldığı gibi Üçlü Kayıp fonksiyonu.

78
00:05:15,070 --> 00:05:16,760
Ve sadece sarmak için,

79
00:05:16,760 --> 00:05:19,530
Yüz doğrulama denetimli öğrenimini tedavi etmek,

80
00:05:19,530 --> 00:05:23,460
Şimdi sadece görüntü çiftlerinden oluşan bir eğitim seti oluşturuyorsunuz

81
00:05:23,460 --> 00:05:28,045
Hedef etiketin bir olduğu görüntü çiftleri üçlüleri.

82
00:05:28,045 --> 00:05:34,366
Bunlar aynı kişinin ve etiket etiketinin sıfır olduğu bir çift resim olduğunda

83
00:05:34,366 --> 00:05:38,880
Bunlar farklı kişilerin resimleri olduğunda ve

84
00:05:38,880 --> 00:05:40,845
tren için farklı çiftler

85
00:05:40,845 --> 00:05:45,660
Geri yayılımı kullanan bilim adamlarını eğitmek için sinir ağı.

86
00:05:45,660 --> 00:05:49,755
Bu yüzden, sadece yüz doğrulama işlemini gördüğünüz bu sürüm

87
00:05:49,755 --> 00:05:53,918
ve uzatma yüz tanıma göre ikili sınıflandırma problemi olarak,

88
00:05:53,918 --> 00:05:55,645
Bu da oldukça iyi çalışıyor.

89
00:05:55,645 --> 00:05:57,645
Bunun gibi, umarım şimdi biliyorsunuzdur,

90
00:05:57,645 --> 00:05:59,490
trene binip gitmeyeceği

91
00:05:59,490 --> 00:06:05,000
kendi yüz doğrulama ya da kendi yüz tanıma sisteminizi bir tane yapabilir