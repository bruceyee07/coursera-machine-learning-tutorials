1
00:00:00,590 --> 00:00:05,387
얼굴 인식의 문제점 중 하나는

2
00:00:05,387 --> 00:00:07,010
원샷 학습 문제를 해결해야 한다는 것입니다.

3
00:00:07,010 --> 00:00:10,380
즉, 대부분의 얼굴 인식 응용 프로그램에

4
00:00:10,380 --> 00:00:14,695
그 사람 얼굴의 이미지 혹은 예시로부터

5
00:00:14,695 --> 00:00:17,640
사람을 인식할 수 있어야 한다는 뜻이죠

6
00:00:17,640 --> 00:00:18,922
역사적으로 볼 때

7
00:00:18,922 --> 00:00:23,580
딥러닝 알고리즘은 트레이닝 사례가 하나만 있는 경우 제대로 작동하지 않습니다.

8
00:00:23,580 --> 00:00:26,163
예를 보고

9
00:00:26,163 --> 00:00:29,270
이 문제를 해결하는 방법에 대해 이야기 해 봅시다.

10
00:00:29,270 --> 00:00:33,270
여러분의 조직에 있는 직원들의 네 장의 사진으로 된 데이터베이스가 있다고 가정 해 보겠습니다.

11
00:00:33,270 --> 00:00:34,310
실제 사례들에 대해 알아보겠습니다.

12
00:00:34,310 --> 00:00:38,680
이들은 실제로 제 동료들인

13
00:00:38,680 --> 00:00:40,350
Deeplearning.AI, Khan, Daniel, Younes 및 Thian 입니다.

14
00:00:40,350 --> 00:00:43,340
이제 누군가가 사무실에 나타나서

15
00:00:43,340 --> 00:00:46,880
개찰구를 통과하길 원한다고 가정 해 봅시다.

16
00:00:46,880 --> 00:00:52,710
이 시스템이해야 할 일은, Daniel의 단 하나의 이미지 만 본 적이 있음에도 불구하고,

17
00:00:52,710 --> 00:00:56,170
실제로 이것이 같은 사람이라는 것을 인식하는 것입니다.

18
00:00:56,170 --> 00:00:59,640
이와는 대조적으로 이 데이터베이스에 없는 사람을 보면

19
00:00:59,640 --> 00:01:04,810
이것은 데이터베이스에 있는 네 명의 인물이 아니라는 것을 을 인식해야 합니다.

20
00:01:04,810 --> 00:01:06,560
따라서 원샷러닝 문제에서는

21
00:01:06,560 --> 00:01:11,860
한 가지 예를 통해 그 사람을 다시 인식해야 합니다.

22
00:01:11,860 --> 00:01:12,780
대부분의 얼굴 인식 시스템에 이 기능이 필요합니다.

23
00:01:12,780 --> 00:01:17,520
왜냐하면 여러분의 직원 데이터베이스에는

24
00:01:17,520 --> 00:01:22,450
각 직원 혹은 팀원들이 사진이 한 장만 존재할 수도 있기 때문입니다.

25
00:01:22,450 --> 00:01:27,990
따라서 시도 할 수 있는 한 가지 방법은 사람의 이미지를 입력하고

26
00:01:27,990 --> 00:01:30,000
컨볼네트로 보내는 것입니다.

27
00:01:30,000 --> 00:01:36,560
그리고 이것이 레이블 Y를 출력하게 하시면 됩니다.

28
00:01:36,560 --> 00:01:41,600
이 때, 이 네 사람 혹은 아무도 해당 되지 않는 네다섯 개의 아웃풋을 가진 softmax 유닛을 사용하십시오.

29
00:01:41,600 --> 00:01:44,530
그러면 softmax에서 이것은 5 개의 아웃풋이 될 것입니다

30
00:01:44,530 --> 00:01:46,140
그러나 이것은 실제로 잘 작동하지 않습니다

31
00:01:46,140 --> 00:01:50,410
왜냐하면 이렇게 작은 트레이닝 세트를 가지고 있다면,

32
00:01:50,410 --> 00:01:54,400
이 작업을 위한 강력한 신경망을 훈련시키기에 충분하지 않기 때문입니다.

33
00:01:54,400 --> 00:01:57,660
그리고 새로운 사람이 여러분의 팀에 합류하면 어떻게 될까요?

34
00:01:57,660 --> 00:02:01,040
그래서 지금 여러분이 알아야 할 다섯 명이 있으니

35
00:02:01,040 --> 00:02:03,520
이제 6 개의 출력이 있어야 합니다.

36
00:02:03,520 --> 00:02:06,070
매번 컨볼네트를 재 학습 시켜야 할까요?

37
00:02:06,070 --> 00:02:08,110
그것은 좋은 접근법으로 보이지 않습니다.

38
00:02:08,110 --> 00:02:12,480
따라서, 얼굴 인식을 수행하고, 원샷 학습을 수행하기 위해,

39
00:02:12,480 --> 00:02:14,390
또한, 이 작업을 수행하기 위해서,

40
00:02:14,390 --> 00:02:18,350
대신, 여러분이 할 일은 유사 함수를 배우는 것입니다

41
00:02:18,350 --> 00:02:22,190
특히, 신경망이 두 이미지를 입력하고

42
00:02:22,190 --> 00:02:26,930
그 둘 사이의 차이 정도를 출력하는

43
00:02:26,930 --> 00:02:30,780
d를 표시하는 함수를 학습하게 하면 됩니다.

44
00:02:30,780 --> 00:02:34,780
두 이미지가 같은 사람인 경우

45
00:02:34,780 --> 00:02:37,660
작은 숫자를 출력하게 하십시오.

46
00:02:37,660 --> 00:02:42,550
두 이미지가 서로 매우 다른 두 사람의 이미지 일 경우,

47
00:02:42,550 --> 00:02:43,610
큰 수를 출력하게 하십시오.

48
00:02:43,610 --> 00:02:48,710
그래서 인식 시간 동안, 그것들 사이의 차이의 정도가

49
00:02:48,710 --> 00:02:54,560
tau(타우)라고 불리는 어떤 임계 값보다 작으면, 이는 하이퍼 파라미터입니다.

50
00:02:54,560 --> 00:02:59,290
그러면 이 두 그림이 같은 사람이라는 것을 예측할 수 있습니다.

51
00:02:59,290 --> 00:03:05,000
그것이 타우보다 크다면, 여러분은 이들이 다른 사람들이라고 예측할 것입니다.

52
00:03:06,580 --> 00:03:12,510
이것이 얼굴 검증 문제를 해결하는 방법입니다.

53
00:03:12,510 --> 00:03:17,370
이것을 인식 작업에 사용하려면,여러분이 할 일은,

54
00:03:17,370 --> 00:03:23,200
이 새로운 그림이 주어지면, 이 함수 d를 사용하여 이 두 이미지를 비교하는 것입니다.

55
00:03:23,200 --> 00:03:28,450
그리고 아마도 이 예제에서는 매우 큰 숫자를 출력 하겠지만, 10 이라고 가정 해 봅시다.

56
00:03:28,450 --> 00:03:32,500
그런 다음 이것을 데이터베이스의 두 번째 이미지와 비교합니다.

57
00:03:32,500 --> 00:03:37,580
그리고 이 두 사람이 같은 사람이기 때문에 아주 작은 숫자를 출력 해 주십시오.

58
00:03:37,580 --> 00:03:42,110
데이터베이스의 다른 이미지 등에 대해서도 이렇게 합니다.

59
00:03:43,140 --> 00:03:48,630
그리고 이것을 바탕으로, 실제로 이 사람이

60
00:03:48,630 --> 00:03:50,130
Danielle 인 사람이라는 것을 알 수 있습니다.

61
00:03:50,130 --> 00:03:53,634
이 와는 대조적으로, 데이터베이스에 없는 사람이 나타나면

62
00:03:53,634 --> 00:03:57,629
함수 d를 사용하여 이러한 모든 쌍 비교를 수행 할 때,

63
00:03:57,629 --> 00:04:03,050
네 쌍 비교 모두에 대해 매우 큰 숫자가 출력되어야겠습니다.

64
00:04:03,050 --> 00:04:07,610
그러면 여러분은 이것은 데이터베이스에 있는 네 명 중 그 누구도 아니라고 말하게 되는 것이죠.

65
00:04:07,610 --> 00:04:11,860
어떻게 이것이 원샷 학습 문제를 풀 수 있도록 해주는지 잘 보십시오

66
00:04:11,860 --> 00:04:16,970
이 함수 d를 배울 수 있는 한, 한 쌍의 이미지를 입력하면,

67
00:04:16,970 --> 00:04:20,600
기본적으로 동일한 인물인지 다른 인물인지를 알려줍니다.

68
00:04:20,600 --> 00:04:23,790
새로운 사람이 팀에 합류하면

69
00:04:23,790 --> 00:04:28,850
데이터베이스에 다섯 번째 사람을 추가 할 수 있고, 그럼 잘 작동합니다.

70
00:04:30,320 --> 00:04:34,452
여러분께서는 이 d함수를 어떻게 학습하는지를 보셨습니다.

71
00:04:34,452 --> 00:04:38,110
이렇게 두 개의 이미지를 입력하면 원샷 학습 문제를 해결할 수 있습니다

72
00:04:38,110 --> 00:04:41,720
다음 강의에서는 실제로 신경망이

73
00:04:41,720 --> 00:04:44,550
이 함수 d를 학습하게 하는 방법을 살펴 보겠습니다.