1
00:00:00,000 --> 00:00:04,650
Sinir ağlarının parametrelerini

2
00:00:04,650 --> 00:00:07,875
yüz görselleri için iyi bir kod verecek şekilde öğrenmenin bir yolu

3
00:00:07,875 --> 00:00:11,930
üçüz yitim fonksiyonuna uygulanmış bir gradyan inişi tanımlamaktır.

4
00:00:11,930 --> 00:00:13,425
Hadi ne anlama geldiğini konuşalım

5
00:00:13,425 --> 00:00:15,341
Üçüz yitimi uygulamak için

6
00:00:15,341 --> 00:00:18,630
görsel çiftlerini karşılaştırmak gerekir.

7
00:00:18,630 --> 00:00:21,365
Örneğin, bu resimde

8
00:00:21,365 --> 00:00:24,075
sinir ağlarının parametrelerini öğrenmek için

9
00:00:24,075 --> 00:00:27,605
aynı anda birden fazla görsele bakmanız gerekmektedir.

10
00:00:27,605 --> 00:00:29,685
Örneğin, bu görsel çiftinde

11
00:00:29,685 --> 00:00:33,895
aynı insan oldukları için kodlamalarının benzer olmasını istersiniz.

12
00:00:33,895 --> 00:00:35,925
Halbuki, bu görsel çiftinde

13
00:00:35,925 --> 00:00:41,500
farklı insanlar oldukları için kodlamalarının oldukça farklı olmalarını istersiniz.

14
00:00:41,500 --> 00:00:44,770
Üçüz yitim terminolojisinde,

15
00:00:44,770 --> 00:00:49,290
her zaman yapacağınız şey bir çapa görsele bakmak ve

16
00:00:49,290 --> 00:00:53,820
çapa ve pozitif görsel arasındaki uzaklığı bulmaktır.

17
00:00:53,820 --> 00:00:55,200
Gerçek bir pozitif örnek,

18
00:00:55,200 --> 00:00:58,025
aynı kişinin benzer olduğu anlamına gelmektedir.

19
00:00:58,025 --> 00:01:01,470
Oysa, çiftler negatif örnek ile karşılaştırıldığında

20
00:01:01,470 --> 00:01:07,455
uzaklık daha fazla olduğu için çapaya ihtiyaç duyulmaktadır.

21
00:01:07,455 --> 00:01:10,755
İşte bu, üçüz yitim terimine yol açmıştır.

22
00:01:10,755 --> 00:01:15,145
Her zaman bir kerede üç görsele bakılacaktır.

23
00:01:15,145 --> 00:01:17,415
Çapa görsele bakıyor olacaksınız

24
00:01:17,415 --> 00:01:22,185
Pozitif görsele ve aynı zamanda negatif görsele de.

25
00:01:22,185 --> 00:01:25,993
Ve ben çapa pozitif ve negatifi A,

26
00:01:25,993 --> 00:01:29,561
P ve N olarak kısaltacağım. Yani bunu formüllemek istersek,

27
00:01:29,561 --> 00:01:32,700
Kodlamanızın sinir ağlarının parametreleri için istediğiniz,

28
00:01:32,700 --> 00:01:36,060
takip eden özellikleri sağlamasıdır,

29
00:01:36,060 --> 00:01:39,735
çapa kodlaması ve pozitif örnek kodlaması

30
00:01:39,735 --> 00:01:44,445
arasındaki fark

31
00:01:44,445 --> 00:01:47,865
bunun özellikle küçük olmasını istersiniz.

32
00:01:47,865 --> 00:01:52,950
Bunun çapa kodlaması ve negatif kodlaması arasındaki büyüklüğün

33
00:01:52,950 --> 00:01:58,900
karesinden küçük yada eşit olmasını istersiniz.

34
00:01:58,900 --> 00:02:02,485
Elbette burada bu A ve P'nin d'si

35
00:02:02,485 --> 00:02:06,610
bu A'nın, N'nin d'si.

36
00:02:06,610 --> 00:02:11,280
Ve d'yi bir uzaklık fonksiyonu olarak düşünebilirsiniz

37
00:02:11,280 --> 00:02:14,700
işte bu yüzden d harfi ile isimlendirildi. Şimdi,

38
00:02:14,700 --> 00:02:18,825
eğer terimi bu fonksiyonun sağ tarafından sol tarafına kaydırırsak,

39
00:02:18,825 --> 00:02:25,140
sonuçta elde edilen f(A) - f(P)'nin karesi,

40
00:02:25,140 --> 00:02:27,675
Şimdi de sağ tarafa bakalım

41
00:02:27,675 --> 00:02:31,404
eksi f(N)'nin karesi

42
00:02:31,404 --> 00:02:34,800
Bunun 0'a eşit veya 0'dan küçük olmasını istersiniz.

43
00:02:34,800 --> 00:02:38,280
Ancak şimdi, bu ifadede küçük bir değişiklik yapacağız

44
00:02:38,280 --> 00:02:41,420
Bunu sağlamanın küçük bir yolu

45
00:02:41,420 --> 00:02:44,245
her şeyin sıfıra eşit olduğunu öğrenmektir.

46
00:02:44,245 --> 00:02:46,275
Eğer f her zaman sıfıra eşit olursa

47
00:02:46,275 --> 00:02:47,955
o zaman bu sıfır eksi sıfır

48
00:02:47,955 --> 00:02:50,545
ki bu sıfırdır. Sıfır eksi sıfır sıfırdır.

49
00:02:50,545 --> 00:02:57,140
Ve böyle, herhangi bir görselin f'sinin sıfırlarla dolu bir vektöre eşit olduğunu söyleyerek

50
00:02:57,140 --> 00:03:01,410
neredeyse kolaylıkla bu denklemi sağlamış oluyorsunuz.

51
00:03:01,410 --> 00:03:07,465
Sinir ağlarının tüm kodlamalar için sadece sıfır vermeyeceğinden emin olmak için,

52
00:03:07,465 --> 00:03:12,480
yani tüm kodlamaları birbirine eşit olarak tanımlamayacağından emin olmak için.

53
00:03:12,480 --> 00:03:16,285
Sinir ağlarının küçük bir çıktı vermesinin bir diğer yolu ise

54
00:03:16,285 --> 00:03:20,246
her görselin kodlamasının diğer görsellerin kodlamasına aynı olmasıdır.

55
00:03:20,246 --> 00:03:25,400
Bu durumda yine sıfır eksi sıfır elde edilecektir.

56
00:03:25,400 --> 00:03:28,075
Bir sinir ağının bunu yapmasını engellemek için

57
00:03:28,075 --> 00:03:32,370
yapacağımız şey, bu sadece sıfırdan küçük ya da

58
00:03:32,370 --> 00:03:36,985
sıfıra eşit değil, sıfırdan az küçük olmalıdır diyecek şekilde

59
00:03:36,985 --> 00:03:40,575
bu hedefi modifiye etmektedir.

60
00:03:40,575 --> 00:03:45,755
Yani, özellikle, eğer bu eksi alfadan küçük olmalı dersek,

61
00:03:45,755 --> 00:03:49,235
ki burada alfa diğer bir üst değişkendir,

62
00:03:49,235 --> 00:03:53,475
o zaman bu sinir ağlarının aşikar bir çözüm üretmesini engelleyecektir.

63
00:03:53,475 --> 00:03:55,230
Ve genel olarak

64
00:03:55,230 --> 00:03:59,550
oraya artı alfa yerine eksi alfa yazarız.

65
00:03:59,550 --> 00:04:02,763
Bu aynı zamanda kenar payı olarak isimlendirilir.

66
00:04:02,763 --> 00:04:05,190
Eğer destek vektör makinası literatüründe gördü iseniz,

67
00:04:05,190 --> 00:04:10,320
bu aşina olacağınız bir tanımdır.

68
00:04:10,320 --> 00:04:12,675
Ancak değil ise endişelenmeyiniz.

69
00:04:12,675 --> 00:04:17,995
Kenar payı parametresini ekleyerek bu denklemi en üst seviyeye modifiye edebiliriz.

70
00:04:17,995 --> 00:04:19,395
Yani, bir örnek vermek gerekirse,

71
00:04:19,395 --> 00:04:23,260
Kenar payının 0,2'ye eşitlendiğini varsayalım.

72
00:04:23,260 --> 00:04:24,855
Eğer bu örnekte,

73
00:04:24,855 --> 00:04:29,550
çapa ve pozitif'in d'leri 0,5'e eşit ise,

74
00:04:29,550 --> 00:04:32,580
o zaman çapa ile negatif'in arasındaki d,

75
00:04:32,580 --> 00:04:37,087
biraz daha büyük, örneğin 0,51 ise memnun olmayacaksınızdır.

76
00:04:37,087 --> 00:04:41,610
Her ne kadar 0,51 0,5'ten büyük olsa da

77
00:04:41,610 --> 00:04:43,917
bunun yeterli olmadığını, dfA N'nin

78
00:04:43,917 --> 00:04:47,610
özellikle dfA P'den

79
00:04:47,610 --> 00:04:49,245
çok daha büyük olmasını isteyeceksinizdir.

80
00:04:49,245 --> 00:04:53,520
Bunun en az 0,7 veya daha büyük olmasını istersiniz.

81
00:04:53,520 --> 00:04:58,740
Alternatif olarak, bu kenar payını veya en az 0,2'lik bu farkı elde etmek için

82
00:04:58,740 --> 00:05:02,330
bunu en az alfa kadar,

83
00:05:02,330 --> 00:05:06,305
çapa ve pozitife karşılık çapa ve negatif arasındaki fark olan 0,2lik üst değişken alfa kadar

84
00:05:06,305 --> 00:05:09,350
fark elde edecek şekilde

85
00:05:09,350 --> 00:05:14,530
aşağıya veya yukarıya ittirebilirsiniz.

86
00:05:14,530 --> 00:05:17,491
işte bu bir kenar payı parametresine sahip olmanın yaptığı şeydir

87
00:05:17,491 --> 00:05:19,055
çapa pozitif çiftini ve çapa negatif çiftini

88
00:05:19,055 --> 00:05:25,720
birbirinden daha uzağa iter.

89
00:05:25,720 --> 00:05:29,435
Şimdi bu aşağıdaki denklemi ele alalım,

90
00:05:29,435 --> 00:05:31,160
ve bir sonraki slaytta

91
00:05:31,160 --> 00:05:35,225
formüle edelim ve üçüz yitim fonksiyonunu tanımlayalım.

92
00:05:35,225 --> 00:05:40,810
Üçüz yitim fonksiyonu üçlü görseller ile tanımlanmıştır.

93
00:05:40,810 --> 00:05:43,465
Çapa pozitif ve negatif örnekler olan,

94
00:05:43,465 --> 00:05:46,350
A, P ve N,

95
00:05:46,350 --> 00:05:48,990
üç görsel.

96
00:05:48,990 --> 00:05:53,245
Yani, pozitif örnekler çapa ile aynı kişidir,

97
00:05:53,245 --> 00:05:58,040
ancak negatif çapadan farklı bir kişidir.

98
00:05:58,040 --> 00:06:01,515
Yitimi şu şekilde tanımlayacağız.

99
00:06:01,515 --> 00:06:03,055
Aslında üçlü görseller üzerinden

100
00:06:03,055 --> 00:06:06,465
tanımlanan bu örnekteki yitim

101
00:06:06,465 --> 00:06:10,169
Önce bir önceki slayttakileri kopyalamama müsaade edin.

102
00:06:10,169 --> 00:06:16,045
Şöyle ki, bu fA eksi fP kare

103
00:06:16,045 --> 00:06:23,790
eksi fA eksi fN kare,

104
00:06:23,790 --> 00:06:26,755
ve sonra artı alfa, kenar parametresi

105
00:06:26,755 --> 00:06:31,600
ve istediğiniz bunun sıfıra eşit veya sıfırdan küçük olmasıdır.

106
00:06:31,600 --> 00:06:34,365
Yani, yitim fonksiyonunu tanımlamak için

107
00:06:34,365 --> 00:06:39,040
bu ve sıfır arasındaki en büyüğü alalım.

108
00:06:39,040 --> 00:06:42,030
Yani en büyüğü almanın buradaki etkisi şudur ki

109
00:06:42,030 --> 00:06:45,225
bu sıfırdan küçük olduğu sürece

110
00:06:45,225 --> 00:06:47,070
yitim sıfırdır

111
00:06:47,070 --> 00:06:49,847
çünkü sıfır, sıfır olduğu zaman

112
00:06:49,847 --> 00:06:52,705
en büyük sıfıra eşitten daha küçük olacaktır.

113
00:06:52,705 --> 00:06:56,370
Böylece, yeşil ile altını çizdiğim bu şeyi yapma hedefini gerçekleştirdiğiniz sürece,

114
00:06:56,370 --> 00:07:00,950
bunu sıfıra eşit veya sıfırdan küçük yapma hedefini elde ettiğiniz sürece

115
00:07:00,950 --> 00:07:04,150
bu örnekteki yitim sıfıra eşit olacaktır.

116
00:07:04,150 --> 00:07:05,355
Ancak diğer taraftan,

117
00:07:05,355 --> 00:07:07,650
eğer bu sıfırdan büyük ise,

118
00:07:07,650 --> 00:07:09,120
eğer en büyüğü alırsan,

119
00:07:09,120 --> 00:07:10,665
seçmiş olduğumuz en büyük

120
00:07:10,665 --> 00:07:12,343
burada yeşil ile çizdiğim şey,

121
00:07:12,343 --> 00:07:15,455
o zaman pozitif bir yitiminiz olacaktır.

122
00:07:15,455 --> 00:07:17,475
Böylece, bunu en aza indirmeyi denerken

123
00:07:17,475 --> 00:07:22,130
bunun bu şeyi sıfıra indirme etkisi olacaktır,

124
00:07:22,130 --> 00:07:23,450
sıfıra eşit veya sıfırdan küçük.

125
00:07:23,450 --> 00:07:26,550
Ve sonra, burada sıfır veya sıfıra eşit veya sıfırdan küçük olduğu sürece,

126
00:07:26,550 --> 00:07:31,980
sinir ağı ne kadar negatif olduğunu önemsemeyecektir.

127
00:07:31,980 --> 00:07:33,990
İşte, bu tek bir üçlü üzerinde

128
00:07:33,990 --> 00:07:38,970
yitim fonksiyonunun nasıl tanımlandığıdır ve sinir ağınız için genel bedel fonksiyonu

129
00:07:38,970 --> 00:07:47,575
eğitim setindeki değişik üçlüler üzerindeki münferit kayıpların toplamıdır.

130
00:07:47,575 --> 00:07:55,080
Yani, örneğin 1.000 farklı kişinin 10.000 görselinden oluşan bir eğitim setiniz varsa,

131
00:07:55,080 --> 00:08:00,360
yapmanız gereken 10.000 görselinizi almak ve bunu bu şekilde üçlüler seçmek,

132
00:08:00,360 --> 00:08:03,720
oluşturmak için kullanıp, daha sonra öğrenme algoritmanızı

133
00:08:03,720 --> 00:08:08,005
bu tip bir bedel fonksiyonu üzerinde, ki bu aslında eğitim setinizden çekilmiş üçlü görsellerle tanımlanır,

134
00:08:08,005 --> 00:08:14,145
gradyan inişi kullanarak eğitmektir.

135
00:08:14,145 --> 00:08:19,635
Üçlülerden oluşan bu veri setini tanımlamak için

136
00:08:19,635 --> 00:08:25,405
bazı A ve P çiftlerine ihtiyacınız olacağına dikkat edin. Aynı insana ait farklı görsel çiftleri.

137
00:08:25,405 --> 00:08:27,510
Yani sisteminizi eğitmenin amacı,

138
00:08:27,510 --> 00:08:32,600
aynı kişiye ait birden çok görsel içeren bir veri setine ihtiyacınız vardır.

139
00:08:32,600 --> 00:08:33,960
İşte bu sebeple bu örnekte,

140
00:08:33,960 --> 00:08:38,040
1.000 farklı kişiye ait 10.000 görsel olursa dedim,

141
00:08:38,040 --> 00:08:40,965
böylece belki bütün veri setinizi yapmak için

142
00:08:40,965 --> 00:08:44,310
1.000 kişinin her birinin ortalamada 10 görseli olabilir.

143
00:08:44,310 --> 00:08:47,085
Her kişinin sadece bir görseli olsaydı,

144
00:08:47,085 --> 00:08:49,725
bu sistemi aslında eğitemezdiniz.

145
00:08:49,725 --> 00:08:52,080
Fakat elbette eğitildikten sonra

146
00:08:52,080 --> 00:08:54,205
bunu uygularsanız

147
00:08:54,205 --> 00:08:56,565
fakat elbette sistemi eğittikten sonra,

148
00:08:56,565 --> 00:08:58,200
yüz tanıma sistemindeki

149
00:08:58,200 --> 00:09:02,685
tek seferlik öğrenme problemine uygulayabilirsiniz

150
00:09:02,685 --> 00:09:06,945
belki de tanımaya çalıştığınız bir kişiye ait tek bir görseliniz vardır.

151
00:09:06,945 --> 00:09:08,335
Ancak eğitim setiniz için,

152
00:09:08,335 --> 00:09:12,780
aynı kişiye ait birden fazla görsel olduğundan emin olmalısınız

153
00:09:12,780 --> 00:09:14,940
en azından eğitim setinizdeki bazı insanlar için

154
00:09:14,940 --> 00:09:19,000
bu sayede çapa ve pozitif görsel çiftleriniz olabilir.

155
00:09:19,000 --> 00:09:25,240
Şimdi, eğitim setinizi oluşturmak için bu üçlüleri nasıl seçersiniz?

156
00:09:25,240 --> 00:09:28,635
Problemlerden biri, eğer A, P

157
00:09:28,635 --> 00:09:34,260
ve N'yi A ve P aynı kişiden olacak şekilde eğitim setinizden rastlantısal olarak seçerseniz

158
00:09:34,260 --> 00:09:36,270
ve A ve N farklı kişiler olarak,

159
00:09:36,270 --> 00:09:40,140
problemlerden biri şudur ki, rastlantısal olarak seçerseniz

160
00:09:40,140 --> 00:09:44,160
o zaman bu koşulu yerine getirmek çok kolay olacaktır.

161
00:09:44,160 --> 00:09:48,405
Çünkü insanlar ait iki rastlantısal olarak seçilmiş görsel ele alındığında,

162
00:09:48,405 --> 00:09:51,945
A ve N'nin A ve P'den çok daha farklı olması olasıdır.

163
00:09:51,945 --> 00:09:55,740
Umarım bu gösterimi hala hatırlıyorsunuzdur,

164
00:09:55,740 --> 00:10:02,710
bu d(A, P), bu kodlama olarak geçen yılın slaytlarında yazdığımız şeydir.

165
00:10:02,710 --> 00:10:06,190
Yani, bu aslında sadece

166
00:10:06,190 --> 00:10:11,040
bir önceki slaytta olan kodlamalar arasındaki bilinen farkın karesine eşittir.

167
00:10:11,040 --> 00:10:14,640
Fakat, eğer A ve N iki rastlantısal olarak seçilmiş farklı kişi ise

168
00:10:14,640 --> 00:10:17,610
o zaman bunun soldaki terime kıyasla kenar payı alfadan

169
00:10:17,610 --> 00:10:21,630
çok daha büyük olması şansı çok yüksektir.

170
00:10:21,630 --> 00:10:24,405
Ve böylece, sinir ağı bundan çok fazla öğrenemeyecektir.

171
00:10:24,405 --> 00:10:25,940
Sonuç olarak, bir eğitim seti oluşturmak için,

172
00:10:25,940 --> 00:10:28,340
yapmak istediğiniz üzerinden eğitilmesi zor olan

173
00:10:28,340 --> 00:10:31,280
A, P ve N üçlüleri seçmektedir.

174
00:10:31,280 --> 00:10:38,685
Yani her bir üçlü için bilhassa istediğiniz bu kısıtın sağlanmasıdır.

175
00:10:38,685 --> 00:10:44,995
İşte, d(A,P)nin d(A,N)ye oldukça yakın olduğu

176
00:10:44,995 --> 00:10:47,454
A,P ve N değerleri seçerseniz

177
00:10:47,454 --> 00:10:52,550
zor bir üçlü olmuş olur.

178
00:10:52,550 --> 00:10:54,020
Böyle bir durumda,

179
00:10:54,020 --> 00:10:57,230
öğrenme algoritmasının, sol taraf ve sağ taraf arasında

180
00:10:57,230 --> 00:11:00,740
en azından alfa kadar kenar payı olması için sağdaki bu şeyi

181
00:11:00,740 --> 00:11:04,030
alıp yukarıya ittirmeyi demesi veya soldaki bu şeyi alıp

182
00:11:04,030 --> 00:11:08,430
aşağıya ittirmeyi denemesi oldukça zor olacaktır.

183
00:11:08,430 --> 00:11:11,900
Ve bu üçlüleri seçmenin etkisi

184
00:11:11,900 --> 00:11:16,460
öğrenme algoritmanızın hesaplama verimliliğinin artması olacaktır.

185
00:11:16,460 --> 00:11:18,500
Eğer üçlülerinizi rastlantısal olarak seçerseniz,

186
00:11:18,500 --> 00:11:21,725
o zaman çok fazla üçlü oldukça kolay olacaktır, ve böylece

187
00:11:21,725 --> 00:11:25,970
hemen hemen her zaman sinir ağı doğru sonuç vereceği için

188
00:11:25,970 --> 00:11:27,090
gradyan inişi pek birşey yapmayacaktır.

189
00:11:27,090 --> 00:11:32,270
Ve gradyan inişi prosedürü sadece zor örneklerde, bu nicelikleri diğer niceliklerden

190
00:11:32,270 --> 00:11:38,700
daha uzağa ittirmek için bir şeyler yapmak durumunda kalacaktır.

191
00:11:38,700 --> 00:11:40,155
Eğer ilginizi çekiyorsa,

192
00:11:40,155 --> 00:11:46,295
detaylar bu videoda sunduğum birçok fikiri aldığım

193
00:11:46,295 --> 00:11:51,305
Florian Schroff, Dmitry Kalinichenko ve James Philbin'nin

194
00:11:51,305 --> 00:11:55,860
FaceNet isimli bir sistemlerinin olduğu bu makalesinde yer almaktadır.

195
00:11:55,860 --> 00:11:58,220
Bu arada, derin öğrenme dünyasında

196
00:11:58,220 --> 00:12:02,030
algoritmaların nasıl isimlendirildiği ile ilgili komik bir gerçek şudur ki,

197
00:12:02,030 --> 00:12:05,810
eğer belirli bir etkinlik alanında çalışıyorsanız, o zaman buna boşluk adını veririz.

198
00:12:05,810 --> 00:12:10,710
Genelde boş net veya derin boşluk adını verdiğiniz bir sisteminiz olur.

199
00:12:10,710 --> 00:12:13,095
Yani, yüz tanıması hakkında konuştuk.

200
00:12:13,095 --> 00:12:16,123
işte bu makale FaceNet (yüz neti) olarak adlandırılmıştır.

201
00:12:16,123 --> 00:12:17,465
ve bu son videoda,

202
00:12:17,465 --> 00:12:19,910
sadece derin yüz gördünüz.

203
00:12:19,910 --> 00:12:23,600
Ancak boş net veya derin boş fikiri

204
00:12:23,600 --> 00:12:28,370
derin öğrenme dünyasında algoritmaları isimlendirmek için çok popüler bir yoldur.

205
00:12:28,370 --> 00:12:32,780
Ve eğer algoritmanızı hızlandırmak için üzerinden eğitilebilecek en kullanışlı

206
00:12:32,780 --> 00:12:34,940
üçlüleri seçmek gibi diğer detaylardan bazılarını da öğrenmek isterseniz

207
00:12:34,940 --> 00:12:38,745
bu makaleye bakmak konusunda kendinizi rahat hissedin.

208
00:12:38,745 --> 00:12:40,025
İyi bir makaledir.

209
00:12:40,025 --> 00:12:41,240
Yani, özetlemek için,

210
00:12:41,240 --> 00:12:42,670
Üçüz yitim üzerinden eğitmek için

211
00:12:42,670 --> 00:12:47,060
eğitim setinizi alıp bunu bir çok üçlüye eşlemeniz gerekmektedir.

212
00:12:47,060 --> 00:12:50,550
İşte bir çapa ve pozitif içeren üçlümüz burada

213
00:12:50,550 --> 00:12:54,375
ikisi de aynı insan için ve farklı bir insanın negatifi.

214
00:12:54,375 --> 00:12:58,445
Burada çapa ve pozitifin aynı kişiden olduğu

215
00:12:58,445 --> 00:13:04,315
farklı bir tane var ancak çapa ve negatif farklı kişilerden vb.

216
00:13:04,315 --> 00:13:07,000
Çapa pozitif ve negatif üçlülerinden oluşan

217
00:13:07,000 --> 00:13:09,920
bu eğitim setini tanımladıktan sonra yapacağınız

218
00:13:09,920 --> 00:13:16,740
gradyan inişi kullanarak daha önceki slaytta tanımladığımız bedel fonksiyonunu en aza indirmeye çalışmaktır.

219
00:13:16,740 --> 00:13:20,090
Bunun etkisi iki görsel aynı kişiye ait olduğunda

220
00:13:20,090 --> 00:13:23,640
d'nin küçük olacağı ve iki görsel farklı kişiye ait

221
00:13:23,640 --> 00:13:27,435
olduğunda büyük olacağı

222
00:13:27,435 --> 00:13:33,395
bir kodlamanın sinir ağlarının tüm parametrelerine

223
00:13:33,395 --> 00:13:40,286
yayılması olacaktır.

224
00:13:40,286 --> 00:13:43,805
Üçüz yitim ve bir sinir ağının yüz tanıma kodlaması ve

225
00:13:43,805 --> 00:13:48,200
öğrenmesi konusunda eğitilmesi hakkında söyleyeceklerimiz bu kadar.

226
00:13:48,200 --> 00:13:49,715
Şimdi, ortaya çıkıyor ki

227
00:13:49,715 --> 00:13:54,556
ticari yüz tanıma sistemleri oldukça büyük veri setleri üzerinde eğitiliyor.

228
00:13:54,556 --> 00:13:56,630
Çoğunlukla milyon tane görsel

229
00:13:56,630 --> 00:14:00,275
bazen, sıklıkla olmasa da 10 milyon görsel.

230
00:14:00,275 --> 00:14:05,210
Ve bazı ticari şirketler 100 milyon üzerinde görsel kullanmaktan bahsediyorlar.

231
00:14:05,210 --> 00:14:09,300
Yani bunlar olağanüstü modellerin çok büyük veri setleri.

232
00:14:09,300 --> 00:14:12,800
Üçüz yitim ve bir sinir ağının yüz tanıma için iyi bir

233
00:14:12,800 --> 00:14:18,230
kodlama üzerinde nasıl çalışacağı konusunda eğitilmesi hakkında söyleyeceklerimiz bu kadar.

234
00:14:18,230 --> 00:14:21,500
Şimdi, ortaya çıkıyor ki bugünün yüz tanıma sistemleri

235
00:14:21,500 --> 00:14:24,830
özellikle yitim iyileştirici ticari yüz tanıma sistemleri

236
00:14:24,830 --> 00:14:27,360
çok büyük veri setleri üzerinde eğitilmektedir.

237
00:14:27,360 --> 00:14:30,350
Milyon görsellik veri setleri olağan dışı değil,

238
00:14:30,350 --> 00:14:34,040
bazı şirketler 10 milyon görsel kullanıyorlar ve bazı şirketler

239
00:14:34,040 --> 00:14:38,135
bu sistemleri eğitmeyi denemek için 100 milyon görsele sahip.

240
00:14:38,135 --> 00:14:41,730
Yani bunlar modern standartlarda bile çok büyük veri setleri,

241
00:14:41,730 --> 00:14:45,230
bu veri seti kazançlarını elde etmek kolay değil.

242
00:14:45,230 --> 00:14:48,140
Neyse ki, bu şirketlerden bazıları bu büyük ağları

243
00:14:48,140 --> 00:14:51,875
eğittiler ve parametreleri internete koydular.

244
00:14:51,875 --> 00:14:54,790
Yani, bu ağlardan birini en baştan eğitmeye çalışmak yerine,

245
00:14:54,790 --> 00:14:59,280
paylaşılan veri hacim büyüklüklerinden ötürü bu alan,

246
00:14:59,280 --> 00:15:02,390
her şeyi en baştan yapmak yerine bir başkasının

247
00:15:02,390 --> 00:15:05,313
önceden eğitilmiş modelini indirmenin,

248
00:15:05,313 --> 00:15:07,685
genelde kullanışlı olacağı bir alan.

249
00:15:07,685 --> 00:15:10,130
Ancak, bir başkasının önceden eğitilmiş modelini indirseniz bile,

250
00:15:10,130 --> 00:15:14,195
yine bu fikirleri en baştan bir uygulama için kullanmak durumunda olduğunuzda

251
00:15:14,195 --> 00:15:19,225
veya bu algoritmaların nasıl eğitildiğini bilmek kullanışlı olacaktır.

252
00:15:19,225 --> 00:15:21,405
Üçlü yitim için söyleyeceklerimiz bu kadar.

253
00:15:21,405 --> 00:15:22,640
Bir sonraki videoda,

254
00:15:22,640 --> 00:15:25,280
Size siyam ağlarındaki bazı diğer varyasyonları

255
00:15:25,280 --> 00:15:28,510
ve bu sistemleri nasıl eğiteceğinizi de göstermek istiyorum.

256
00:15:28,510 --> 00:15:30,000
Haydi bir sonraki videoya geçelim.